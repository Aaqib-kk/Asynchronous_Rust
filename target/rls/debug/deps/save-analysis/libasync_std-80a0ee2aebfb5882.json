{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0","program":"/home/mak/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"async-task\"","--cfg","feature=\"crossbeam-channel\"","--cfg","feature=\"crossbeam-deque\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-timer\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=80a0ee2aebfb5882","-C","extra-filename=-80a0ee2aebfb5882","--out-dir","/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps","-L","dependency=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps","--extern","async_task=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libasync_task-90d1bc26977ae9c1.rmeta","--extern","crossbeam_channel=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libcrossbeam_channel-40f400a6a0817a14.rmeta","--extern","crossbeam_deque=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libcrossbeam_deque-ba6623dd023a69fb.rmeta","--extern","crossbeam_utils=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libcrossbeam_utils-56bba9c8b0dc4245.rmeta","--extern","futures_core=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libfutures_core-ab40af1b13ecf0cc.rmeta","--extern","futures_io=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libfutures_io-ab0c28070c7b6f43.rmeta","--extern","futures_timer=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libfutures_timer-e1ec5a2fbd48731d.rmeta","--extern","kv_log_macro=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libkv_log_macro-cb333a9e32960fa6.rmeta","--extern","log=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/liblog-140fd9dd59717c26.rmeta","--extern","memchr=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libmemchr-c14d9e0084f4f5c1.rmeta","--extern","mio=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libmio-1417ba9d9765c9bd.rmeta","--extern","mio_uds=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libmio_uds-e7489bdd68d48f7b.rmeta","--extern","num_cpus=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libnum_cpus-5aa8650d5c4d05ec.rmeta","--extern","once_cell=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libonce_cell-a542225ee5be89ab.rmeta","--extern","pin_project_lite=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libpin_project_lite-f46aa2b127934f4d.rmeta","--extern","pin_utils=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libpin_utils-140d0d463c1227cd.rmeta","--extern","slab=/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libslab-9c1f11f900eb1368.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mak/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mak/Desktop/rust_practice/Asynchronous_Rust/target/rls/debug/deps/libasync_std-80a0ee2aebfb5882.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[1861600819082944257,11655286998503544779]},"crate_root":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src","external_crates":[{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"<::pin_project_lite::pin_project macros>","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[4621264163170888256,3348305257838930911]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","num":16,"id":{"name":"pin_utils","disambiguator":[703111466697874218,14727394544391260986]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[7772697552306836285,15510271671054092543]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[1253375033194512456,4443951272792008320]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":19,"id":{"name":"cfg_if","disambiguator":[4905666532161475415,4099639827115812845]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":20,"id":{"name":"lazy_static","disambiguator":[12264926433258315083,12214580925603842165]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":21,"id":{"name":"slab","disambiguator":[4089959928925939311,368198836259449931]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","num":22,"id":{"name":"futures_timer","disambiguator":[16649779360685927246,18071825104035539452]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","num":23,"id":{"name":"futures_io","disambiguator":[13676139374760389569,16592022081237557319]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":24,"id":{"name":"mio_uds","disambiguator":[2907508122819311525,10439590859704790957]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":25,"id":{"name":"iovec","disambiguator":[17061109687152950122,7668369852560759958]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":26,"id":{"name":"libc","disambiguator":[4461429574520072920,9675922490287764866]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","num":27,"id":{"name":"mio","disambiguator":[15222859364759378966,5491709179431315755]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":28,"id":{"name":"net2","disambiguator":[6719280057764313935,3310586666956990223]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","num":29,"id":{"name":"log","disambiguator":[9541114241915749863,16033895491588922705]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","num":30,"id":{"name":"kv_log_macro","disambiguator":[17652702094000393140,7352336855078903051]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":31,"id":{"name":"crossbeam_deque","disambiguator":[3170783229180321865,15588523777105130705]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":32,"id":{"name":"crossbeam_epoch","disambiguator":[994827494073863988,4006321979240435095]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":33,"id":{"name":"maybe_uninit","disambiguator":[13787388561393359241,12153365983509401142]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":34,"id":{"name":"memoffset","disambiguator":[14636649750192815270,18160301452969257273]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":35,"id":{"name":"scopeguard","disambiguator":[8353942180060268466,9122036225496649467]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":36,"id":{"name":"once_cell","disambiguator":[2949515206518961077,7031935232077518142]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn_blocking.rs","num":37,"id":{"name":"crossbeam_channel","disambiguator":[13396784170857287753,1024601738998726299]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","num":38,"id":{"name":"memchr","disambiguator":[10424658742243726858,12785040814111731563]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","num":39,"id":{"name":"async_task","disambiguator":[1794124370751459740,4100426485756189608]}},{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":40,"id":{"name":"num_cpus","disambiguator":[5865218604459742425,16053094207777123296]}}],"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":9498,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8075},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810141,"byte_end":6810147,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810166,"byte_end":6810173,"line_start":50,"line_end":50,"column_start":18,"column_end":25},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810192,"byte_end":6810199,"line_start":51,"line_end":51,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810216,"byte_end":6810221,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":8075},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6816208,"byte_end":6816214,"line_start":139,"line_end":139,"column_start":39,"column_end":45},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6812436,"byte_end":6812442,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"name":"Future","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1405},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810322,"byte_end":6810329,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810331,"byte_end":6810343,"line_start":60,"line_end":60,"column_start":32,"column_end":44},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":1,"index":2481},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837373,"byte_end":6837378,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":6536},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837380,"byte_end":6837389,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":2894},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837391,"byte_end":6837398,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":2875},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837400,"byte_end":6837410,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":2479},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837412,"byte_end":6837418,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":6604},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837420,"byte_end":6837428,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837455,"byte_end":6837462,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6832},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837464,"byte_end":6837469,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6611},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837496,"byte_end":6837505,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6570},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837532,"byte_end":6837541,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2216},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837543,"byte_end":6837557,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837578,"byte_end":6837582,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2224},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837604,"byte_end":6837610,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2067},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837632,"byte_end":6837637,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837639,"byte_end":6837644,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":84}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837312,"byte_end":6837313,"line_start":272,"line_end":272,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2087},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837689,"byte_end":6837695,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837697,"byte_end":6837703,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837724,"byte_end":6837728,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837749,"byte_end":6837753,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2104},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837755,"byte_end":6837759,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837781,"byte_end":6837786,"line_start":288,"line_end":288,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948209,"byte_end":7948216,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948255,"byte_end":7948259,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948298,"byte_end":7948302,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948341,"byte_end":7948346,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948393,"byte_end":7948403,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948445,"byte_end":7948452,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948494,"byte_end":7948501,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948544,"byte_end":7948552,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8005382,"byte_end":8005391,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8004981,"byte_end":8004985,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"name":"Seek","value":"","parent":{"krate":0,"index":1759}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8010567,"byte_end":8010577,"line_start":84,"line_end":84,"column_start":37,"column_end":47},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8009384,"byte_end":8009389,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"name":"Write","value":"","parent":{"krate":0,"index":1781}},{"kind":"Use","ref_id":{"krate":0,"index":2323},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838151,"byte_end":6838158,"line_start":310,"line_end":310,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2320},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838160,"byte_end":6838166,"line_start":310,"line_end":310,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2281},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838191,"byte_end":6838197,"line_start":312,"line_end":312,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838199,"byte_end":6838205,"line_start":312,"line_end":312,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2303},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838228,"byte_end":6838233,"line_start":313,"line_end":313,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2380},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838235,"byte_end":6838240,"line_start":313,"line_end":313,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2338},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838264,"byte_end":6838270,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2415},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838272,"byte_end":6838278,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2259},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6838302,"byte_end":6838309,"line_start":315,"line_end":315,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":8218},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8127841,"byte_end":8127848,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8220},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8127850,"byte_end":8127859,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8222},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8127861,"byte_end":8127870,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8217},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8127872,"byte_end":8127877,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8204},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130989,"byte_end":8131002,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":1,"index":8197},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8131004,"byte_end":8131015,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":1,"index":8147},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8131017,"byte_end":8131031,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132694,"byte_end":8132706,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2650},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132727,"byte_end":8132735,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2557},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132737,"byte_end":8132749,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132768,"byte_end":8132778,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":1,"index":9492},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132870,"byte_end":8132880,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":2,"index":8075},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839254,"byte_end":6839260,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839311,"byte_end":6839317,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839374,"byte_end":6839383,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2690},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839439,"byte_end":6839448,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839495,"byte_end":6839502,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839506,"byte_end":6839507,"line_start":25,"line_end":25,"column_start":35,"column_end":36},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839554,"byte_end":6839558,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839562,"byte_end":6839563,"line_start":27,"line_end":27,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839610,"byte_end":6839614,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839618,"byte_end":6839619,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839666,"byte_end":6839671,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839675,"byte_end":6839676,"line_start":31,"line_end":31,"column_start":33,"column_end":34},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839733,"byte_end":6839743,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839747,"byte_end":6839748,"line_start":34,"line_end":34,"column_start":47,"column_end":48},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839804,"byte_end":6839811,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839815,"byte_end":6839816,"line_start":36,"line_end":36,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839872,"byte_end":6839879,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839883,"byte_end":6839884,"line_start":38,"line_end":38,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839940,"byte_end":6839948,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839952,"byte_end":6839953,"line_start":40,"line_end":40,"column_start":45,"column_end":46},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6840014,"byte_end":6840024,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850510,"byte_end":6850515,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2784},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850517,"byte_end":6850522,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850543,"byte_end":6850550,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2790},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850552,"byte_end":6850558,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850581,"byte_end":6850590,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":4877},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850592,"byte_end":6850600,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850618,"byte_end":6850622,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":4838},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850624,"byte_end":6850628,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850648,"byte_end":6850654,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2799},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850656,"byte_end":6850662,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850687,"byte_end":6850698,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2808},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850700,"byte_end":6850710,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850729,"byte_end":6850730,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":5,"index":3769},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998578,"byte_end":6998581,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":5,"index":3787},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998583,"byte_end":6998587,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998607,"byte_end":6998612,"line_start":179,"line_end":179,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998614,"byte_end":6998624,"line_start":179,"line_end":179,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998644,"byte_end":6998650,"line_start":180,"line_end":180,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998652,"byte_end":6998667,"line_start":180,"line_end":180,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998669,"byte_end":6998685,"line_start":180,"line_end":180,"column_start":43,"column_end":59},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":2,"index":8146},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032501,"byte_end":7032508,"line_start":122,"line_end":122,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":2,"index":31865},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032510,"byte_end":7032514,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":2,"index":8156},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032516,"byte_end":7032521,"line_start":122,"line_end":122,"column_start":40,"column_end":45},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032544,"byte_end":7032549,"line_start":124,"line_end":124,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":2847},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032574,"byte_end":7032583,"line_start":125,"line_end":125,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/ready.rs","byte_start":8256375,"byte_end":8256380,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":2887},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032659,"byte_end":7032667,"line_start":131,"line_end":131,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032690,"byte_end":7032697,"line_start":132,"line_end":132,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":2929},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032720,"byte_end":7032727,"line_start":133,"line_end":133,"column_start":22,"column_end":29},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3074},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032747,"byte_end":7032751,"line_start":134,"line_end":134,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3223},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032774,"byte_end":7032780,"line_start":135,"line_end":135,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032807,"byte_end":7032817,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3014},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032838,"byte_end":7032843,"line_start":137,"line_end":137,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3022},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032864,"byte_end":7032869,"line_start":138,"line_end":138,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032896,"byte_end":7032907,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3241},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032909,"byte_end":7032917,"line_start":139,"line_end":139,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292780,"byte_end":8292790,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3356},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292811,"byte_end":8292819,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3412},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292835,"byte_end":8292839,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6476},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292860,"byte_end":8292868,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6445},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292888,"byte_end":8292896,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292920,"byte_end":8292931,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6462},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292954,"byte_end":8292965,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":4370},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292985,"byte_end":8292992,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3293},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293017,"byte_end":8293029,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3304},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293045,"byte_end":8293049,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3316},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293071,"byte_end":8293081,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3327},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293107,"byte_end":8293121,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3547},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293142,"byte_end":8293151,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3558},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293171,"byte_end":8293179,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293195,"byte_end":8293199,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293219,"byte_end":8293227,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293248,"byte_end":8293257,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3640},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293283,"byte_end":8293297,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3651},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293319,"byte_end":8293329,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293355,"byte_end":8293369,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3673},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293392,"byte_end":8293403,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3684},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293421,"byte_end":8293427,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293454,"byte_end":8293469,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293497,"byte_end":8293513,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8293530,"byte_end":8293535,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6476},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file_type.rs","byte_start":8337305,"byte_end":8337313,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":3541}},{"kind":"Use","ref_id":{"krate":1,"index":6445},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342675,"byte_end":8342683,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":3554}},{"kind":"Use","ref_id":{"krate":1,"index":6462},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/permissions.rs","byte_start":8357951,"byte_end":8357962,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":1,"index":3766},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378225,"byte_end":8378237,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6973},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378239,"byte_end":8378248,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":4039},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378250,"byte_end":8378257,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6870},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378259,"byte_end":8378265,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6956},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378267,"byte_end":8378282,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":7051},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378284,"byte_end":8378300,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":3767},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378302,"byte_end":8378316,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4384},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378341,"byte_end":8378350,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4395},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378372,"byte_end":8378382,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4425},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378398,"byte_end":8378402,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4431},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378418,"byte_end":8378422,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4709},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378441,"byte_end":8378448,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6745},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428457,"byte_end":8428471,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6765},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428491,"byte_end":8428499,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6680},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428520,"byte_end":8428526,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6710},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428528,"byte_end":8428536,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6713},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428538,"byte_end":8428546,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6652},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428568,"byte_end":8428578,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6674},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428580,"byte_end":8428592,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6677},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428594,"byte_end":8428606,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4044},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428624,"byte_end":8428637,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4756},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428653,"byte_end":8428661,"line_start":65,"line_end":65,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428663,"byte_end":8428674,"line_start":65,"line_end":65,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4774},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428676,"byte_end":8428685,"line_start":65,"line_end":65,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4791},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428701,"byte_end":8428710,"line_start":66,"line_end":66,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":4008}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":9498,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":1105},{"krate":0,"index":1375},{"krate":0,"index":3260},{"krate":0,"index":3723},{"krate":0,"index":4008}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"! # Async version of the Rust standard library","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"! shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"! [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"! in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [I/O]: io/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"! [multithreading]: task/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"! [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"! [`use async_std::future`]: future/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"! [crates.io]: https://crates.io","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! [`Future`]: future/trait.Future.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"! [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # How to read this documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! bar</a> at the top of the page.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! * [`async_std::*` modules](#modules)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"! * [Async macros](#macros)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"! * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"! * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"! * [Examples](#examples)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"! written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"! generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"! its documentation!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"! begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"! page to collapse it into a more skimmable view.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"! encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"! quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"! functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"! lightweight tasks.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! * [The async-std website](https://async.rs/)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"! * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"! * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"! * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"! * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # What is in the `async-std` documentation?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! First, `async-std` is divided into a number of focused","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"! modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"! the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"! of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"! prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"! [`async_std::os`]: os/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"! [`async_std::task`]: task/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"! [lists them on this page](#macros).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! # Contributing changes to the documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"! The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"! To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"! pull requests for your suggested changes.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"! improved, submit a PR, or chat with us first on","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"! [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! # A tour of `async-std`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"! features of `async-std`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Platform abstractions and I/O","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"! abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"! Unix derivatives.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"! [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"! contains further primitive shared memory types, including [`channel`],","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5118,"byte_end":5192,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"! which contains the channel types for message passing.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5193,"byte_end":5250,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5251,"byte_end":5254,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [files]: fs/struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5255,"byte_end":5287,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"! [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5288,"byte_end":5324,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"! [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5325,"byte_end":5361,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"! [`io`]: fs/struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5362,"byte_end":5393,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"! [`sync`]: sync/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5394,"byte_end":5423,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"! [`channel`]: sync/fn.channel.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5424,"byte_end":5461,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5462,"byte_end":5465,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! ## Timeouts, intervals, and delays","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5466,"byte_end":5504,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5505,"byte_end":5508,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5509,"byte_end":5569,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5570,"byte_end":5573,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5574,"byte_end":5644,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"! * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5645,"byte_end":5712,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"! * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5713,"byte_end":5789,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"!   set interval.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5790,"byte_end":5809,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5810,"byte_end":5813,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5814,"byte_end":5853,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"! [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5854,"byte_end":5903,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"! [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5904,"byte_end":5951,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5952,"byte_end":5955,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5956,"byte_end":5970,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5971,"byte_end":5974,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5975,"byte_end":6054,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"! This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6055,"byte_end":6130,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"! compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6131,"byte_end":6204,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"! executing tasks.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6205,"byte_end":6225,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6226,"byte_end":6229,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Call an async function from the main function:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6230,"byte_end":6280,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6281,"byte_end":6284,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6285,"byte_end":6292,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"! async fn say_hello() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6293,"byte_end":6319,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6320,"byte_end":6354,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6355,"byte_end":6360,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6361,"byte_end":6364,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6365,"byte_end":6387,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6388,"byte_end":6409,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"!     say_hello().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6410,"byte_end":6436,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6437,"byte_end":6442,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6443,"byte_end":6450,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6451,"byte_end":6454,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6455,"byte_end":6526,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6527,"byte_end":6530,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6531,"byte_end":6538,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6539,"byte_end":6569,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6570,"byte_end":6573,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6574,"byte_end":6596,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6597,"byte_end":6618,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"!     let a = async { 1u8 };","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6619,"byte_end":6649,"line_start":159,"line_end":159,"column_start":1,"column_end":31}},{"value":"!     let b = async { 2u8 };","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6650,"byte_end":6680,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"!     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6681,"byte_end":6728,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6729,"byte_end":6734,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6735,"byte_end":6742,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6743,"byte_end":6746,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6747,"byte_end":6824,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6825,"byte_end":6828,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6829,"byte_end":6842,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6843,"byte_end":6877,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6878,"byte_end":6881,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6882,"byte_end":6904,"line_start":170,"line_end":170,"column_start":1,"column_end":23}},{"value":"! async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6905,"byte_end":6949,"line_start":171,"line_end":171,"column_start":1,"column_end":45}},{"value":"!     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6950,"byte_end":7012,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"!     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7013,"byte_end":7071,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7072,"byte_end":7075,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"!     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7076,"byte_end":7114,"line_start":175,"line_end":175,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7115,"byte_end":7118,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7119,"byte_end":7133,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"!         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7134,"byte_end":7199,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"!         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7200,"byte_end":7266,"line_start":179,"line_end":179,"column_start":1,"column_end":67}},{"value":"!         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7267,"byte_end":7339,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"!     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7340,"byte_end":7349,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7350,"byte_end":7355,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7356,"byte_end":7363,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"! [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7364,"byte_end":7409,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7410,"byte_end":7413,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7414,"byte_end":7428,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7429,"byte_end":7432,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7433,"byte_end":7454,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7455,"byte_end":7464,"line_start":189,"line_end":189,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7465,"byte_end":7507,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7508,"byte_end":7606,"line_start":191,"line_end":191,"column_start":1,"column_end":99}},{"value":"! ><code>unstable</code></span>","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7607,"byte_end":7640,"line_start":192,"line_end":192,"column_start":1,"column_end":34}},{"value":"! are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7641,"byte_end":7709,"line_start":193,"line_end":193,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7710,"byte_end":7713,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7714,"byte_end":7725,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7726,"byte_end":7754,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7755,"byte_end":7776,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"! features = [\"unstable\"]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7777,"byte_end":7804,"line_start":198,"line_end":198,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7805,"byte_end":7812,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7813,"byte_end":7816,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7817,"byte_end":7838,"line_start":201,"line_end":201,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7839,"byte_end":7848,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7849,"byte_end":7891,"line_start":203,"line_end":203,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7892,"byte_end":7990,"line_start":204,"line_end":204,"column_start":1,"column_end":99}},{"value":"! ><code>attributes</code></span>","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7991,"byte_end":8026,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"! are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8027,"byte_end":8097,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8098,"byte_end":8101,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8102,"byte_end":8113,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8114,"byte_end":8142,"line_start":209,"line_end":209,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8143,"byte_end":8164,"line_start":210,"line_end":210,"column_start":1,"column_end":22}},{"value":"! features = [\"attributes\"]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8165,"byte_end":8194,"line_start":211,"line_end":211,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8195,"byte_end":8202,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8203,"byte_end":8206,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8207,"byte_end":8284,"line_start":214,"line_end":214,"column_start":1,"column_end":78}},{"value":"! only enabling the `std` Cargo feature:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8285,"byte_end":8327,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8328,"byte_end":8331,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8332,"byte_end":8343,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8344,"byte_end":8372,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8373,"byte_end":8394,"line_start":219,"line_end":219,"column_start":1,"column_end":22}},{"value":"! default-features = false","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8395,"byte_end":8423,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"! features = [\"std\"]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8424,"byte_end":8446,"line_start":221,"line_end":221,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8447,"byte_end":8454,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8505,"byte_end":8576,"line_start":225,"line_end":225,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8577,"byte_end":8634,"line_start":226,"line_end":226,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8822,"byte_end":8850,"line_start":230,"line_end":230,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":58},{"krate":0,"index":79},{"krate":0,"index":1391},{"krate":0,"index":1394}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Asynchronous values.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807633,"byte_end":6807657,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807658,"byte_end":6807661,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Base Futures Concurrency","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807662,"byte_end":6807693,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807694,"byte_end":6807697,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807698,"byte_end":6807771,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807772,"byte_end":6807848,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807849,"byte_end":6807922,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"! operations converts multiple future into a single future that returns the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6807923,"byte_end":6808000,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! first output.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808001,"byte_end":6808018,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808019,"byte_end":6808022,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! For operating on futures the following functions can be used:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808023,"byte_end":6808088,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808089,"byte_end":6808092,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808093,"byte_end":6808165,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"! | ---                | ---              | ---                      |","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808166,"byte_end":6808238,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"! | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808239,"byte_end":6808309,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808310,"byte_end":6808377,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808378,"byte_end":6808381,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Fallible Futures Concurrency","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808382,"byte_end":6808417,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808418,"byte_end":6808421,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808422,"byte_end":6808501,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808502,"byte_end":6808588,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"! and will behave slightly differently from their base variants.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808589,"byte_end":6808655,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808656,"byte_end":6808659,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808660,"byte_end":6808730,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"! futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808731,"byte_end":6808803,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"! \"short-circuiting\".","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808804,"byte_end":6808827,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808828,"byte_end":6808831,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808832,"byte_end":6808905,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"! completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808906,"byte_end":6808983,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6808984,"byte_end":6809057,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809058,"byte_end":6809105,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809106,"byte_end":6809109,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809110,"byte_end":6809190,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809191,"byte_end":6809271,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! work on `Result`, and their respective semantics:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809272,"byte_end":6809325,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809326,"byte_end":6809329,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809330,"byte_end":6809416,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"! | ---                    | ---                            | ---                  |","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809417,"byte_end":6809503,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"! | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809504,"byte_end":6809592,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"! | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809593,"byte_end":6809704,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"! | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809705,"byte_end":6809790,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"! | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809791,"byte_end":6809895,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809896,"byte_end":6809899,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809900,"byte_end":6809951,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"! [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6809952,"byte_end":6810011,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"! [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810012,"byte_end":6810063,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"! [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6810064,"byte_end":6810123,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1388},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6816184,"byte_end":6816193,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[],"decl_id":null,"docs":"\n        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826753,"byte_end":6826760,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826361,"byte_end":6826391,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826392,"byte_end":6826395,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826396,"byte_end":6826410,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826411,"byte_end":6826414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826415,"byte_end":6826422,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826423,"byte_end":6826462,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826463,"byte_end":6826468,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826469,"byte_end":6826497,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826498,"byte_end":6826501,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826502,"byte_end":6826528,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826529,"byte_end":6826551,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826552,"byte_end":6826555,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826556,"byte_end":6826593,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826594,"byte_end":6826626,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826627,"byte_end":6826630,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826631,"byte_end":6826689,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826690,"byte_end":6826716,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826717,"byte_end":6826722,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826723,"byte_end":6826731,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826732,"byte_end":6826739,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827695,"byte_end":6827702,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <F, T> (f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827180,"byte_end":6827251,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827252,"byte_end":6827255,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827256,"byte_end":6827322,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827323,"byte_end":6827326,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827327,"byte_end":6827341,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827342,"byte_end":6827345,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827346,"byte_end":6827353,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827354,"byte_end":6827393,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827394,"byte_end":6827399,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827400,"byte_end":6827426,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827427,"byte_end":6827468,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827469,"byte_end":6827472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827473,"byte_end":6827532,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827533,"byte_end":6827579,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827580,"byte_end":6827585,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827586,"byte_end":6827589,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827590,"byte_end":6827658,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827659,"byte_end":6827664,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827665,"byte_end":6827673,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827674,"byte_end":6827681,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828531,"byte_end":6828536,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (val: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828142,"byte_end":6828177,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828178,"byte_end":6828181,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828182,"byte_end":6828250,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828251,"byte_end":6828254,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828255,"byte_end":6828341,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828342,"byte_end":6828345,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828346,"byte_end":6828360,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828361,"byte_end":6828364,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828365,"byte_end":6828372,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828373,"byte_end":6828412,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828413,"byte_end":6828418,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828419,"byte_end":6828445,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828446,"byte_end":6828449,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828450,"byte_end":6828494,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828495,"byte_end":6828500,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828501,"byte_end":6828509,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6828510,"byte_end":6828517,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1405},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043406,"byte_end":7043413,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> Result<T, TimeoutError>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7042878,"byte_end":7042936,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7042937,"byte_end":7042940,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7042941,"byte_end":7042994,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7042995,"byte_end":7043046,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043047,"byte_end":7043050,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043051,"byte_end":7043065,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043066,"byte_end":7043069,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043070,"byte_end":7043077,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043078,"byte_end":7043152,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043153,"byte_end":7043158,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043159,"byte_end":7043187,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043188,"byte_end":7043191,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043192,"byte_end":7043218,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043219,"byte_end":7043222,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043223,"byte_end":7043263,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043264,"byte_end":7043303,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043304,"byte_end":7043360,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043361,"byte_end":7043366,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043367,"byte_end":7043384,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043385,"byte_end":7043392,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044611,"byte_end":7044623,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1421}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044508,"byte_end":7044554,"line_start":75,"line_end":75,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":1434},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1471},{"krate":0,"index":1565},{"krate":0,"index":1759},{"krate":0,"index":1781},{"krate":0,"index":1883},{"krate":0,"index":1901},{"krate":0,"index":1948},{"krate":0,"index":1986},{"krate":0,"index":2011},{"krate":0,"index":2057},{"krate":0,"index":2078},{"krate":0,"index":2094},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2269},{"krate":0,"index":2289},{"krate":0,"index":2314},{"krate":0,"index":2326}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828586,"byte_end":6828655,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828656,"byte_end":6828659,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828660,"byte_end":6828737,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! when doing input and output. The most core part of this module is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828738,"byte_end":6828807,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"! the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828808,"byte_end":6828864,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"! most general interface for reading and writing input and output.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828865,"byte_end":6828933,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828934,"byte_end":6828937,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::io`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828938,"byte_end":6828989,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828990,"byte_end":6828993,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6828994,"byte_end":6829054,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829055,"byte_end":6829058,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Read and Write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829059,"byte_end":6829079,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829080,"byte_end":6829083,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829084,"byte_end":6829163,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829164,"byte_end":6829239,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829240,"byte_end":6829315,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"! this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829316,"byte_end":6829395,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829396,"byte_end":6829475,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! [`File`]s:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829476,"byte_end":6829490,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829491,"byte_end":6829494,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829495,"byte_end":6829508,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829509,"byte_end":6829537,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829538,"byte_end":6829568,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829569,"byte_end":6829572,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829573,"byte_end":6829647,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829648,"byte_end":6829653,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829654,"byte_end":6829699,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829700,"byte_end":6829729,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829730,"byte_end":6829733,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829734,"byte_end":6829760,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829761,"byte_end":6829800,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829801,"byte_end":6829804,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829805,"byte_end":6829851,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829852,"byte_end":6829857,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829858,"byte_end":6829875,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829876,"byte_end":6829883,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829884,"byte_end":6829887,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829888,"byte_end":6829970,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"! nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6829971,"byte_end":6830048,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"! of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830049,"byte_end":6830113,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830114,"byte_end":6830117,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Seek and BufRead","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830118,"byte_end":6830141,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830142,"byte_end":6830145,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830146,"byte_end":6830221,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830222,"byte_end":6830292,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830293,"byte_end":6830370,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"! coming from:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830371,"byte_end":6830387,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830388,"byte_end":6830391,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830392,"byte_end":6830405,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830406,"byte_end":6830434,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"! use async_std::io::SeekFrom;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830435,"byte_end":6830467,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830468,"byte_end":6830498,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830499,"byte_end":6830502,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830503,"byte_end":6830577,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830578,"byte_end":6830583,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830584,"byte_end":6830629,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830630,"byte_end":6830659,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830660,"byte_end":6830663,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! // skip to the last 10 bytes of the file","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830664,"byte_end":6830708,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"! f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830709,"byte_end":6830747,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830748,"byte_end":6830751,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830752,"byte_end":6830778,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830779,"byte_end":6830818,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830819,"byte_end":6830822,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830823,"byte_end":6830869,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830870,"byte_end":6830875,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830876,"byte_end":6830893,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830894,"byte_end":6830901,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830902,"byte_end":6830905,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830906,"byte_end":6830992,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"! to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6830993,"byte_end":6831071,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831072,"byte_end":6831075,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## BufReader and BufWriter","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831076,"byte_end":6831106,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831107,"byte_end":6831110,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831111,"byte_end":6831192,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831193,"byte_end":6831267,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831268,"byte_end":6831349,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"! readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831350,"byte_end":6831424,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"! calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831425,"byte_end":6831499,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831500,"byte_end":6831503,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831504,"byte_end":6831580,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! methods to any reader:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831581,"byte_end":6831607,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831608,"byte_end":6831611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831612,"byte_end":6831625,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831626,"byte_end":6831654,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831655,"byte_end":6831688,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831689,"byte_end":6831719,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831720,"byte_end":6831723,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831724,"byte_end":6831798,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831799,"byte_end":6831804,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831805,"byte_end":6831846,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"! let mut reader = BufReader::new(f);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831847,"byte_end":6831886,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"! let mut buffer = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831887,"byte_end":6831922,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831923,"byte_end":6831926,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! // read a line into buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831927,"byte_end":6831957,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"! reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6831958,"byte_end":6831999,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832000,"byte_end":6832003,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! println!(\"{}\", buffer);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832004,"byte_end":6832031,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832032,"byte_end":6832037,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832038,"byte_end":6832055,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832056,"byte_end":6832063,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832064,"byte_end":6832067,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832068,"byte_end":6832149,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"! to [`write`][`Write::write`]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832150,"byte_end":6832183,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832184,"byte_end":6832187,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832188,"byte_end":6832201,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832202,"byte_end":6832230,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832231,"byte_end":6832265,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"! use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832266,"byte_end":6832299,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832300,"byte_end":6832303,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832304,"byte_end":6832378,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832379,"byte_end":6832384,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"! let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832385,"byte_end":6832428,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"! {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832429,"byte_end":6832434,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"!     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832435,"byte_end":6832478,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832479,"byte_end":6832482,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     // write a byte to the buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832483,"byte_end":6832520,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!     writer.write(&[42]).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832521,"byte_end":6832556,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"! } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832557,"byte_end":6832617,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"! //","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832618,"byte_end":6832624,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832625,"byte_end":6832630,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832631,"byte_end":6832648,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832649,"byte_end":6832656,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832657,"byte_end":6832660,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ## Standard input and output","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832661,"byte_end":6832693,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832694,"byte_end":6832697,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! A very common source of input is standard input:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832698,"byte_end":6832750,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832751,"byte_end":6832754,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832755,"byte_end":6832768,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832769,"byte_end":6832791,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832792,"byte_end":6832795,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832796,"byte_end":6832870,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832871,"byte_end":6832876,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832877,"byte_end":6832911,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832912,"byte_end":6832915,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832916,"byte_end":6832961,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832962,"byte_end":6832965,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6832966,"byte_end":6833010,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833011,"byte_end":6833016,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833017,"byte_end":6833034,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833035,"byte_end":6833042,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833043,"byte_end":6833046,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833047,"byte_end":6833126,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"! a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833127,"byte_end":6833196,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"! or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833197,"byte_end":6833261,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833262,"byte_end":6833265,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833266,"byte_end":6833279,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833280,"byte_end":6833302,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833303,"byte_end":6833306,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833307,"byte_end":6833381,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833382,"byte_end":6833387,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833388,"byte_end":6833422,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833423,"byte_end":6833426,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833427,"byte_end":6833480,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833481,"byte_end":6833486,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833487,"byte_end":6833504,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833505,"byte_end":6833512,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833513,"byte_end":6833516,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! And a very common source of output is standard output:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833517,"byte_end":6833575,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833576,"byte_end":6833579,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833580,"byte_end":6833593,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833594,"byte_end":6833616,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833617,"byte_end":6833651,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833652,"byte_end":6833655,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833656,"byte_end":6833730,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833731,"byte_end":6833736,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"! io::stdout().write(&[42]).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833737,"byte_end":6833774,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833775,"byte_end":6833780,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833781,"byte_end":6833798,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833799,"byte_end":6833806,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833807,"byte_end":6833810,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833811,"byte_end":6833890,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"! [`println!`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833891,"byte_end":6833908,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833909,"byte_end":6833912,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ## Iterator types","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833913,"byte_end":6833934,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833935,"byte_end":6833938,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6833939,"byte_end":6834013,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"! ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834014,"byte_end":6834090,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"! lines:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834091,"byte_end":6834101,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834102,"byte_end":6834105,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834106,"byte_end":6834119,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834120,"byte_end":6834148,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834149,"byte_end":6834182,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834183,"byte_end":6834213,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834214,"byte_end":6834217,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834218,"byte_end":6834292,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834293,"byte_end":6834298,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834299,"byte_end":6834340,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! let reader = BufReader::new(f);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834341,"byte_end":6834376,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834377,"byte_end":6834380,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! let mut lines = reader.lines();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834381,"byte_end":6834416,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"! while let Some(line) = lines.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834417,"byte_end":6834464,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"!     println!(\"{}\", line?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834465,"byte_end":6834495,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834496,"byte_end":6834501,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834502,"byte_end":6834507,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834508,"byte_end":6834525,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834526,"byte_end":6834533,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834534,"byte_end":6834537,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834538,"byte_end":6834554,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834555,"byte_end":6834558,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834559,"byte_end":6834641,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"! features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834642,"byte_end":6834723,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"! from standard input to standard output:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834724,"byte_end":6834767,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834768,"byte_end":6834771,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834772,"byte_end":6834785,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834786,"byte_end":6834808,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834809,"byte_end":6834812,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834813,"byte_end":6834887,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834888,"byte_end":6834893,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"! io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834894,"byte_end":6834951,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834952,"byte_end":6834957,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834958,"byte_end":6834975,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834976,"byte_end":6834983,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834984,"byte_end":6834987,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! [functions-list]: #functions-1","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6834988,"byte_end":6835022,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835023,"byte_end":6835026,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## io::Result","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835027,"byte_end":6835044,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835045,"byte_end":6835048,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835049,"byte_end":6835120,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"! as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835121,"byte_end":6835200,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"! can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835201,"byte_end":6835282,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"! module use the [`?` operator]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835283,"byte_end":6835317,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835318,"byte_end":6835321,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835322,"byte_end":6835329,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"! #![allow(dead_code)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835330,"byte_end":6835354,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"! use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835355,"byte_end":6835377,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835378,"byte_end":6835381,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835382,"byte_end":6835427,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"!     let mut input = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835428,"byte_end":6835466,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835467,"byte_end":6835470,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"!     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835471,"byte_end":6835520,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835521,"byte_end":6835524,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"!     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835525,"byte_end":6835573,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835574,"byte_end":6835577,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835578,"byte_end":6835592,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835593,"byte_end":6835598,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835599,"byte_end":6835606,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835607,"byte_end":6835610,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835611,"byte_end":6835691,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"! common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835692,"byte_end":6835776,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"! return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835777,"byte_end":6835861,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"! to read the line and print it, so we use `()`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835862,"byte_end":6835912,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835913,"byte_end":6835916,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! ## Platform-specific behavior","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835917,"byte_end":6835950,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835951,"byte_end":6835954,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"! Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6835955,"byte_end":6836036,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"! what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836037,"byte_end":6836117,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"! applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836118,"byte_end":6836205,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"! any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836206,"byte_end":6836296,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"! contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836297,"byte_end":6836383,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"! time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836384,"byte_end":6836447,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836448,"byte_end":6836451,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! [`Read`]: trait.Read.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836452,"byte_end":6836481,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"! [`Write`]: trait.Write.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836482,"byte_end":6836513,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"! [`Seek`]: trait.Seek.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836514,"byte_end":6836543,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"! [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836544,"byte_end":6836579,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"! [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836580,"byte_end":6836616,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"! [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836617,"byte_end":6836664,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"! [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836665,"byte_end":6836703,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"! [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836704,"byte_end":6836744,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"! [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836745,"byte_end":6836785,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"! [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836786,"byte_end":6836839,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"! [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836840,"byte_end":6836874,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"! [`println!`]: ../macro.println.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836875,"byte_end":6836914,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"! [`Lines`]: struct.Lines.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836915,"byte_end":6836947,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"! [`io::Result`]: type.Result.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836948,"byte_end":6836984,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"! [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6836985,"byte_end":6837069,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"! [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837070,"byte_end":6837119,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"! [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837120,"byte_end":6837189,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"! [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837190,"byte_end":6837276,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":1462},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! The async I/O prelude.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7947911,"byte_end":7947937,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7947938,"byte_end":7947941,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7947942,"byte_end":7948022,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948023,"byte_end":7948083,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948084,"byte_end":7948087,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948088,"byte_end":7948095,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_imports)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948096,"byte_end":7948127,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948128,"byte_end":7948162,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":7948163,"byte_end":7948170,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6832},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":7961490,"byte_end":7961495,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1504},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":7963471,"byte_end":7963485,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":7963420,"byte_end":7963459,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":7964999,"byte_end":7965014,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":7964948,"byte_end":7964987,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6784},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":7966268,"byte_end":7966273,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2124},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7950967,"byte_end":7950977,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2132}],"decl_id":null,"docs":"\n        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7952741,"byte_end":7952751,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntilFuture<'a, Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7954540,"byte_end":7954549,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLineFuture<'a, Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7956007,"byte_end":7956012,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7957776,"byte_end":7957781,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983850,"byte_end":7983855,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":2135}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983592,"byte_end":7983634,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983635,"byte_end":7983638,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983639,"byte_end":7983709,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983710,"byte_end":7983773,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983774,"byte_end":7983777,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983778,"byte_end":7983821,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6696},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985642,"byte_end":7985647,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986371,"byte_end":7986381,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985820,"byte_end":7985876,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985881,"byte_end":7985884,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985889,"byte_end":7985903,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985908,"byte_end":7985911,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985916,"byte_end":7985929,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985934,"byte_end":7986014,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986019,"byte_end":7986024,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986029,"byte_end":7986059,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986064,"byte_end":7986092,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986097,"byte_end":7986100,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986105,"byte_end":7986153,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986158,"byte_end":7986206,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986211,"byte_end":7986214,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986219,"byte_end":7986260,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986265,"byte_end":7986315,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986320,"byte_end":7986325,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986330,"byte_end":7986347,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986352,"byte_end":7986359,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986999,"byte_end":7987006,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986445,"byte_end":7986507,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986512,"byte_end":7986515,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986520,"byte_end":7986534,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986539,"byte_end":7986542,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986547,"byte_end":7986560,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986565,"byte_end":7986645,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986650,"byte_end":7986655,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986660,"byte_end":7986690,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986695,"byte_end":7986723,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986728,"byte_end":7986731,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986736,"byte_end":7986784,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986789,"byte_end":7986837,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986842,"byte_end":7986845,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986850,"byte_end":7986891,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986896,"byte_end":7986943,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986948,"byte_end":7986953,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986958,"byte_end":7986975,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7986980,"byte_end":7986987,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987822,"byte_end":7987829,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987075,"byte_end":7987145,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987150,"byte_end":7987153,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987158,"byte_end":7987231,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987236,"byte_end":7987309,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987314,"byte_end":7987326,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987331,"byte_end":7987334,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987339,"byte_end":7987353,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987358,"byte_end":7987361,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987366,"byte_end":7987379,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987384,"byte_end":7987464,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987469,"byte_end":7987474,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987479,"byte_end":7987509,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987514,"byte_end":7987542,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987547,"byte_end":7987550,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987555,"byte_end":7987603,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987608,"byte_end":7987656,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987661,"byte_end":7987664,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987669,"byte_end":7987714,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987719,"byte_end":7987766,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987771,"byte_end":7987776,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987781,"byte_end":7987798,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987803,"byte_end":7987810,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":7991110,"byte_end":7991120,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":7991059,"byte_end":7991098,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1639},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":7991711,"byte_end":7991726,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":7991660,"byte_end":7991699,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1657},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7992645,"byte_end":7992660,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7992594,"byte_end":7992633,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":7995184,"byte_end":7995202,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":7995133,"byte_end":7995172,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":7996659,"byte_end":7996677,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":7996608,"byte_end":7996647,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6689},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997586,"byte_end":7997590,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6691},{"krate":0,"index":6692}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998480,"byte_end":7998485,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997702,"byte_end":7997776,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997781,"byte_end":7997796,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997801,"byte_end":7997804,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997809,"byte_end":7997819,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997824,"byte_end":7997827,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997832,"byte_end":7997909,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997914,"byte_end":7997978,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997983,"byte_end":7997986,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997991,"byte_end":7998020,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998025,"byte_end":7998028,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998033,"byte_end":7998047,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998052,"byte_end":7998055,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998060,"byte_end":7998073,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998078,"byte_end":7998158,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998163,"byte_end":7998168,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998173,"byte_end":7998203,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998208,"byte_end":7998236,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998241,"byte_end":7998244,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998249,"byte_end":7998290,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998295,"byte_end":7998298,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998303,"byte_end":7998333,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998338,"byte_end":7998365,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998370,"byte_end":7998373,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998378,"byte_end":7998420,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998425,"byte_end":7998430,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998435,"byte_end":7998456,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998461,"byte_end":7998468,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999274,"byte_end":7999283,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998532,"byte_end":7998603,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998608,"byte_end":7998682,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998687,"byte_end":7998762,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998767,"byte_end":7998791,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998796,"byte_end":7998799,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998804,"byte_end":7998818,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998823,"byte_end":7998826,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998831,"byte_end":7998844,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998849,"byte_end":7998929,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998934,"byte_end":7998939,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998944,"byte_end":7998974,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7998979,"byte_end":7999007,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999012,"byte_end":7999015,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999020,"byte_end":7999061,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999066,"byte_end":7999069,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999074,"byte_end":7999104,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999109,"byte_end":7999140,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999145,"byte_end":7999170,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999175,"byte_end":7999178,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999183,"byte_end":7999218,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999223,"byte_end":7999228,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999233,"byte_end":7999250,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999255,"byte_end":7999262,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999900,"byte_end":7999910,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999348,"byte_end":7999402,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999407,"byte_end":7999410,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999415,"byte_end":7999429,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999434,"byte_end":7999437,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999442,"byte_end":7999455,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999460,"byte_end":7999540,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999545,"byte_end":7999550,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999555,"byte_end":7999585,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999590,"byte_end":7999618,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999623,"byte_end":7999626,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999631,"byte_end":7999675,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999680,"byte_end":7999683,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999688,"byte_end":7999716,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999721,"byte_end":7999755,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999760,"byte_end":7999796,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999801,"byte_end":7999804,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999809,"byte_end":7999844,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999849,"byte_end":7999854,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999859,"byte_end":7999876,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999881,"byte_end":7999888,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000495,"byte_end":8000502,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7999954,"byte_end":8000000,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000005,"byte_end":8000008,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000013,"byte_end":8000027,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000032,"byte_end":8000035,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000040,"byte_end":8000053,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000058,"byte_end":8000138,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000143,"byte_end":8000148,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000153,"byte_end":8000183,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000188,"byte_end":8000216,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000221,"byte_end":8000224,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000229,"byte_end":8000273,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000278,"byte_end":8000281,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000286,"byte_end":8000314,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000319,"byte_end":8000353,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000358,"byte_end":8000394,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000399,"byte_end":8000402,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000407,"byte_end":8000439,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000444,"byte_end":8000449,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000454,"byte_end":8000471,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000476,"byte_end":8000483,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001277,"byte_end":8001284,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000549,"byte_end":8000603,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000608,"byte_end":8000611,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000616,"byte_end":8000689,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000694,"byte_end":8000766,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000771,"byte_end":8000782,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000787,"byte_end":8000790,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000795,"byte_end":8000809,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000814,"byte_end":8000817,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000822,"byte_end":8000835,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000840,"byte_end":8000920,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000925,"byte_end":8000930,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000935,"byte_end":8000965,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8000970,"byte_end":8000998,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001003,"byte_end":8001006,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001011,"byte_end":8001055,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001060,"byte_end":8001063,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001068,"byte_end":8001096,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001101,"byte_end":8001135,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001140,"byte_end":8001176,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001181,"byte_end":8001184,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001189,"byte_end":8001221,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001226,"byte_end":8001231,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001236,"byte_end":8001253,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001258,"byte_end":8001265,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2151},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7969304,"byte_end":7969311,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167}],"decl_id":null,"docs":"\n        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7970504,"byte_end":7970508,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7971300,"byte_end":7971313,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectoredFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7972470,"byte_end":7972481,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEndFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7973619,"byte_end":7973633,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToStringFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7975714,"byte_end":7975724,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExactFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7977078,"byte_end":7977082,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7978297,"byte_end":7978303,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7979305,"byte_end":7979310,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"fn (self) -> Bytes<Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7980445,"byte_end":7980450,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1770},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8007599,"byte_end":8007609,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8007548,"byte_end":8007587,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2181},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8005361,"byte_end":8005368,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":2184}],"decl_id":null,"docs":"\n        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8006102,"byte_end":8006106,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> SeekFuture<'_, Self>","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":"\n            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8019278,"byte_end":8019289,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8019227,"byte_end":8019266,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1808},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8019790,"byte_end":8019801,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8019739,"byte_end":8019778,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1827},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8020384,"byte_end":8020398,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8020333,"byte_end":8020372,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1845},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8021316,"byte_end":8021330,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8021253,"byte_end":8021292,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8021293,"byte_end":8021304,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8022940,"byte_end":8022959,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8022889,"byte_end":8022928,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2197},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8010545,"byte_end":8010553,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207}],"decl_id":null,"docs":"\n        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8011470,"byte_end":8011475,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8012277,"byte_end":8012282,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"fn (&mut self) -> FlushFuture<'_, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8013005,"byte_end":8013019,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectoredFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8014116,"byte_end":8014125,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAllFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8015334,"byte_end":8015343,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"fn <'a> (&'a mut self, fmt: std::fmt::Arguments<'_>) -> WriteFmtFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6611},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026209,"byte_end":8026218,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026849,"byte_end":8026852,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026367,"byte_end":8026426,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026431,"byte_end":8026434,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026439,"byte_end":8026512,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026517,"byte_end":8026520,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026525,"byte_end":8026539,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026544,"byte_end":8026547,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026552,"byte_end":8026565,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026570,"byte_end":8026644,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026649,"byte_end":8026654,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026659,"byte_end":8026687,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026692,"byte_end":8026725,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026730,"byte_end":8026733,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026738,"byte_end":8026793,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026798,"byte_end":8026803,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026808,"byte_end":8026825,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026830,"byte_end":8026837,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027365,"byte_end":8027378,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026950,"byte_end":8027012,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027017,"byte_end":8027020,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027025,"byte_end":8027039,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027044,"byte_end":8027047,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027052,"byte_end":8027065,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027070,"byte_end":8027144,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027149,"byte_end":8027154,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027159,"byte_end":8027187,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027192,"byte_end":8027225,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027230,"byte_end":8027233,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027238,"byte_end":8027309,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027314,"byte_end":8027319,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027324,"byte_end":8027341,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027346,"byte_end":8027353,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028099,"byte_end":8028106,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027604,"byte_end":8027650,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027655,"byte_end":8027658,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027663,"byte_end":8027729,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027734,"byte_end":8027737,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027742,"byte_end":8027756,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027761,"byte_end":8027764,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027769,"byte_end":8027782,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027787,"byte_end":8027861,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027866,"byte_end":8027871,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027876,"byte_end":8027904,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027909,"byte_end":8027942,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027947,"byte_end":8027950,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027955,"byte_end":8028010,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028015,"byte_end":8028043,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028048,"byte_end":8028053,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028058,"byte_end":8028075,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028080,"byte_end":8028087,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028666,"byte_end":8028673,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028153,"byte_end":8028207,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028212,"byte_end":8028215,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028220,"byte_end":8028286,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028291,"byte_end":8028294,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028299,"byte_end":8028313,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028318,"byte_end":8028321,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028326,"byte_end":8028339,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028344,"byte_end":8028418,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028423,"byte_end":8028428,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028433,"byte_end":8028461,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028466,"byte_end":8028499,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028504,"byte_end":8028507,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028512,"byte_end":8028574,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028579,"byte_end":8028610,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028615,"byte_end":8028620,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028625,"byte_end":8028642,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028647,"byte_end":8028654,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029470,"byte_end":8029476,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8028971,"byte_end":8029018,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029023,"byte_end":8029026,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029031,"byte_end":8029100,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029105,"byte_end":8029108,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029113,"byte_end":8029127,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029132,"byte_end":8029135,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029140,"byte_end":8029153,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029158,"byte_end":8029232,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029237,"byte_end":8029242,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029247,"byte_end":8029275,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029280,"byte_end":8029313,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029318,"byte_end":8029321,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029326,"byte_end":8029381,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029386,"byte_end":8029414,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029419,"byte_end":8029424,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029429,"byte_end":8029446,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029451,"byte_end":8029458,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030058,"byte_end":8030068,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029544,"byte_end":8029609,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029614,"byte_end":8029617,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029622,"byte_end":8029685,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029690,"byte_end":8029693,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029698,"byte_end":8029712,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029717,"byte_end":8029720,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029725,"byte_end":8029738,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029743,"byte_end":8029817,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029822,"byte_end":8029827,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029832,"byte_end":8029860,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029865,"byte_end":8029898,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029903,"byte_end":8029906,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029911,"byte_end":8029966,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8029971,"byte_end":8030002,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030007,"byte_end":8030012,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030017,"byte_end":8030034,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030039,"byte_end":8030046,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6570},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039203,"byte_end":8039212,"line_start":83,"line_end":83,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040077,"byte_end":8040091,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039306,"byte_end":8039372,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039373,"byte_end":8039446,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039447,"byte_end":8039499,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039500,"byte_end":8039503,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039504,"byte_end":8039518,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039519,"byte_end":8039522,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039523,"byte_end":8039536,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039537,"byte_end":8039611,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039612,"byte_end":8039645,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039646,"byte_end":8039680,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039681,"byte_end":8039684,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039685,"byte_end":8039767,"line_start":102,"line_end":102,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039768,"byte_end":8039771,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039772,"byte_end":8039820,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039821,"byte_end":8039875,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039876,"byte_end":8039895,"line_start":106,"line_end":106,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039896,"byte_end":8039915,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039916,"byte_end":8039959,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8039960,"byte_end":8040000,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040001,"byte_end":8040010,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040011,"byte_end":8040017,"line_start":111,"line_end":111,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040018,"byte_end":8040023,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040024,"byte_end":8040041,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040042,"byte_end":8040048,"line_start":114,"line_end":114,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040674,"byte_end":8040677,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040152,"byte_end":8040244,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040249,"byte_end":8040282,"line_start":120,"line_end":120,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040287,"byte_end":8040290,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040295,"byte_end":8040309,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040314,"byte_end":8040317,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040322,"byte_end":8040335,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040340,"byte_end":8040367,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040372,"byte_end":8040446,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040451,"byte_end":8040484,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040489,"byte_end":8040523,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040528,"byte_end":8040531,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040536,"byte_end":8040618,"line_start":130,"line_end":130,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040623,"byte_end":8040628,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040633,"byte_end":8040650,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040655,"byte_end":8040662,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041344,"byte_end":8041357,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (capacity: usize, inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040775,"byte_end":8040840,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040845,"byte_end":8040848,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040853,"byte_end":8040867,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040872,"byte_end":8040875,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040880,"byte_end":8040935,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040940,"byte_end":8040943,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040948,"byte_end":8040961,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040966,"byte_end":8040993,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040998,"byte_end":8041072,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041077,"byte_end":8041110,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041115,"byte_end":8041149,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041154,"byte_end":8041157,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041162,"byte_end":8041224,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041229,"byte_end":8041288,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041293,"byte_end":8041298,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041303,"byte_end":8041320,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041325,"byte_end":8041332,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042071,"byte_end":8042078,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041534,"byte_end":8041580,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041585,"byte_end":8041588,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041593,"byte_end":8041607,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041612,"byte_end":8041615,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041620,"byte_end":8041633,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041638,"byte_end":8041665,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041670,"byte_end":8041744,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041749,"byte_end":8041782,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041787,"byte_end":8041821,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041826,"byte_end":8041829,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041834,"byte_end":8041916,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041921,"byte_end":8041924,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041929,"byte_end":8041973,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8041978,"byte_end":8042015,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042020,"byte_end":8042025,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042030,"byte_end":8042047,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042052,"byte_end":8042059,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042716,"byte_end":8042723,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042125,"byte_end":8042179,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042184,"byte_end":8042187,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042192,"byte_end":8042257,"line_start":186,"line_end":186,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042262,"byte_end":8042265,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042270,"byte_end":8042284,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042289,"byte_end":8042292,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042297,"byte_end":8042310,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042315,"byte_end":8042389,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042394,"byte_end":8042427,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042432,"byte_end":8042466,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042471,"byte_end":8042474,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042479,"byte_end":8042561,"line_start":195,"line_end":195,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042566,"byte_end":8042569,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042574,"byte_end":8042618,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042623,"byte_end":8042660,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042665,"byte_end":8042670,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042675,"byte_end":8042692,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8042697,"byte_end":8042704,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043789,"byte_end":8043799,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (mut self) -> Result<W, IntoInnerError<BufWriter<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043020,"byte_end":8043075,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043080,"byte_end":8043083,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043088,"byte_end":8043150,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043155,"byte_end":8043248,"line_start":216,"line_end":216,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043253,"byte_end":8043256,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043261,"byte_end":8043309,"line_start":218,"line_end":218,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043314,"byte_end":8043328,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043333,"byte_end":8043336,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043341,"byte_end":8043354,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043359,"byte_end":8043433,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043438,"byte_end":8043471,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043476,"byte_end":8043510,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043515,"byte_end":8043518,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043523,"byte_end":8043605,"line_start":226,"line_end":226,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043610,"byte_end":8043613,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043618,"byte_end":8043666,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043671,"byte_end":8043727,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043732,"byte_end":8043737,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043742,"byte_end":8043759,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8043764,"byte_end":8043771,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044569,"byte_end":8044575,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044036,"byte_end":8044092,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044097,"byte_end":8044100,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044105,"byte_end":8044119,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044124,"byte_end":8044127,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044132,"byte_end":8044145,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044150,"byte_end":8044224,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044229,"byte_end":8044262,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044267,"byte_end":8044301,"line_start":250,"line_end":250,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044306,"byte_end":8044309,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044314,"byte_end":8044396,"line_start":252,"line_end":252,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044401,"byte_end":8044404,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044409,"byte_end":8044457,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044462,"byte_end":8044513,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044518,"byte_end":8044523,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044528,"byte_end":8044545,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8044550,"byte_end":8044557,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049343,"byte_end":8049347,"line_start":48,"line_end":48,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: &mut R, writer: &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048091,"byte_end":8048148,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048149,"byte_end":8048152,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048153,"byte_end":8048221,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048222,"byte_end":8048286,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048287,"byte_end":8048303,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048304,"byte_end":8048307,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048308,"byte_end":8048371,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048372,"byte_end":8048409,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048410,"byte_end":8048413,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048414,"byte_end":8048494,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048495,"byte_end":8048560,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048561,"byte_end":8048564,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048565,"byte_end":8048624,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048625,"byte_end":8048628,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048629,"byte_end":8048697,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048698,"byte_end":8048734,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048735,"byte_end":8048738,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048739,"byte_end":8048751,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048752,"byte_end":8048755,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048756,"byte_end":8048831,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048832,"byte_end":8048907,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048908,"byte_end":8048977,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048978,"byte_end":8048981,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048982,"byte_end":8048996,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8048997,"byte_end":8049000,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049001,"byte_end":8049008,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049009,"byte_end":8049083,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049084,"byte_end":8049089,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049090,"byte_end":8049112,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049113,"byte_end":8049116,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049117,"byte_end":8049154,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049155,"byte_end":8049189,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049190,"byte_end":8049193,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049194,"byte_end":8049240,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049241,"byte_end":8049246,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049247,"byte_end":8049264,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049265,"byte_end":8049272,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"cfg(any (feature = \"docs\", not (feature = \"unstable\")))","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049273,"byte_end":8049329,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054492,"byte_end":8054498,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2226}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053668,"byte_end":8053731,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053732,"byte_end":8053760,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053761,"byte_end":8053764,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053765,"byte_end":8053833,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053834,"byte_end":8053906,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053907,"byte_end":8053986,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8053987,"byte_end":8054012,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054013,"byte_end":8054016,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054017,"byte_end":8054091,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054092,"byte_end":8054159,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054160,"byte_end":8054193,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054194,"byte_end":8054197,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054198,"byte_end":8054227,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054228,"byte_end":8054257,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054258,"byte_end":8054289,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054290,"byte_end":8054352,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054353,"byte_end":8054416,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054417,"byte_end":8054447,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055085,"byte_end":8055088,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054562,"byte_end":8054637,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054642,"byte_end":8054645,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054650,"byte_end":8054724,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054729,"byte_end":8054797,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054802,"byte_end":8054840,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054845,"byte_end":8054848,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054853,"byte_end":8054867,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054872,"byte_end":8054875,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054880,"byte_end":8054887,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054892,"byte_end":8054922,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054927,"byte_end":8054930,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054935,"byte_end":8054974,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054979,"byte_end":8055027,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055032,"byte_end":8055061,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055066,"byte_end":8055073,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055547,"byte_end":8055557,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055200,"byte_end":8055257,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055262,"byte_end":8055265,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055270,"byte_end":8055284,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055289,"byte_end":8055292,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055297,"byte_end":8055304,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055309,"byte_end":8055339,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055344,"byte_end":8055347,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055352,"byte_end":8055391,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055396,"byte_end":8055444,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055449,"byte_end":8055478,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055483,"byte_end":8055486,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055491,"byte_end":8055523,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055528,"byte_end":8055535,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055967,"byte_end":8055974,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055614,"byte_end":8055674,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055679,"byte_end":8055682,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055687,"byte_end":8055701,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055706,"byte_end":8055709,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055714,"byte_end":8055721,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055726,"byte_end":8055756,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055761,"byte_end":8055764,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055769,"byte_end":8055808,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055813,"byte_end":8055861,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055866,"byte_end":8055895,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055900,"byte_end":8055903,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055908,"byte_end":8055943,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8055948,"byte_end":8055955,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056548,"byte_end":8056555,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056030,"byte_end":8056098,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056103,"byte_end":8056106,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056111,"byte_end":8056184,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056189,"byte_end":8056251,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056256,"byte_end":8056259,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056264,"byte_end":8056278,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056283,"byte_end":8056286,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056291,"byte_end":8056298,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056303,"byte_end":8056333,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056338,"byte_end":8056341,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056346,"byte_end":8056389,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056394,"byte_end":8056442,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056447,"byte_end":8056476,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056481,"byte_end":8056484,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056489,"byte_end":8056524,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056529,"byte_end":8056536,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057276,"byte_end":8057284,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056619,"byte_end":8056667,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056672,"byte_end":8056675,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056680,"byte_end":8056694,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056699,"byte_end":8056702,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056707,"byte_end":8056714,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056719,"byte_end":8056793,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056798,"byte_end":8056803,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056808,"byte_end":8056838,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056843,"byte_end":8056877,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056882,"byte_end":8056914,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056919,"byte_end":8056922,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056927,"byte_end":8056979,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056984,"byte_end":8056987,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8056992,"byte_end":8057027,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057032,"byte_end":8057035,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057040,"byte_end":8057083,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057088,"byte_end":8057123,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057128,"byte_end":8057131,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057136,"byte_end":8057180,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057185,"byte_end":8057220,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057225,"byte_end":8057230,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057235,"byte_end":8057252,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057257,"byte_end":8057264,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057754,"byte_end":8057766,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057342,"byte_end":8057379,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057384,"byte_end":8057387,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057392,"byte_end":8057406,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057411,"byte_end":8057414,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057419,"byte_end":8057426,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057431,"byte_end":8057461,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057466,"byte_end":8057469,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057474,"byte_end":8057526,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057531,"byte_end":8057534,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057539,"byte_end":8057574,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057579,"byte_end":8057582,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057587,"byte_end":8057612,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057617,"byte_end":8057652,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057657,"byte_end":8057660,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057665,"byte_end":8057690,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057695,"byte_end":8057730,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057735,"byte_end":8057742,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2067},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061571,"byte_end":8061576,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061176,"byte_end":8061219,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061220,"byte_end":8061223,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061224,"byte_end":8061238,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061239,"byte_end":8061242,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061243,"byte_end":8061254,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061255,"byte_end":8061329,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061330,"byte_end":8061335,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061336,"byte_end":8061358,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061359,"byte_end":8061389,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061390,"byte_end":8061393,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061394,"byte_end":8061423,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061424,"byte_end":8061457,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061458,"byte_end":8061498,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061499,"byte_end":8061502,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061503,"byte_end":8061531,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061532,"byte_end":8061537,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061538,"byte_end":8061555,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061556,"byte_end":8061563,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2068},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061794,"byte_end":8061799,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2069}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061620,"byte_end":8061655,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061656,"byte_end":8061659,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061660,"byte_end":8061721,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061722,"byte_end":8061749,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061750,"byte_end":8061753,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061754,"byte_end":8061782,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2087},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063111,"byte_end":8063117,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062592,"byte_end":8062661,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062662,"byte_end":8062665,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062666,"byte_end":8062762,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062763,"byte_end":8062766,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062767,"byte_end":8062782,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062783,"byte_end":8062786,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062787,"byte_end":8062798,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062799,"byte_end":8062873,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062874,"byte_end":8062879,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062880,"byte_end":8062902,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062903,"byte_end":8062933,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062934,"byte_end":8062937,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062938,"byte_end":8062966,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8062967,"byte_end":8063020,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063021,"byte_end":8063024,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063025,"byte_end":8063071,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063072,"byte_end":8063077,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063078,"byte_end":8063095,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063096,"byte_end":8063103,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063387,"byte_end":8063393,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2089}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063163,"byte_end":8063245,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063246,"byte_end":8063249,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063250,"byte_end":8063312,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063313,"byte_end":8063340,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063341,"byte_end":8063344,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063345,"byte_end":8063375,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2103},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064327,"byte_end":8064331,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8063985,"byte_end":8064039,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064040,"byte_end":8064043,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064044,"byte_end":8064058,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064059,"byte_end":8064062,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064063,"byte_end":8064074,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064075,"byte_end":8064149,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064150,"byte_end":8064155,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064156,"byte_end":8064178,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064179,"byte_end":8064209,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064210,"byte_end":8064213,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064214,"byte_end":8064246,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064247,"byte_end":8064287,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064288,"byte_end":8064293,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064294,"byte_end":8064311,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064312,"byte_end":8064319,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2104},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064559,"byte_end":8064563,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2105}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064373,"byte_end":8064419,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064420,"byte_end":8064423,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064424,"byte_end":8064502,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064503,"byte_end":8064516,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064517,"byte_end":8064520,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064521,"byte_end":8064547,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2259},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099701,"byte_end":8099708,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099088,"byte_end":8099151,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099152,"byte_end":8099155,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099156,"byte_end":8099212,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099213,"byte_end":8099272,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099273,"byte_end":8099276,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099277,"byte_end":8099291,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099292,"byte_end":8099295,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099296,"byte_end":8099309,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099310,"byte_end":8099384,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099385,"byte_end":8099390,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099391,"byte_end":8099419,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099420,"byte_end":8099423,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099424,"byte_end":8099446,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099447,"byte_end":8099450,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099451,"byte_end":8099498,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099499,"byte_end":8099531,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099532,"byte_end":8099569,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099570,"byte_end":8099620,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099621,"byte_end":8099635,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099636,"byte_end":8099642,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099643,"byte_end":8099655,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099656,"byte_end":8099661,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099662,"byte_end":8099679,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8099680,"byte_end":8099687,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2281},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101813,"byte_end":8101819,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101044,"byte_end":8101117,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101118,"byte_end":8101121,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101122,"byte_end":8101183,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101184,"byte_end":8101187,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101188,"byte_end":8101260,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101261,"byte_end":8101264,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101265,"byte_end":8101312,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101313,"byte_end":8101316,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101317,"byte_end":8101408,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101409,"byte_end":8101501,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101502,"byte_end":8101515,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101516,"byte_end":8101519,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101520,"byte_end":8101534,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101535,"byte_end":8101538,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101539,"byte_end":8101552,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101553,"byte_end":8101627,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101628,"byte_end":8101633,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101634,"byte_end":8101656,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101657,"byte_end":8101687,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101688,"byte_end":8101691,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101692,"byte_end":8101726,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101727,"byte_end":8101773,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101774,"byte_end":8101779,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101780,"byte_end":8101797,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101798,"byte_end":8101805,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102449,"byte_end":8102455,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8101977,"byte_end":8102035,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102036,"byte_end":8102039,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102040,"byte_end":8102120,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102121,"byte_end":8102130,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102131,"byte_end":8102134,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102135,"byte_end":8102182,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102183,"byte_end":8102186,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102187,"byte_end":8102278,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102279,"byte_end":8102371,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102372,"byte_end":8102385,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102386,"byte_end":8102389,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8102390,"byte_end":8102420,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2303},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110398,"byte_end":8110403,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109643,"byte_end":8109716,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109717,"byte_end":8109720,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109721,"byte_end":8109781,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109782,"byte_end":8109785,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109786,"byte_end":8109856,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109857,"byte_end":8109860,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109861,"byte_end":8109908,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109909,"byte_end":8109912,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8109913,"byte_end":8110004,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110005,"byte_end":8110097,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110098,"byte_end":8110111,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110112,"byte_end":8110115,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110116,"byte_end":8110130,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110131,"byte_end":8110134,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110135,"byte_end":8110148,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110149,"byte_end":8110223,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110224,"byte_end":8110229,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110230,"byte_end":8110252,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110253,"byte_end":8110256,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110257,"byte_end":8110285,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110286,"byte_end":8110319,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110320,"byte_end":8110358,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110359,"byte_end":8110364,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110365,"byte_end":8110382,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110383,"byte_end":8110390,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2380},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8111055,"byte_end":8111060,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110586,"byte_end":8110644,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110645,"byte_end":8110648,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110649,"byte_end":8110728,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110729,"byte_end":8110738,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110739,"byte_end":8110742,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110743,"byte_end":8110790,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110791,"byte_end":8110794,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110795,"byte_end":8110886,"line_start":56,"line_end":56,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110887,"byte_end":8110979,"line_start":57,"line_end":57,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110980,"byte_end":8110993,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110994,"byte_end":8110997,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8110998,"byte_end":8111026,"line_start":60,"line_end":60,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112879,"byte_end":8112888,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"fn (&self, buf: &mut String) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112474,"byte_end":8112526,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112531,"byte_end":8112534,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112539,"byte_end":8112553,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112558,"byte_end":8112561,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112566,"byte_end":8112579,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112584,"byte_end":8112658,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112663,"byte_end":8112668,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112673,"byte_end":8112695,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112700,"byte_end":8112703,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112708,"byte_end":8112736,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112741,"byte_end":8112774,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112779,"byte_end":8112817,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112822,"byte_end":8112827,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112832,"byte_end":8112849,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112854,"byte_end":8112861,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2320},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdio.rs","byte_start":8118717,"byte_end":8118723,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2323},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdio.rs","byte_start":8118894,"byte_end":8118901,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2338},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120074,"byte_end":8120080,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119304,"byte_end":8119378,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119379,"byte_end":8119382,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119383,"byte_end":8119444,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119445,"byte_end":8119448,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119449,"byte_end":8119521,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119522,"byte_end":8119525,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119526,"byte_end":8119573,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119574,"byte_end":8119577,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119578,"byte_end":8119669,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119670,"byte_end":8119762,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119763,"byte_end":8119776,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119777,"byte_end":8119780,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119781,"byte_end":8119795,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119796,"byte_end":8119799,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119800,"byte_end":8119813,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119814,"byte_end":8119888,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119889,"byte_end":8119894,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119895,"byte_end":8119917,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119918,"byte_end":8119948,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119949,"byte_end":8119952,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119953,"byte_end":8119987,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8119988,"byte_end":8120034,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120035,"byte_end":8120040,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120041,"byte_end":8120058,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120059,"byte_end":8120066,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2415},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120711,"byte_end":8120717,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120238,"byte_end":8120297,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120298,"byte_end":8120301,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120302,"byte_end":8120378,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120379,"byte_end":8120392,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120393,"byte_end":8120396,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120397,"byte_end":8120444,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120445,"byte_end":8120448,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120449,"byte_end":8120540,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120541,"byte_end":8120633,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120634,"byte_end":8120647,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120648,"byte_end":8120651,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8120652,"byte_end":8120682,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":2449}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! OS-specific extensions.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":6838843,"byte_end":6838870,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2449},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2456},{"krate":0,"index":2466}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any (unix, feature = \"docs\"))","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":12481,"byte_end":12516,"line_start":110,"line_end":110,"column_start":13,"column_end":48}},{"value":"! Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8127613,"byte_end":8127665,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":2450},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":2451}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Unix-specific I/O extensions.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8127758,"byte_end":8127791,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":2456},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2645}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Unix-specific filesystem extensions.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130050,"byte_end":8130090,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2460},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130711,"byte_end":8130718,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"fn <P, Q> (src: P, dst: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130164,"byte_end":8130214,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130215,"byte_end":8130218,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130219,"byte_end":8130289,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130290,"byte_end":8130293,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130294,"byte_end":8130366,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130367,"byte_end":8130370,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130371,"byte_end":8130463,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130464,"byte_end":8130467,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130468,"byte_end":8130482,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130483,"byte_end":8130486,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130487,"byte_end":8130500,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130501,"byte_end":8130575,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130576,"byte_end":8130581,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130582,"byte_end":8130623,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130624,"byte_end":8130627,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130628,"byte_end":8130665,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130666,"byte_end":8130671,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130672,"byte_end":8130689,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8130690,"byte_end":8130697,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2466},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2536},{"krate":0,"index":2584},{"krate":0,"index":2657}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Unix-specific networking extensions.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8132634,"byte_end":8132674,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2487},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136601,"byte_end":8136613,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":2488}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135712,"byte_end":8135739,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135740,"byte_end":8135743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135744,"byte_end":8135834,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135835,"byte_end":8135880,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135881,"byte_end":8135884,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135885,"byte_end":8135959,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135960,"byte_end":8135963,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8135964,"byte_end":8136005,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136006,"byte_end":8136076,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136077,"byte_end":8136103,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136104,"byte_end":8136142,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136143,"byte_end":8136173,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136174,"byte_end":8136177,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136178,"byte_end":8136193,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136194,"byte_end":8136197,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136198,"byte_end":8136211,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136212,"byte_end":8136286,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136287,"byte_end":8136292,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136293,"byte_end":8136340,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136341,"byte_end":8136344,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136345,"byte_end":8136404,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136405,"byte_end":8136463,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136464,"byte_end":8136467,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136468,"byte_end":8136502,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136503,"byte_end":8136557,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136558,"byte_end":8136563,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136564,"byte_end":8136581,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136582,"byte_end":8136589,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137217,"byte_end":8137221,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136831,"byte_end":8136890,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136895,"byte_end":8136898,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136903,"byte_end":8136917,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136922,"byte_end":8136925,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136930,"byte_end":8136943,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136948,"byte_end":8137022,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137027,"byte_end":8137032,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137037,"byte_end":8137084,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137089,"byte_end":8137092,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137097,"byte_end":8137155,"line_start":64,"line_end":64,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137160,"byte_end":8137165,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137170,"byte_end":8137187,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137192,"byte_end":8137199,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137825,"byte_end":8137832,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137458,"byte_end":8137520,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137525,"byte_end":8137528,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137533,"byte_end":8137547,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137552,"byte_end":8137555,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137560,"byte_end":8137573,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137578,"byte_end":8137652,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137657,"byte_end":8137662,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137667,"byte_end":8137714,"line_start":81,"line_end":81,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137719,"byte_end":8137722,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137727,"byte_end":8137769,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137774,"byte_end":8137779,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137784,"byte_end":8137801,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137806,"byte_end":8137813,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138404,"byte_end":8138408,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8137970,"byte_end":8138019,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138024,"byte_end":8138027,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138032,"byte_end":8138090,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138095,"byte_end":8138098,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138103,"byte_end":8138117,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138122,"byte_end":8138125,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138130,"byte_end":8138143,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138148,"byte_end":8138222,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138227,"byte_end":8138232,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138237,"byte_end":8138284,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138289,"byte_end":8138292,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138297,"byte_end":8138348,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138353,"byte_end":8138358,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138363,"byte_end":8138380,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138385,"byte_end":8138392,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139297,"byte_end":8139304,"line_start":135,"line_end":135,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138616,"byte_end":8138665,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138670,"byte_end":8138673,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138678,"byte_end":8138765,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138770,"byte_end":8138829,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138834,"byte_end":8138837,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138842,"byte_end":8138868,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138873,"byte_end":8138899,"line_start":120,"line_end":120,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138904,"byte_end":8138940,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138945,"byte_end":8138948,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138953,"byte_end":8138967,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138972,"byte_end":8138975,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138980,"byte_end":8138993,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8138998,"byte_end":8139072,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139077,"byte_end":8139082,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139087,"byte_end":8139134,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139139,"byte_end":8139142,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139147,"byte_end":8139189,"line_start":130,"line_end":130,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139194,"byte_end":8139235,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139240,"byte_end":8139245,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139250,"byte_end":8139267,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139272,"byte_end":8139279,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139908,"byte_end":8139918,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139507,"byte_end":8139546,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139551,"byte_end":8139554,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139559,"byte_end":8139573,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139578,"byte_end":8139581,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139586,"byte_end":8139599,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139604,"byte_end":8139678,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139683,"byte_end":8139688,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139693,"byte_end":8139740,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139745,"byte_end":8139748,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139753,"byte_end":8139811,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139816,"byte_end":8139852,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139857,"byte_end":8139862,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139867,"byte_end":8139884,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8139889,"byte_end":8139896,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140565,"byte_end":8140574,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140009,"byte_end":8140055,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140060,"byte_end":8140063,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140068,"byte_end":8140129,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140134,"byte_end":8140137,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140142,"byte_end":8140174,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140179,"byte_end":8140182,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140187,"byte_end":8140201,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140206,"byte_end":8140209,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140214,"byte_end":8140227,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140232,"byte_end":8140306,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140311,"byte_end":8140316,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140321,"byte_end":8140368,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140373,"byte_end":8140376,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140381,"byte_end":8140423,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140428,"byte_end":8140469,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140474,"byte_end":8140509,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140514,"byte_end":8140519,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140524,"byte_end":8140541,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140546,"byte_end":8140553,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141208,"byte_end":8141217,"line_start":199,"line_end":199,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140664,"byte_end":8140698,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140703,"byte_end":8140706,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140711,"byte_end":8140801,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140806,"byte_end":8140809,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140814,"byte_end":8140828,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140833,"byte_end":8140836,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140841,"byte_end":8140854,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140859,"byte_end":8140933,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140938,"byte_end":8140943,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8140948,"byte_end":8140995,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141000,"byte_end":8141003,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141008,"byte_end":8141050,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141055,"byte_end":8141087,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141092,"byte_end":8141146,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141151,"byte_end":8141156,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141161,"byte_end":8141178,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141183,"byte_end":8141190,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141943,"byte_end":8141947,"line_start":224,"line_end":224,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141437,"byte_end":8141471,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141476,"byte_end":8141479,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141484,"byte_end":8141533,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141538,"byte_end":8141541,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141546,"byte_end":8141560,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141565,"byte_end":8141568,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141573,"byte_end":8141586,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141591,"byte_end":8141665,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141670,"byte_end":8141675,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141680,"byte_end":8141727,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141732,"byte_end":8141735,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141740,"byte_end":8141798,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141803,"byte_end":8141835,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141840,"byte_end":8141881,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141886,"byte_end":8141891,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141896,"byte_end":8141913,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8141918,"byte_end":8141925,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142590,"byte_end":8142597,"line_start":244,"line_end":244,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142098,"byte_end":8142152,"line_start":228,"line_end":228,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142157,"byte_end":8142160,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142165,"byte_end":8142217,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142222,"byte_end":8142225,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142230,"byte_end":8142244,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142249,"byte_end":8142252,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142257,"byte_end":8142270,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142275,"byte_end":8142349,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142354,"byte_end":8142359,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142364,"byte_end":8142411,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142416,"byte_end":8142419,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142424,"byte_end":8142466,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142471,"byte_end":8142528,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142533,"byte_end":8142538,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142543,"byte_end":8142560,"line_start":242,"line_end":242,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142565,"byte_end":8142572,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143354,"byte_end":8143358,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142838,"byte_end":8142888,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142893,"byte_end":8142896,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142901,"byte_end":8142953,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142958,"byte_end":8142961,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142966,"byte_end":8142980,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142985,"byte_end":8142988,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8142993,"byte_end":8143006,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143011,"byte_end":8143085,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143090,"byte_end":8143095,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143100,"byte_end":8143147,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143152,"byte_end":8143155,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143160,"byte_end":8143202,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143207,"byte_end":8143248,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143253,"byte_end":8143292,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143297,"byte_end":8143302,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143307,"byte_end":8143324,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143329,"byte_end":8143336,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144231,"byte_end":8144239,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143506,"byte_end":8143571,"line_start":273,"line_end":273,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143576,"byte_end":8143579,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143584,"byte_end":8143674,"line_start":275,"line_end":275,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143679,"byte_end":8143768,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143773,"byte_end":8143776,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143781,"byte_end":8143851,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143856,"byte_end":8143859,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143864,"byte_end":8143879,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143884,"byte_end":8143887,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143892,"byte_end":8143905,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143910,"byte_end":8143984,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143989,"byte_end":8143994,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8143999,"byte_end":8144046,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144051,"byte_end":8144078,"line_start":286,"line_end":286,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144083,"byte_end":8144086,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144091,"byte_end":8144133,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144138,"byte_end":8144175,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144180,"byte_end":8144185,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144190,"byte_end":8144207,"line_start":291,"line_end":291,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144212,"byte_end":8144219,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147443,"byte_end":8147455,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":2558}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146351,"byte_end":8146410,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146411,"byte_end":8146414,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146415,"byte_end":8146513,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146514,"byte_end":8146611,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146612,"byte_end":8146628,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146629,"byte_end":8146632,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146633,"byte_end":8146689,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146690,"byte_end":8146693,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146694,"byte_end":8146768,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146769,"byte_end":8146772,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146773,"byte_end":8146814,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146815,"byte_end":8146885,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146886,"byte_end":8146912,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146913,"byte_end":8146947,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146948,"byte_end":8146951,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146952,"byte_end":8146966,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146967,"byte_end":8146970,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146971,"byte_end":8146984,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8146985,"byte_end":8147059,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147060,"byte_end":8147065,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147066,"byte_end":8147113,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147114,"byte_end":8147144,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147145,"byte_end":8147148,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147149,"byte_end":8147209,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147210,"byte_end":8147253,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147254,"byte_end":8147257,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147258,"byte_end":8147310,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147311,"byte_end":8147344,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147345,"byte_end":8147393,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147394,"byte_end":8147399,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147400,"byte_end":8147405,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147406,"byte_end":8147423,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147424,"byte_end":8147431,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147920,"byte_end":8147924,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147530,"byte_end":8147591,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147596,"byte_end":8147599,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147604,"byte_end":8147618,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147623,"byte_end":8147626,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147631,"byte_end":8147644,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147649,"byte_end":8147723,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147728,"byte_end":8147733,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147738,"byte_end":8147785,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147790,"byte_end":8147793,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147798,"byte_end":8147858,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147863,"byte_end":8147868,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147873,"byte_end":8147890,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147895,"byte_end":8147902,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148752,"byte_end":8148758,"line_start":95,"line_end":95,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148208,"byte_end":8148263,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148268,"byte_end":8148271,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148276,"byte_end":8148368,"line_start":81,"line_end":81,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148373,"byte_end":8148376,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148381,"byte_end":8148395,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148400,"byte_end":8148403,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148408,"byte_end":8148421,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148426,"byte_end":8148500,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148505,"byte_end":8148510,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148515,"byte_end":8148562,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148567,"byte_end":8148570,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148575,"byte_end":8148635,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148640,"byte_end":8148690,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148695,"byte_end":8148700,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148705,"byte_end":8148722,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8148727,"byte_end":8148734,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150713,"byte_end":8150721,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8149767,"byte_end":8149812,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8149817,"byte_end":8149820,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8149825,"byte_end":8149916,"line_start":123,"line_end":123,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8149921,"byte_end":8150013,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150018,"byte_end":8150021,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150026,"byte_end":8150056,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150061,"byte_end":8150141,"line_start":127,"line_end":127,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150146,"byte_end":8150149,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150154,"byte_end":8150168,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150173,"byte_end":8150176,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150181,"byte_end":8150194,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150199,"byte_end":8150273,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150278,"byte_end":8150283,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150288,"byte_end":8150335,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150340,"byte_end":8150370,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150375,"byte_end":8150378,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150383,"byte_end":8150443,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150448,"byte_end":8150491,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150496,"byte_end":8150499,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150504,"byte_end":8150556,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150561,"byte_end":8150594,"line_start":141,"line_end":141,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150599,"byte_end":8150647,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150652,"byte_end":8150657,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150662,"byte_end":8150667,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150672,"byte_end":8150689,"line_start":145,"line_end":145,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150694,"byte_end":8150701,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151201,"byte_end":8151211,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150781,"byte_end":8150835,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150840,"byte_end":8150843,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150848,"byte_end":8150862,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150867,"byte_end":8150870,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150875,"byte_end":8150888,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150893,"byte_end":8150967,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150972,"byte_end":8150977,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8150982,"byte_end":8151029,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151034,"byte_end":8151037,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151042,"byte_end":8151102,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151107,"byte_end":8151145,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151150,"byte_end":8151155,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151160,"byte_end":8151177,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151182,"byte_end":8151189,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2650},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152254,"byte_end":8152262,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151639,"byte_end":8151695,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151696,"byte_end":8151699,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151700,"byte_end":8151798,"line_start":185,"line_end":185,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151799,"byte_end":8151858,"line_start":186,"line_end":186,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151859,"byte_end":8151862,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151863,"byte_end":8151933,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151934,"byte_end":8151937,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151938,"byte_end":8152038,"line_start":190,"line_end":190,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152039,"byte_end":8152119,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152120,"byte_end":8152178,"line_start":192,"line_end":192,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152179,"byte_end":8152225,"line_start":193,"line_end":193,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154752,"byte_end":8154762,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":2609}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154100,"byte_end":8154125,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154126,"byte_end":8154129,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154130,"byte_end":8154202,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154203,"byte_end":8154206,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154207,"byte_end":8154246,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154247,"byte_end":8154315,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154316,"byte_end":8154319,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154320,"byte_end":8154334,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154335,"byte_end":8154338,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154339,"byte_end":8154352,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154353,"byte_end":8154427,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154428,"byte_end":8154433,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154434,"byte_end":8154479,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154480,"byte_end":8154510,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154511,"byte_end":8154514,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154515,"byte_end":8154578,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154579,"byte_end":8154623,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154624,"byte_end":8154627,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154628,"byte_end":8154662,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154663,"byte_end":8154708,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154709,"byte_end":8154714,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154715,"byte_end":8154732,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154733,"byte_end":8154740,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155222,"byte_end":8155229,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154844,"byte_end":8154896,"line_start":45,"line_end":45,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154901,"byte_end":8154904,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154909,"byte_end":8154923,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154928,"byte_end":8154931,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154936,"byte_end":8154949,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154954,"byte_end":8155028,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155033,"byte_end":8155038,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155043,"byte_end":8155088,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155093,"byte_end":8155096,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155101,"byte_end":8155160,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155165,"byte_end":8155170,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155175,"byte_end":8155192,"line_start":56,"line_end":56,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155197,"byte_end":8155204,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156064,"byte_end":8156068,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155646,"byte_end":8155695,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155700,"byte_end":8155703,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155708,"byte_end":8155766,"line_start":73,"line_end":73,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155771,"byte_end":8155774,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155779,"byte_end":8155793,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155798,"byte_end":8155801,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155806,"byte_end":8155819,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155824,"byte_end":8155898,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155903,"byte_end":8155908,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155913,"byte_end":8155958,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155963,"byte_end":8155966,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8155971,"byte_end":8156008,"line_start":82,"line_end":82,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156013,"byte_end":8156018,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156023,"byte_end":8156040,"line_start":84,"line_end":84,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156045,"byte_end":8156052,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156779,"byte_end":8156789,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156350,"byte_end":8156418,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156423,"byte_end":8156426,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156431,"byte_end":8156445,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156450,"byte_end":8156453,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156458,"byte_end":8156471,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156476,"byte_end":8156550,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156555,"byte_end":8156560,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156565,"byte_end":8156610,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156615,"byte_end":8156618,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156623,"byte_end":8156682,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156687,"byte_end":8156723,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156728,"byte_end":8156733,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156738,"byte_end":8156755,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156760,"byte_end":8156767,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157309,"byte_end":8157318,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156880,"byte_end":8156949,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156954,"byte_end":8156957,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156962,"byte_end":8156976,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156981,"byte_end":8156984,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8156989,"byte_end":8157002,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157007,"byte_end":8157081,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157086,"byte_end":8157091,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157096,"byte_end":8157141,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157146,"byte_end":8157149,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157154,"byte_end":8157213,"line_start":124,"line_end":124,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157218,"byte_end":8157253,"line_start":125,"line_end":125,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157258,"byte_end":8157263,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157268,"byte_end":8157285,"line_start":127,"line_end":127,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157290,"byte_end":8157297,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158121,"byte_end":8158129,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157408,"byte_end":8157474,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157479,"byte_end":8157482,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157487,"byte_end":8157577,"line_start":135,"line_end":135,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157582,"byte_end":8157671,"line_start":136,"line_end":136,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157676,"byte_end":8157679,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157684,"byte_end":8157754,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157759,"byte_end":8157762,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157767,"byte_end":8157780,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157785,"byte_end":8157859,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157864,"byte_end":8157869,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157874,"byte_end":8157919,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157924,"byte_end":8157951,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157956,"byte_end":8157959,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8157964,"byte_end":8158023,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158028,"byte_end":8158065,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158070,"byte_end":8158075,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158080,"byte_end":8158097,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158102,"byte_end":8158109,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! The async prelude.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6838953,"byte_end":6838975,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6838976,"byte_end":6838979,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6838980,"byte_end":6839060,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839061,"byte_end":6839064,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839065,"byte_end":6839079,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839080,"byte_end":6839083,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Import the prelude with:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839084,"byte_end":6839112,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839113,"byte_end":6839116,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839117,"byte_end":6839124,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #[allow(unused_imports)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839125,"byte_end":6839155,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839156,"byte_end":6839186,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6839187,"byte_end":6839194,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":1022},{"krate":0,"index":1035},{"krate":0,"index":1051},{"krate":0,"index":1064},{"krate":0,"index":1077},{"krate":0,"index":1089}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Composable asynchronous iteration.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840235,"byte_end":6840273,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840274,"byte_end":6840277,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::iter`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840278,"byte_end":6840331,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840332,"byte_end":6840335,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840336,"byte_end":6840410,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840411,"byte_end":6840485,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840486,"byte_end":6840562,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840563,"byte_end":6840633,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840634,"byte_end":6840637,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840638,"byte_end":6840713,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840714,"byte_end":6840717,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840718,"byte_end":6840736,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840737,"byte_end":6840740,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! This module is largely organized by type:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840741,"byte_end":6840786,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840787,"byte_end":6840790,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840791,"byte_end":6840868,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"!   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840869,"byte_end":6840949,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"!   putting some extra study time into.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840950,"byte_end":6840991,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"! * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6840992,"byte_end":6841065,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841066,"byte_end":6841139,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"!   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841140,"byte_end":6841217,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841218,"byte_end":6841297,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841298,"byte_end":6841354,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841355,"byte_end":6841358,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [Traits]: #traits","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841359,"byte_end":6841380,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"! [Functions]: #functions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841381,"byte_end":6841408,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"! [Structs]: #structs","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841409,"byte_end":6841432,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841433,"byte_end":6841436,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! That's it! Let's dig into streams.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841437,"byte_end":6841475,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841476,"byte_end":6841479,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Stream","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841480,"byte_end":6841492,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841493,"byte_end":6841496,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841497,"byte_end":6841571,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! [`Stream`] looks like this:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841572,"byte_end":6841603,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841604,"byte_end":6841607,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841608,"byte_end":6841615,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841616,"byte_end":6841659,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841660,"byte_end":6841684,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"! trait Stream {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841685,"byte_end":6841703,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"!     type Item;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841704,"byte_end":6841722,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"!     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841723,"byte_end":6841816,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841817,"byte_end":6841822,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841823,"byte_end":6841830,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841831,"byte_end":6841834,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841835,"byte_end":6841901,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841902,"byte_end":6841976,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"! as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6841977,"byte_end":6842053,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842054,"byte_end":6842131,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842132,"byte_end":6842192,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842193,"byte_end":6842196,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842197,"byte_end":6842266,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"! [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842267,"byte_end":6842347,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"! again at some point.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842348,"byte_end":6842372,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842373,"byte_end":6842376,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842377,"byte_end":6842453,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"! but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842454,"byte_end":6842528,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"! them for free.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842529,"byte_end":6842547,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842548,"byte_end":6842551,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842552,"byte_end":6842629,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"! more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842630,"byte_end":6842705,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! below for more details.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842706,"byte_end":6842733,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842734,"byte_end":6842737,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842738,"byte_end":6842774,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Stream`]: trait.Stream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842775,"byte_end":6842808,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"! [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842809,"byte_end":6842854,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842855,"byte_end":6842904,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842905,"byte_end":6842908,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # The three forms of streaming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842909,"byte_end":6842943,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842944,"byte_end":6842947,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! There are three common methods which can create streams from a collection:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6842948,"byte_end":6843026,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843027,"byte_end":6843030,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843031,"byte_end":6843074,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"! * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843075,"byte_end":6843126,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"! * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843127,"byte_end":6843174,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843175,"byte_end":6843178,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Various things in async-std may implement one or more of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843179,"byte_end":6843243,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"! three, where appropriate.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843244,"byte_end":6843273,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843274,"byte_end":6843277,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! # Implementing Stream","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843278,"byte_end":6843303,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843304,"byte_end":6843307,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843308,"byte_end":6843384,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843385,"byte_end":6843457,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"! `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843458,"byte_end":6843536,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"! one for each stream and iterator adapter.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843537,"byte_end":6843582,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843583,"byte_end":6843586,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843587,"byte_end":6843656,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843657,"byte_end":6843660,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843661,"byte_end":6843668,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843669,"byte_end":6843701,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843702,"byte_end":6843745,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843746,"byte_end":6843770,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"! // First, the struct:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843771,"byte_end":6843796,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843797,"byte_end":6843800,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! /// A stream which counts from one to five","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843801,"byte_end":6843847,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"! struct Counter {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843848,"byte_end":6843868,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"!     count: usize,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843869,"byte_end":6843890,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843891,"byte_end":6843896,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843897,"byte_end":6843900,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843901,"byte_end":6843979,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6843980,"byte_end":6844055,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"! // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844056,"byte_end":6844129,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"! impl Counter {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844130,"byte_end":6844148,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"!     fn new() -> Counter {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844149,"byte_end":6844178,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"!         Counter { count: 0 }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844179,"byte_end":6844211,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844212,"byte_end":6844221,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844222,"byte_end":6844227,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844228,"byte_end":6844231,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844232,"byte_end":6844285,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844286,"byte_end":6844289,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! impl Stream for Counter {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844290,"byte_end":6844319,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"!     // we will be counting with usize","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844320,"byte_end":6844361,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"!     type Item = usize;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844362,"byte_end":6844388,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844389,"byte_end":6844392,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"!     // poll_next() is the only required method","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844393,"byte_end":6844443,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"!     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844444,"byte_end":6844542,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"!         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844543,"byte_end":6844610,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"!         self.count += 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844611,"byte_end":6844639,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844640,"byte_end":6844643,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"!         // Check to see if we've finished counting or not.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844644,"byte_end":6844706,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"!         if self.count < 6 {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844707,"byte_end":6844738,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"!             Poll::Ready(Some(self.count))","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844739,"byte_end":6844784,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"!         } else {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844785,"byte_end":6844805,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"!             Poll::Ready(None)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844806,"byte_end":6844839,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"!         }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844840,"byte_end":6844853,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844854,"byte_end":6844863,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844864,"byte_end":6844869,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844870,"byte_end":6844873,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! // And now we can use it!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844874,"byte_end":6844903,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844904,"byte_end":6844978,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844979,"byte_end":6844984,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"! let mut counter = Counter::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6844985,"byte_end":6845022,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845023,"byte_end":6845026,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845027,"byte_end":6845069,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845070,"byte_end":6845092,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845093,"byte_end":6845096,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845097,"byte_end":6845139,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845140,"byte_end":6845162,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845163,"byte_end":6845166,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845167,"byte_end":6845209,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845210,"byte_end":6845232,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845233,"byte_end":6845236,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845237,"byte_end":6845279,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845280,"byte_end":6845302,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845303,"byte_end":6845306,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845307,"byte_end":6845349,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845350,"byte_end":6845372,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845373,"byte_end":6845378,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845379,"byte_end":6845396,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845397,"byte_end":6845404,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845405,"byte_end":6845408,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845409,"byte_end":6845469,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845470,"byte_end":6845473,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845474,"byte_end":6845553,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"! can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845554,"byte_end":6845630,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"! that next.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845631,"byte_end":6845645,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845646,"byte_end":6845649,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! # while let Loops and IntoStream","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845650,"byte_end":6845686,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845687,"byte_end":6845690,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845691,"byte_end":6845785,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"! example of `while let`:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845786,"byte_end":6845813,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845814,"byte_end":6845817,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845818,"byte_end":6845825,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845826,"byte_end":6845900,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845901,"byte_end":6845906,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845907,"byte_end":6845939,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845940,"byte_end":6845968,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"! let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6845969,"byte_end":6846018,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846019,"byte_end":6846022,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = values.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846023,"byte_end":6846068,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846069,"byte_end":6846095,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846096,"byte_end":6846101,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846102,"byte_end":6846107,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846108,"byte_end":6846125,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846126,"byte_end":6846133,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846134,"byte_end":6846137,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846138,"byte_end":6846215,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"! you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846216,"byte_end":6846291,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"! produce a stream. What gives?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846292,"byte_end":6846325,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846326,"byte_end":6846329,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! There's a trait in the standard library for converting something into an","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846330,"byte_end":6846406,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"! stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846407,"byte_end":6846478,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"! which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846479,"byte_end":6846550,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846551,"byte_end":6846554,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846555,"byte_end":6846628,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"! support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846629,"byte_end":6846705,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"! doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846706,"byte_end":6846786,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846787,"byte_end":6846790,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846791,"byte_end":6846832,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846833,"byte_end":6846896,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846897,"byte_end":6846900,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! # Adapters","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846901,"byte_end":6846915,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846916,"byte_end":6846919,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846920,"byte_end":6846992,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"! often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6846993,"byte_end":6847063,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"! pattern'.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847064,"byte_end":6847077,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847078,"byte_end":6847081,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847082,"byte_end":6847151,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"! For more, see their documentation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847152,"byte_end":6847190,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847191,"byte_end":6847194,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847195,"byte_end":6847236,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847237,"byte_end":6847280,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"! [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847281,"byte_end":6847328,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847329,"byte_end":6847332,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! # Laziness","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847333,"byte_end":6847347,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847348,"byte_end":6847351,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847352,"byte_end":6847426,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"! just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847427,"byte_end":6847502,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"! until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847503,"byte_end":6847576,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847577,"byte_end":6847652,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"! method calls a closure on each element it iterates over:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847653,"byte_end":6847713,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847714,"byte_end":6847717,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847718,"byte_end":6847725,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847726,"byte_end":6847758,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847759,"byte_end":6847833,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847834,"byte_end":6847839,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847840,"byte_end":6847872,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847873,"byte_end":6847901,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"! let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847902,"byte_end":6847942,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"! v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847943,"byte_end":6847976,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847977,"byte_end":6847982,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6847983,"byte_end":6848000,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848001,"byte_end":6848008,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848009,"byte_end":6848012,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848013,"byte_end":6848089,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"! using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848090,"byte_end":6848158,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848159,"byte_end":6848162,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848163,"byte_end":6848174,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"! warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848175,"byte_end":6848241,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"! do nothing unless consumed","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848242,"byte_end":6848272,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848273,"byte_end":6848280,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848281,"byte_end":6848284,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848285,"byte_end":6848358,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"! `while let` loop instead:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848359,"byte_end":6848388,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848389,"byte_end":6848392,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848393,"byte_end":6848400,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848401,"byte_end":6848475,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848476,"byte_end":6848481,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848482,"byte_end":6848514,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848515,"byte_end":6848543,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"! let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848544,"byte_end":6848588,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848589,"byte_end":6848592,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = &v.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848593,"byte_end":6848634,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848635,"byte_end":6848661,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848662,"byte_end":6848667,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848668,"byte_end":6848673,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848674,"byte_end":6848691,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848692,"byte_end":6848699,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848700,"byte_end":6848703,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848704,"byte_end":6848745,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848746,"byte_end":6848749,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848750,"byte_end":6848829,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"! like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848830,"byte_end":6848905,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848906,"byte_end":6848909,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848910,"byte_end":6848959,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848960,"byte_end":6848963,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"! # Infinity","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848964,"byte_end":6848978,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848979,"byte_end":6848982,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! Streams do not have to be finite. As an example, an repeat stream is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6848983,"byte_end":6849055,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"! an infinite stream:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849056,"byte_end":6849079,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849080,"byte_end":6849083,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849084,"byte_end":6849091,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849092,"byte_end":6849120,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849121,"byte_end":6849159,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849160,"byte_end":6849167,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849168,"byte_end":6849171,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"! It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849172,"byte_end":6849243,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"! stream into a finite one:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849244,"byte_end":6849273,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849274,"byte_end":6849277,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849278,"byte_end":6849285,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849286,"byte_end":6849360,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849361,"byte_end":6849366,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849367,"byte_end":6849399,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849400,"byte_end":6849428,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849429,"byte_end":6849467,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"! let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849468,"byte_end":6849511,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849512,"byte_end":6849515,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849516,"byte_end":6849572,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"!     println!(\"{}\", number);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849573,"byte_end":6849604,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849605,"byte_end":6849610,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849611,"byte_end":6849616,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849617,"byte_end":6849634,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849635,"byte_end":6849642,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849643,"byte_end":6849646,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849647,"byte_end":6849719,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849720,"byte_end":6849723,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849724,"byte_end":6849797,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"! result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849798,"byte_end":6849876,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"! Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849877,"byte_end":6849953,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"! traversing every element in the stream, are likely not to return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6849954,"byte_end":6850022,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"! successfully for any infinite streams.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850023,"byte_end":6850065,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850066,"byte_end":6850069,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850070,"byte_end":6850083,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"! let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850084,"byte_end":6850128,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"! let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850129,"byte_end":6850199,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"! // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850200,"byte_end":6850274,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"! println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850275,"byte_end":6850329,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850330,"byte_end":6850337,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850338,"byte_end":6850341,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"! [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850342,"byte_end":6850406,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850407,"byte_end":6850450,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"! [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6850451,"byte_end":6850492,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925228,"byte_end":6925237,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925177,"byte_end":6925216,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926633,"byte_end":6926642,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926582,"byte_end":6926621,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6463},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6928299,"byte_end":6928304,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6467}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6417},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6929690,"byte_end":6929696,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6419}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6334},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6930635,"byte_end":6930644,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6328},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":6933418,"byte_end":6933424,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6330}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2671},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934155,"byte_end":6934160,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[{"value":"/ A stream that will repeatedly yield the same list of elements.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934060,"byte_end":6934126,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6291},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":6935450,"byte_end":6935459,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6293},{"krate":0,"index":6294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6213},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":6936561,"byte_end":6936569,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":6216},{"krate":0,"index":6217}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6204},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":6938170,"byte_end":6938176,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6155},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":6939200,"byte_end":6939209,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6158},{"krate":0,"index":6159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940230,"byte_end":6940240,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940179,"byte_end":6940218,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941264,"byte_end":6941277,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941213,"byte_end":6941252,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6103},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":6942395,"byte_end":6942405,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6008},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":6943644,"byte_end":6943657,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":6011},{"krate":0,"index":6012}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5998},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":6944882,"byte_end":6944886,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":6946072,"byte_end":6946080,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":5927}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5883},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":6947337,"byte_end":6947345,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":5886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5874},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":6948623,"byte_end":6948630,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5877},{"krate":0,"index":5878}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5789},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":6949550,"byte_end":6949560,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5793}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5748},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":6950800,"byte_end":6950808,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":5751}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5707},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":6952075,"byte_end":6952083,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":5710}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5698},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":6953130,"byte_end":6953133,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5701},{"krate":0,"index":5702}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5601},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":6954023,"byte_end":6954032,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5544},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":6955520,"byte_end":6955531,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5487},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":6956998,"byte_end":6957012,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5430},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":6958744,"byte_end":6958753,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":6960238,"byte_end":6960249,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":6961743,"byte_end":6961757,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5271},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":6963565,"byte_end":6963573,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":6964936,"byte_end":6964946,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":721}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":6964885,"byte_end":6964924,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965442,"byte_end":6965451,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965391,"byte_end":6965430,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5218},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":6966729,"byte_end":6966745,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":9674541,"byte_end":9674552,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969566,"byte_end":6969580,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969515,"byte_end":6969554,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5207},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":6971101,"byte_end":6971105,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":6972369,"byte_end":6972373,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5111},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":6973637,"byte_end":6973646,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5063},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":6975238,"byte_end":6975244,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5017},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":6976704,"byte_end":6976708,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5019},{"krate":0,"index":5020}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4975},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":6977991,"byte_end":6978000,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979063,"byte_end":6979076,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979012,"byte_end":6979051,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980453,"byte_end":6980469,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980402,"byte_end":6980441,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6981869,"byte_end":6981872,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2690},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6857481,"byte_end":6857490,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782}],"decl_id":null,"docs":"\n        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6858325,"byte_end":6858329,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> NextFuture<'_, Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6859009,"byte_end":6859013,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6859742,"byte_end":6859752,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <P> (self, predicate: P) -> TakeWhile<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6861993,"byte_end":6862000,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"fn (self, step: usize) -> StepBy<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6862920,"byte_end":6862925,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6863809,"byte_end":6863815,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6864681,"byte_end":6864687,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"fn <'a, T> (self) -> Copied<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6865531,"byte_end":6865536,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn (self) -> Cycle<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6866446,"byte_end":6866455,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6868612,"byte_end":6868615,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <B, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6869555,"byte_end":6869562,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6870611,"byte_end":6870615,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"fn (self) -> LastFuture<Self, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6871574,"byte_end":6871578,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6872344,"byte_end":6872350,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <P> (self, predicate: P) -> Filter<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6875474,"byte_end":6875484,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <B, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6876473,"byte_end":6876483,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"fn <B, F> (self, key_by: F) -> MinByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6877602,"byte_end":6877612,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"fn <B, F> (self, key_by: F) -> MaxByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6878816,"byte_end":6878822,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"fn <F> (self, compare: F) -> MinByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6879839,"byte_end":6879842,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"fn <F> (self) -> MaxFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6880830,"byte_end":6880833,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"fn <F> (self) -> MinFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6881997,"byte_end":6882003,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"fn <F> (self, compare: F) -> MaxByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6883728,"byte_end":6883731,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"fn (&mut self, n: usize) -> NthFuture<'_, Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6885321,"byte_end":6885324,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6885300,"byte_end":6885309,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6886609,"byte_end":6886613,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"fn <P> (&mut self, p: P) -> FindFuture<'_, Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6887434,"byte_end":6887442,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"fn <F, B> (&mut self, f: F) -> FindMapFuture<'_, Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6888302,"byte_end":6888306,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, F, B>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6890289,"byte_end":6890297,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <F> (self, f: F) -> ForEachFuture<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6891890,"byte_end":6891893,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6891869,"byte_end":6891878,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6894909,"byte_end":6894913,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <St, B, F> (self, initial_state: St, f: F) -> Scan<Self, St, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6894888,"byte_end":6894897,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6896033,"byte_end":6896043,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <P> (self, predicate: P) -> SkipWhile<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6896792,"byte_end":6896796,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6898985,"byte_end":6898993,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"fn <B, F, T, E> (&mut self, init: T, f: F) -> TryFoldFuture<'_, Self, F, T>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6900288,"byte_end":6900300,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"fn <F, E> (&mut self, f: F) -> TryForEachFuture<'_, Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6902007,"byte_end":6902010,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <U> (self, other: U) -> Zip<Self, U>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6901986,"byte_end":6901995,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6907943,"byte_end":6907954,"line_start":1961,"line_end":1961,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"fn <S> (self, other: S) -> PartialCmpFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6909115,"byte_end":6909123,"line_start":2001,"line_end":2001,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"fn <P> (&mut self, predicate: P) -> PositionFuture<'_, Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6910441,"byte_end":6910444,"line_start":2039,"line_end":2039,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"fn <S> (self, other: S) -> CmpFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6912458,"byte_end":6912460,"line_start":2105,"line_end":2105,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"fn <S> (self, other: S) -> NeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6913684,"byte_end":6913686,"line_start":2142,"line_end":2142,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"fn <S> (self, other: S) -> GeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6914902,"byte_end":6914904,"line_start":2179,"line_end":2179,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"fn <S> (self, other: S) -> EqFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6916118,"byte_end":6916120,"line_start":2216,"line_end":2216,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"fn <S> (self, other: S) -> GtFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6917330,"byte_end":6917332,"line_start":2253,"line_end":2253,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"fn <S> (self, other: S) -> LeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6918536,"byte_end":6918538,"line_start":2290,"line_end":2290,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"fn <S> (self, other: S) -> LtFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1029},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983804,"byte_end":6983809,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983373,"byte_end":6983423,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983424,"byte_end":6983427,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983428,"byte_end":6983491,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983492,"byte_end":6983519,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983520,"byte_end":6983523,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983524,"byte_end":6983552,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983553,"byte_end":6983556,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983557,"byte_end":6983571,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983572,"byte_end":6983575,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983576,"byte_end":6983583,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983584,"byte_end":6983623,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983624,"byte_end":6983629,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983630,"byte_end":6983660,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983661,"byte_end":6983687,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983688,"byte_end":6983691,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983692,"byte_end":6983731,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983732,"byte_end":6983735,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983736,"byte_end":6983773,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983774,"byte_end":6983779,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983780,"byte_end":6983788,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983789,"byte_end":6983796,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2784},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6984046,"byte_end":6984051,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2786}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983880,"byte_end":6983922,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983923,"byte_end":6983926,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983927,"byte_end":6983984,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983985,"byte_end":6983988,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6983989,"byte_end":6984017,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2790},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984620,"byte_end":6984626,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2792}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984396,"byte_end":6984451,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984452,"byte_end":6984455,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984456,"byte_end":6984519,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984520,"byte_end":6984547,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984548,"byte_end":6984551,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984552,"byte_end":6984584,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1043},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985486,"byte_end":6985493,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"fn <T, F> (f: F) -> FromFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984677,"byte_end":6984765,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984766,"byte_end":6984769,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984770,"byte_end":6984860,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984861,"byte_end":6984942,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984943,"byte_end":6984946,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984947,"byte_end":6984961,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984962,"byte_end":6984965,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984966,"byte_end":6984973,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984974,"byte_end":6985013,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985014,"byte_end":6985019,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985020,"byte_end":6985050,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985051,"byte_end":6985077,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985078,"byte_end":6985081,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985082,"byte_end":6985106,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985107,"byte_end":6985139,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985140,"byte_end":6985159,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985160,"byte_end":6985182,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985183,"byte_end":6985199,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985200,"byte_end":6985216,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985217,"byte_end":6985240,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985241,"byte_end":6985250,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985251,"byte_end":6985258,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985259,"byte_end":6985262,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985263,"byte_end":6985290,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985291,"byte_end":6985294,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985295,"byte_end":6985335,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985336,"byte_end":6985376,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985377,"byte_end":6985417,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985418,"byte_end":6985455,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985456,"byte_end":6985461,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985462,"byte_end":6985470,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985471,"byte_end":6985478,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4877},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986369,"byte_end":6986377,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1058},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986877,"byte_end":6986886,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"fn <I> (iter: I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986409,"byte_end":6986448,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986449,"byte_end":6986452,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986453,"byte_end":6986467,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986468,"byte_end":6986471,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986472,"byte_end":6986479,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986480,"byte_end":6986519,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986520,"byte_end":6986525,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986526,"byte_end":6986556,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986557,"byte_end":6986583,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986584,"byte_end":6986587,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986588,"byte_end":6986640,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986641,"byte_end":6986644,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986645,"byte_end":6986685,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986686,"byte_end":6986726,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986727,"byte_end":6986767,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986768,"byte_end":6986808,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986809,"byte_end":6986846,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986847,"byte_end":6986852,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986853,"byte_end":6986861,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6986862,"byte_end":6986869,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1071},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988033,"byte_end":6988037,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (t: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987700,"byte_end":6987747,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987748,"byte_end":6987751,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987752,"byte_end":6987766,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987767,"byte_end":6987770,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987771,"byte_end":6987778,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987779,"byte_end":6987818,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987819,"byte_end":6987824,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987825,"byte_end":6987855,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987856,"byte_end":6987882,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987883,"byte_end":6987886,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987887,"byte_end":6987919,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987920,"byte_end":6987923,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987924,"byte_end":6987964,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6987965,"byte_end":6988002,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988003,"byte_end":6988008,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988009,"byte_end":6988017,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988018,"byte_end":6988025,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4838},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988337,"byte_end":6988341,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4840}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989284,"byte_end":6989290,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6988935,"byte_end":6988993,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6988994,"byte_end":6988997,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6988998,"byte_end":6989012,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989013,"byte_end":6989016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989017,"byte_end":6989024,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989025,"byte_end":6989064,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989065,"byte_end":6989070,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989071,"byte_end":6989101,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989102,"byte_end":6989128,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989129,"byte_end":6989132,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989133,"byte_end":6989167,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989168,"byte_end":6989171,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989172,"byte_end":6989212,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989213,"byte_end":6989253,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989254,"byte_end":6989259,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989260,"byte_end":6989268,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989269,"byte_end":6989276,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989577,"byte_end":6989583,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2801}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989361,"byte_end":6989411,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989412,"byte_end":6989415,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989416,"byte_end":6989478,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989479,"byte_end":6989506,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989507,"byte_end":6989510,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989511,"byte_end":6989541,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2808},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990205,"byte_end":6990215,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2810}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6989936,"byte_end":6990024,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990025,"byte_end":6990028,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990029,"byte_end":6990096,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990097,"byte_end":6990124,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990125,"byte_end":6990128,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990129,"byte_end":6990169,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991321,"byte_end":6991332,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn <T, F> (repeater: F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990270,"byte_end":6990372,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990373,"byte_end":6990376,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990377,"byte_end":6990391,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990392,"byte_end":6990395,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990396,"byte_end":6990412,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990413,"byte_end":6990416,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990417,"byte_end":6990424,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990425,"byte_end":6990464,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990465,"byte_end":6990470,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990471,"byte_end":6990501,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990502,"byte_end":6990528,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990529,"byte_end":6990532,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990533,"byte_end":6990571,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990572,"byte_end":6990575,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990576,"byte_end":6990603,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990604,"byte_end":6990607,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990608,"byte_end":6990648,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990649,"byte_end":6990689,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990690,"byte_end":6990730,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990731,"byte_end":6990771,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990772,"byte_end":6990780,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990781,"byte_end":6990788,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990789,"byte_end":6990792,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990793,"byte_end":6990810,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990811,"byte_end":6990814,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990815,"byte_end":6990822,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990823,"byte_end":6990862,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990863,"byte_end":6990868,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990869,"byte_end":6990899,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990900,"byte_end":6990926,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990927,"byte_end":6990930,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990931,"byte_end":6990949,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990950,"byte_end":6990986,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990987,"byte_end":6991008,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991009,"byte_end":6991024,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991025,"byte_end":6991037,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991038,"byte_end":6991044,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991045,"byte_end":6991058,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991059,"byte_end":6991062,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991063,"byte_end":6991090,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991091,"byte_end":6991094,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991095,"byte_end":6991135,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991136,"byte_end":6991176,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991177,"byte_end":6991217,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991218,"byte_end":6991258,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991259,"byte_end":6991296,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991297,"byte_end":6991305,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991306,"byte_end":6991313,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1105},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1116},{"krate":0,"index":1202},{"krate":0,"index":1333},{"krate":0,"index":1374}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Synchronization primitives.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991772,"byte_end":6991803,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991804,"byte_end":6991807,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::sync`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991808,"byte_end":6991861,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991862,"byte_end":6991865,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991866,"byte_end":6991930,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991931,"byte_end":6991934,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ## The need for synchronization","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991935,"byte_end":6991970,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991971,"byte_end":6991974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6991975,"byte_end":6992049,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992050,"byte_end":6992121,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992122,"byte_end":6992125,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992126,"byte_end":6992195,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992196,"byte_end":6992266,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"! program is consistent with the order of the operations in the code.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992267,"byte_end":6992338,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992339,"byte_end":6992342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Consider the following code, operating on some global static variables:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992343,"byte_end":6992418,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992419,"byte_end":6992422,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992423,"byte_end":6992430,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! static mut A: u32 = 0;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992431,"byte_end":6992457,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"! static mut B: u32 = 0;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992458,"byte_end":6992484,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"! static mut C: u32 = 0;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992485,"byte_end":6992511,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992512,"byte_end":6992515,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992516,"byte_end":6992531,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"!     unsafe {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992532,"byte_end":6992548,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"!         A = 3;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992549,"byte_end":6992567,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"!         B = 4;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992568,"byte_end":6992586,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"!         A = A + B;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992587,"byte_end":6992609,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"!         C = B;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992610,"byte_end":6992628,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"!         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992629,"byte_end":6992671,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"!         C = A;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992672,"byte_end":6992690,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992691,"byte_end":6992700,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992701,"byte_end":6992706,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992707,"byte_end":6992714,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992715,"byte_end":6992718,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992719,"byte_end":6992796,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"! is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992797,"byte_end":6992862,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"! modified twice.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992863,"byte_end":6992882,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992883,"byte_end":6992886,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992887,"byte_end":6992958,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"! the line `7 4 4` gets printed.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992959,"byte_end":6992993,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992994,"byte_end":6992997,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6992998,"byte_end":6993075,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! final generated machine code might look very different from the code:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993076,"byte_end":6993149,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993150,"byte_end":6993153,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993154,"byte_end":6993229,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"!   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993230,"byte_end":6993281,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993282,"byte_end":6993285,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993286,"byte_end":6993366,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"!   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993367,"byte_end":6993444,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"!   never getting updated.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993445,"byte_end":6993473,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993474,"byte_end":6993477,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! - The final result could be determined just by looking at the code","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993478,"byte_end":6993548,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"!   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993549,"byte_end":6993614,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"!   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993615,"byte_end":6993661,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993662,"byte_end":6993665,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The compiler is allowed to perform any combination of these","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993666,"byte_end":6993729,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"! optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993730,"byte_end":6993800,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"! produces the same results as the one without optimizations.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993801,"byte_end":6993864,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993865,"byte_end":6993868,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993869,"byte_end":6993939,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"! about the program's execution order are often wrong. Access to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6993940,"byte_end":6994006,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"! global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994007,"byte_end":6994077,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"! compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994078,"byte_end":6994147,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"! to introduce synchronization bugs.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994148,"byte_end":6994186,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994187,"byte_end":6994190,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994191,"byte_end":6994266,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994267,"byte_end":6994337,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"! synchronization primitives in this module.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994338,"byte_end":6994384,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994385,"byte_end":6994388,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994389,"byte_end":6994459,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994460,"byte_end":6994539,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994540,"byte_end":6994543,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Out-of-order execution","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994544,"byte_end":6994573,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994574,"byte_end":6994577,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994578,"byte_end":6994658,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"! various reasons:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994659,"byte_end":6994679,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994680,"byte_end":6994683,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994684,"byte_end":6994760,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"!   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994761,"byte_end":6994837,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"!   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994838,"byte_end":6994916,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"!   start [prefetching] the values from memory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994917,"byte_end":6994966,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994967,"byte_end":6994970,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6994971,"byte_end":6995041,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"!   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995042,"byte_end":6995099,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"!   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995100,"byte_end":6995155,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995156,"byte_end":6995159,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995160,"byte_end":6995227,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"!   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995228,"byte_end":6995285,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"!   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995286,"byte_end":6995356,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"!   even though the machine code describes a sequential process.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995357,"byte_end":6995423,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995424,"byte_end":6995427,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"!   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995428,"byte_end":6995494,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995495,"byte_end":6995498,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995499,"byte_end":6995568,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"!   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995569,"byte_end":6995637,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"!   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995638,"byte_end":6995693,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"!   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995694,"byte_end":6995763,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"!   other CPUs in the right order.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995764,"byte_end":6995800,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"!   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995801,"byte_end":6995870,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"!   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995871,"byte_end":6995928,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995929,"byte_end":6995932,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6995933,"byte_end":6995999,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"! [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996000,"byte_end":6996087,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"! [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996088,"byte_end":6996160,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"! [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996161,"byte_end":6996231,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"! [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996232,"byte_end":6996308,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"! [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996309,"byte_end":6996386,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996387,"byte_end":6996390,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! ## Higher-level synchronization objects","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996391,"byte_end":6996434,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996435,"byte_end":6996438,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996439,"byte_end":6996517,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"! inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996518,"byte_end":6996583,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"! higher-level synchronization objects.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996584,"byte_end":6996625,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996626,"byte_end":6996629,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996630,"byte_end":6996696,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"! For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996697,"byte_end":6996758,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"! implemented with help from the scheduler, which is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996759,"byte_end":6996813,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"! able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996814,"byte_end":6996882,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"! a lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996883,"byte_end":6996894,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996895,"byte_end":6996898,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! The following is an overview of the available synchronization","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996899,"byte_end":6996964,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"! objects:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996965,"byte_end":6996977,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996978,"byte_end":6996981,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6996982,"byte_end":6997052,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"!   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997053,"byte_end":6997120,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"!   data until all the threads have finished using it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997121,"byte_end":6997177,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997178,"byte_end":6997181,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997182,"byte_end":6997250,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"!   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997251,"byte_end":6997321,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"!   together.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997322,"byte_end":6997337,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997338,"byte_end":6997341,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997342,"byte_end":6997408,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"!   message-based communication. Can provide a lightweight","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997409,"byte_end":6997469,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997470,"byte_end":6997533,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"!   extra memory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997534,"byte_end":6997553,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997554,"byte_end":6997557,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997558,"byte_end":6997624,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"!   most one task at a time is able to access some data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997625,"byte_end":6997683,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997684,"byte_end":6997687,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997688,"byte_end":6997756,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"!   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997757,"byte_end":6997821,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"!   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997822,"byte_end":6997892,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"!   a mutex.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997893,"byte_end":6997907,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997908,"byte_end":6997911,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: struct.Arc.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997912,"byte_end":6997940,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"! [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997941,"byte_end":6997977,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"! [`channel`]: fn.channel.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6997978,"byte_end":6998010,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998011,"byte_end":6998043,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"! [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998044,"byte_end":6998078,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998079,"byte_end":6998082,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998083,"byte_end":6998097,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998098,"byte_end":6998101,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998102,"byte_end":6998164,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998165,"byte_end":6998168,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998169,"byte_end":6998176,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998177,"byte_end":6998216,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998217,"byte_end":6998222,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"! use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998223,"byte_end":6998261,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"! use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998262,"byte_end":6998286,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998287,"byte_end":6998290,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998291,"byte_end":6998328,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"! let m2 = m1.clone();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998329,"byte_end":6998353,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998354,"byte_end":6998357,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! task::spawn(async move {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998358,"byte_end":6998386,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"!     *m2.lock().await = 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998387,"byte_end":6998416,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"! })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998417,"byte_end":6998423,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"! .await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998424,"byte_end":6998435,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998436,"byte_end":6998439,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998440,"byte_end":6998476,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998477,"byte_end":6998482,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998483,"byte_end":6998491,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998492,"byte_end":6998499,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":6998501,"byte_end":6998541,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000038,"byte_end":7000043,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"decl_id":null,"docs":" A mutual exclusion primitive for protecting shared data.","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive for protecting shared data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999353,"byte_end":6999413,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999414,"byte_end":6999417,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Mutex`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999418,"byte_end":6999476,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999477,"byte_end":6999480,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999481,"byte_end":6999559,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999560,"byte_end":6999563,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999564,"byte_end":6999578,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999579,"byte_end":6999582,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999583,"byte_end":6999590,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999591,"byte_end":6999630,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999631,"byte_end":6999636,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999637,"byte_end":6999675,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999676,"byte_end":6999700,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999701,"byte_end":6999704,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let m = Arc::new(Mutex::new(0));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999705,"byte_end":6999741,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ let mut tasks = vec![];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999742,"byte_end":6999769,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999770,"byte_end":6999773,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999774,"byte_end":6999794,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     let m = m.clone();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999795,"byte_end":6999821,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/     tasks.push(task::spawn(async move {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999822,"byte_end":6999865,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/         *m.lock().await += 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999866,"byte_end":6999899,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/     }));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999900,"byte_end":6999912,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999913,"byte_end":6999918,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999919,"byte_end":6999922,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for t in tasks {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999923,"byte_end":6999943,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/     t.await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999944,"byte_end":6999960,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999961,"byte_end":6999966,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(*m.lock().await, 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":6999967,"byte_end":7000003,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000004,"byte_end":7000009,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000010,"byte_end":7000018,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000019,"byte_end":7000026,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000432,"byte_end":7000435,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex.","sig":null,"attributes":[{"value":"/ Creates a new mutex.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000258,"byte_end":7000282,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000287,"byte_end":7000290,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000295,"byte_end":7000309,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000314,"byte_end":7000317,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000322,"byte_end":7000329,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000334,"byte_end":7000365,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000370,"byte_end":7000373,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000378,"byte_end":7000408,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000413,"byte_end":7000420,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001192,"byte_end":7001196,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the lock.","sig":null,"attributes":[{"value":"/ Acquires the lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000642,"byte_end":7000664,"line_start":71,"line_end":71,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000669,"byte_end":7000672,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000677,"byte_end":7000733,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000738,"byte_end":7000741,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000746,"byte_end":7000760,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000765,"byte_end":7000768,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000773,"byte_end":7000780,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000785,"byte_end":7000824,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000829,"byte_end":7000834,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000839,"byte_end":7000877,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000882,"byte_end":7000906,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000911,"byte_end":7000914,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000919,"byte_end":7000957,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000962,"byte_end":7000986,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000991,"byte_end":7000994,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000999,"byte_end":7001027,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/     *m1.lock().await = 20;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001032,"byte_end":7001062,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001067,"byte_end":7001073,"line_start":88,"line_end":88,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001078,"byte_end":7001089,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001094,"byte_end":7001097,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001102,"byte_end":7001139,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001144,"byte_end":7001149,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001154,"byte_end":7001162,"line_start":93,"line_end":93,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001167,"byte_end":7001174,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003760,"byte_end":7003768,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7002873,"byte_end":7002906,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7002911,"byte_end":7002914,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7002919,"byte_end":7003010,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003015,"byte_end":7003073,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003078,"byte_end":7003081,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003086,"byte_end":7003166,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003171,"byte_end":7003174,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003179,"byte_end":7003193,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003198,"byte_end":7003201,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003206,"byte_end":7003213,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003218,"byte_end":7003257,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003262,"byte_end":7003267,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003272,"byte_end":7003310,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003315,"byte_end":7003339,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003344,"byte_end":7003347,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003352,"byte_end":7003390,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003395,"byte_end":7003419,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003424,"byte_end":7003427,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003432,"byte_end":7003460,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     if let Some(mut guard) = m1.try_lock() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003465,"byte_end":7003513,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/         *guard = 20;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003518,"byte_end":7003542,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003547,"byte_end":7003563,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/         println!(\"try_lock failed\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003568,"byte_end":7003608,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003613,"byte_end":7003622,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003627,"byte_end":7003633,"line_start":168,"line_end":168,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003638,"byte_end":7003649,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003654,"byte_end":7003657,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003662,"byte_end":7003699,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003704,"byte_end":7003709,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003714,"byte_end":7003722,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003727,"byte_end":7003734,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003739,"byte_end":7003748,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004201,"byte_end":7004211,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7003952,"byte_end":7004006,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004011,"byte_end":7004014,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004019,"byte_end":7004033,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004038,"byte_end":7004041,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004046,"byte_end":7004053,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004058,"byte_end":7004089,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004094,"byte_end":7004097,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004102,"byte_end":7004133,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004138,"byte_end":7004177,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004182,"byte_end":7004189,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004802,"byte_end":7004809,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004283,"byte_end":7004338,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004343,"byte_end":7004346,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004351,"byte_end":7004442,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004447,"byte_end":7004495,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004500,"byte_end":7004503,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004508,"byte_end":7004522,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004527,"byte_end":7004530,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004535,"byte_end":7004542,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004547,"byte_end":7004586,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004591,"byte_end":7004596,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004601,"byte_end":7004632,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004637,"byte_end":7004640,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004645,"byte_end":7004679,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004684,"byte_end":7004710,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004715,"byte_end":7004755,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004760,"byte_end":7004765,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004770,"byte_end":7004778,"line_start":214,"line_end":214,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004783,"byte_end":7004790,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005697,"byte_end":7005707,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005637,"byte_end":7005685,"line_start":249,"line_end":249,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008375,"byte_end":7008381,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A reader-writer lock for protecting shared data.","sig":null,"attributes":[{"value":"/ A reader-writer lock for protecting shared data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007681,"byte_end":7007733,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007734,"byte_end":7007737,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::RwLock`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007738,"byte_end":7007797,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007798,"byte_end":7007801,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::RwLock`]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007802,"byte_end":7007882,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007883,"byte_end":7007886,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007887,"byte_end":7007901,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007902,"byte_end":7007905,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007906,"byte_end":7007913,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007914,"byte_end":7007953,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007954,"byte_end":7007959,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007960,"byte_end":7007992,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007993,"byte_end":7007996,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7007997,"byte_end":7008027,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008028,"byte_end":7008031,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008032,"byte_end":7008081,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008082,"byte_end":7008113,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008114,"byte_end":7008145,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008146,"byte_end":7008169,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008170,"byte_end":7008193,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008194,"byte_end":7008213,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008214,"byte_end":7008217,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Only one write locks can be held at a time.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008218,"byte_end":7008268,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008269,"byte_end":7008304,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008305,"byte_end":7008317,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008318,"byte_end":7008340,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008341,"byte_end":7008346,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008347,"byte_end":7008355,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008356,"byte_end":7008363,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008827,"byte_end":7008830,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (t: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008639,"byte_end":7008676,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008681,"byte_end":7008684,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008689,"byte_end":7008703,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008708,"byte_end":7008711,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008716,"byte_end":7008723,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008728,"byte_end":7008760,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008765,"byte_end":7008768,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008773,"byte_end":7008803,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008808,"byte_end":7008815,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009534,"byte_end":7009538,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009084,"byte_end":7009109,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009114,"byte_end":7009117,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009122,"byte_end":7009178,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009183,"byte_end":7009186,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009191,"byte_end":7009205,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009210,"byte_end":7009213,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009218,"byte_end":7009225,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009230,"byte_end":7009269,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009274,"byte_end":7009279,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009284,"byte_end":7009316,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009321,"byte_end":7009324,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009329,"byte_end":7009359,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009364,"byte_end":7009367,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009372,"byte_end":7009402,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009407,"byte_end":7009429,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009434,"byte_end":7009437,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009442,"byte_end":7009481,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009486,"byte_end":7009491,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009496,"byte_end":7009504,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009509,"byte_end":7009516,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012220,"byte_end":7012228,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011571,"byte_end":7011607,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011612,"byte_end":7011615,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011620,"byte_end":7011714,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011719,"byte_end":7011777,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011782,"byte_end":7011785,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011790,"byte_end":7011870,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011875,"byte_end":7011878,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011883,"byte_end":7011897,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011902,"byte_end":7011905,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011910,"byte_end":7011917,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011922,"byte_end":7011961,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011966,"byte_end":7011971,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7011976,"byte_end":7012008,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012013,"byte_end":7012016,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012021,"byte_end":7012051,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012056,"byte_end":7012059,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012064,"byte_end":7012094,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012099,"byte_end":7012121,"line_start":175,"line_end":175,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012126,"byte_end":7012129,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012134,"byte_end":7012173,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012178,"byte_end":7012183,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012188,"byte_end":7012196,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7012201,"byte_end":7012208,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013502,"byte_end":7013507,"line_start":228,"line_end":228,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013057,"byte_end":7013083,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013088,"byte_end":7013091,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013096,"byte_end":7013152,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013157,"byte_end":7013160,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013165,"byte_end":7013179,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013184,"byte_end":7013187,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013192,"byte_end":7013199,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013204,"byte_end":7013243,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013248,"byte_end":7013253,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013258,"byte_end":7013290,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013295,"byte_end":7013298,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013303,"byte_end":7013333,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013338,"byte_end":7013341,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013346,"byte_end":7013381,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ *n = 2;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013386,"byte_end":7013397,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013402,"byte_end":7013405,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013410,"byte_end":7013449,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013454,"byte_end":7013459,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013464,"byte_end":7013472,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013477,"byte_end":7013484,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016072,"byte_end":7016081,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015420,"byte_end":7015457,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015462,"byte_end":7015465,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015470,"byte_end":7015565,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015570,"byte_end":7015628,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015633,"byte_end":7015636,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015641,"byte_end":7015721,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015726,"byte_end":7015729,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015734,"byte_end":7015748,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015753,"byte_end":7015756,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015761,"byte_end":7015768,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015773,"byte_end":7015812,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015817,"byte_end":7015822,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015827,"byte_end":7015859,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015864,"byte_end":7015867,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015872,"byte_end":7015902,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015907,"byte_end":7015910,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015915,"byte_end":7015945,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015950,"byte_end":7015972,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015977,"byte_end":7015980,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7015985,"byte_end":7016025,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016030,"byte_end":7016035,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016040,"byte_end":7016048,"line_start":301,"line_end":301,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016053,"byte_end":7016060,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016549,"byte_end":7016559,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016301,"byte_end":7016354,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016359,"byte_end":7016362,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016367,"byte_end":7016381,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016386,"byte_end":7016389,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016394,"byte_end":7016401,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016406,"byte_end":7016438,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016443,"byte_end":7016446,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016451,"byte_end":7016482,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lock.into_inner(), 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016487,"byte_end":7016525,"line_start":319,"line_end":319,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016530,"byte_end":7016537,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017149,"byte_end":7017156,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016631,"byte_end":7016686,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016691,"byte_end":7016694,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016699,"byte_end":7016789,"line_start":327,"line_end":327,"column_start":5,"column_end":95}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016794,"byte_end":7016842,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016847,"byte_end":7016850,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016855,"byte_end":7016869,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016874,"byte_end":7016877,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016882,"byte_end":7016889,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016894,"byte_end":7016933,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016938,"byte_end":7016943,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016948,"byte_end":7016980,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016985,"byte_end":7016988,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7016993,"byte_end":7017027,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017032,"byte_end":7017057,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.write().await, 10);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017062,"byte_end":7017102,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017107,"byte_end":7017112,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017117,"byte_end":7017125,"line_start":341,"line_end":341,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017130,"byte_end":7017137,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018058,"byte_end":7018073,"line_start":377,"line_end":377,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017993,"byte_end":7018046,"line_start":376,"line_end":376,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1308},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019156,"byte_end":7019172,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019090,"byte_end":7019144,"line_start":413,"line_end":413,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1375},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2902},{"krate":0,"index":2927},{"krate":0,"index":2931},{"krate":0,"index":2991},{"krate":0,"index":3010},{"krate":0,"index":3017},{"krate":0,"index":3025},{"krate":0,"index":3055},{"krate":0,"index":3101},{"krate":0,"index":3111},{"krate":0,"index":3148}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027765,"byte_end":7027822,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027823,"byte_end":7027826,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027827,"byte_end":7027919,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! threads.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027920,"byte_end":7027932,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027933,"byte_end":7027936,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027937,"byte_end":7027994,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027995,"byte_end":7027998,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## The task model","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7027999,"byte_end":7028020,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028021,"byte_end":7028024,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028025,"byte_end":7028124,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028125,"byte_end":7028222,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028223,"byte_end":7028291,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028292,"byte_end":7028295,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028296,"byte_end":7028393,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"! with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028394,"byte_end":7028484,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"! structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028485,"byte_end":7028584,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"! tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028585,"byte_end":7028653,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028654,"byte_end":7028657,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028658,"byte_end":7028755,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028756,"byte_end":7028853,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"! meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028854,"byte_end":7028953,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"! way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7028954,"byte_end":7029026,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029027,"byte_end":7029030,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ## Spawning a task","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029031,"byte_end":7029053,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029054,"byte_end":7029057,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029058,"byte_end":7029132,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029133,"byte_end":7029136,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029137,"byte_end":7029150,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"! use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029151,"byte_end":7029175,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029176,"byte_end":7029179,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! task::spawn(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029180,"byte_end":7029203,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"!     // some work here","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029204,"byte_end":7029229,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029230,"byte_end":7029237,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029238,"byte_end":7029245,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029246,"byte_end":7029249,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029250,"byte_end":7029347,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"! outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029348,"byte_end":7029435,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029436,"byte_end":7029439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029440,"byte_end":7029539,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"! [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029540,"byte_end":7029607,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029608,"byte_end":7029611,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029612,"byte_end":7029619,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"! use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029620,"byte_end":7029644,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029645,"byte_end":7029648,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029649,"byte_end":7029688,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029689,"byte_end":7029694,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! let child = task::spawn(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029695,"byte_end":7029730,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!     // some work here","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029731,"byte_end":7029756,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029757,"byte_end":7029764,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"! // some work here","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029765,"byte_end":7029786,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"! let res = child.await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029787,"byte_end":7029813,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029814,"byte_end":7029819,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029820,"byte_end":7029828,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029829,"byte_end":7029836,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029837,"byte_end":7029840,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029841,"byte_end":7029917,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029918,"byte_end":7029921,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ## Configuring tasks","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029922,"byte_end":7029946,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029947,"byte_end":7029950,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7029951,"byte_end":7030030,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"! which currently allows you to set the name for the child task:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030031,"byte_end":7030097,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030098,"byte_end":7030101,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030102,"byte_end":7030109,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030110,"byte_end":7030142,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"! use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030143,"byte_end":7030167,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030168,"byte_end":7030171,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030172,"byte_end":7030211,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030212,"byte_end":7030217,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"! task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030218,"byte_end":7030283,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030284,"byte_end":7030318,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"! });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030319,"byte_end":7030326,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030327,"byte_end":7030332,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030333,"byte_end":7030341,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030342,"byte_end":7030349,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030350,"byte_end":7030353,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## The `Task` type","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030354,"byte_end":7030376,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030377,"byte_end":7030380,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030381,"byte_end":7030457,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! two ways:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030458,"byte_end":7030471,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030472,"byte_end":7030475,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030476,"byte_end":7030546,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"!   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030547,"byte_end":7030626,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"! * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030627,"byte_end":7030702,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030703,"byte_end":7030706,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! ## Task-local storage","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030707,"byte_end":7030732,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030733,"byte_end":7030736,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030737,"byte_end":7030815,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"! programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030816,"byte_end":7030890,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"! variable that each task in the program will have its own copy of.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030891,"byte_end":7030960,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7030961,"byte_end":7031038,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031039,"byte_end":7031042,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031043,"byte_end":7031126,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"! task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031127,"byte_end":7031207,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"! value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031208,"byte_end":7031293,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"! [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031294,"byte_end":7031368,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"! closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031369,"byte_end":7031454,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"! way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031455,"byte_end":7031519,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031520,"byte_end":7031523,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Naming tasks","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031524,"byte_end":7031543,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031544,"byte_end":7031547,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031548,"byte_end":7031640,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"! tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031641,"byte_end":7031734,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"! the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031735,"byte_end":7031824,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"! task, use [`Task::name`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031825,"byte_end":7031854,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031855,"byte_end":7031858,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: ../gsync/struct.Arc.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031859,"byte_end":7031896,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"! [`spawn`]: fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031897,"byte_end":7031925,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031926,"byte_end":7031968,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"! [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7031969,"byte_end":7032029,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"! [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032030,"byte_end":7032078,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"! [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032079,"byte_end":7032141,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"! [`Builder`]: struct.Builder.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032142,"byte_end":7032178,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"! [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032179,"byte_end":7032233,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"! [`task::current`]: fn.current.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032234,"byte_end":7032272,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"! [`Task`]: struct.Task.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032273,"byte_end":7032303,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"! [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032304,"byte_end":7032352,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"! [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032353,"byte_end":7032398,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"! [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7032399,"byte_end":7032445,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":2847},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257070,"byte_end":8257079,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256467,"byte_end":8256528,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256529,"byte_end":8256532,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256533,"byte_end":8256611,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256612,"byte_end":8256689,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256690,"byte_end":8256767,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256768,"byte_end":8256771,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256772,"byte_end":8256810,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256811,"byte_end":8256814,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256815,"byte_end":8256867,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256868,"byte_end":8256871,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256872,"byte_end":8256886,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256887,"byte_end":8256890,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256891,"byte_end":8256907,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256908,"byte_end":8256911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256912,"byte_end":8256919,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256920,"byte_end":8256959,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256960,"byte_end":8256965,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256966,"byte_end":8256990,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256991,"byte_end":8256994,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8256995,"byte_end":8257023,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257024,"byte_end":8257029,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257030,"byte_end":8257038,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257039,"byte_end":8257046,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257047,"byte_end":8257056,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258621,"byte_end":8258629,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"fn <F, T> (future: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8257972,"byte_end":8258034,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258035,"byte_end":8258038,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258039,"byte_end":8258138,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258139,"byte_end":8258177,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258178,"byte_end":8258181,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258182,"byte_end":8258221,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258222,"byte_end":8258225,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258226,"byte_end":8258278,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258279,"byte_end":8258282,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258283,"byte_end":8258349,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258350,"byte_end":8258436,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258437,"byte_end":8258440,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258441,"byte_end":8258455,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258456,"byte_end":8258459,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258460,"byte_end":8258473,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258474,"byte_end":8258498,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258499,"byte_end":8258502,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258503,"byte_end":8258518,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258519,"byte_end":8258549,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258550,"byte_end":8258588,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258589,"byte_end":8258599,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258600,"byte_end":8258605,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8258606,"byte_end":8258613,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262210,"byte_end":8262217,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3174}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262112,"byte_end":8262172,"line_start":10,"line_end":10,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262331,"byte_end":8262334,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262279,"byte_end":8262305,"line_start":17,"line_end":17,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262310,"byte_end":8262319,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262454,"byte_end":8262458,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn (mut self, name: String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262392,"byte_end":8262428,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262433,"byte_end":8262442,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262611,"byte_end":8262616,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"fn <F, T> (self, future: F) -> io::Result<JoinHandle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262552,"byte_end":8262599,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":2929},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264771,"byte_end":8264778,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"fn () -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264241,"byte_end":8264282,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264283,"byte_end":8264286,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264287,"byte_end":8264299,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264300,"byte_end":8264303,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264304,"byte_end":8264400,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264401,"byte_end":8264438,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264439,"byte_end":8264442,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264443,"byte_end":8264477,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264478,"byte_end":8264506,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264507,"byte_end":8264563,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264564,"byte_end":8264567,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264568,"byte_end":8264582,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264583,"byte_end":8264586,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264587,"byte_end":8264594,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264595,"byte_end":8264634,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264635,"byte_end":8264640,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264641,"byte_end":8264665,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264666,"byte_end":8264669,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264670,"byte_end":8264740,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264741,"byte_end":8264746,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264747,"byte_end":8264755,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8264756,"byte_end":8264763,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3203},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273015,"byte_end":8273025,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272724,"byte_end":8272770,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272771,"byte_end":8272774,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272775,"byte_end":8272858,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272859,"byte_end":8272911,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272912,"byte_end":8272915,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272916,"byte_end":8272953,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272954,"byte_end":8272957,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8272958,"byte_end":8272986,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273662,"byte_end":8273666,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"fn (&self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273325,"byte_end":8273369,"line_start":26,"line_end":26,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273374,"byte_end":8273377,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273382,"byte_end":8273396,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273401,"byte_end":8273404,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273409,"byte_end":8273416,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273421,"byte_end":8273460,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273465,"byte_end":8273470,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273475,"byte_end":8273499,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273504,"byte_end":8273507,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273512,"byte_end":8273548,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273553,"byte_end":8273566,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273571,"byte_end":8273578,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273583,"byte_end":8273627,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273632,"byte_end":8273637,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273642,"byte_end":8273650,"line_start":40,"line_end":40,"column_start":5,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":3014},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274840,"byte_end":8274845,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"fn (dur: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274226,"byte_end":8274270,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274271,"byte_end":8274274,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274275,"byte_end":8274368,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274369,"byte_end":8274372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274373,"byte_end":8274437,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274438,"byte_end":8274441,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274442,"byte_end":8274520,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274521,"byte_end":8274524,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274525,"byte_end":8274560,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274561,"byte_end":8274564,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274565,"byte_end":8274617,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274618,"byte_end":8274621,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274622,"byte_end":8274636,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274637,"byte_end":8274640,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274641,"byte_end":8274648,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274649,"byte_end":8274688,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274689,"byte_end":8274694,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274695,"byte_end":8274723,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274724,"byte_end":8274727,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274728,"byte_end":8274752,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274753,"byte_end":8274756,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274757,"byte_end":8274803,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274804,"byte_end":8274809,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274810,"byte_end":8274818,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8274819,"byte_end":8274826,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3022},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275463,"byte_end":8275468,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <F, T> (future: F) -> JoinHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275037,"byte_end":8275055,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275056,"byte_end":8275059,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275060,"byte_end":8275154,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275155,"byte_end":8275158,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275159,"byte_end":8275230,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275231,"byte_end":8275234,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275235,"byte_end":8275249,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275250,"byte_end":8275253,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275254,"byte_end":8275261,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275262,"byte_end":8275301,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275302,"byte_end":8275307,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275308,"byte_end":8275332,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275333,"byte_end":8275336,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275337,"byte_end":8275373,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275374,"byte_end":8275387,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275388,"byte_end":8275395,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275396,"byte_end":8275399,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275400,"byte_end":8275432,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275433,"byte_end":8275438,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275439,"byte_end":8275447,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8275448,"byte_end":8275455,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280316,"byte_end":8280320,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":3075}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280281,"byte_end":8280304,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281227,"byte_end":8281229,"line_start":70,"line_end":70,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"fn (&self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281163,"byte_end":8281201,"line_start":68,"line_end":68,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281206,"byte_end":8281215,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281474,"byte_end":8281478,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281284,"byte_end":8281318,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281323,"byte_end":8281326,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281331,"byte_end":8281395,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281400,"byte_end":8281403,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8281408,"byte_end":8281462,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284828,"byte_end":8284834,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284575,"byte_end":8284610,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284611,"byte_end":8284614,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284615,"byte_end":8284629,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284630,"byte_end":8284633,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284634,"byte_end":8284641,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284642,"byte_end":8284666,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284667,"byte_end":8284670,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284671,"byte_end":8284697,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284698,"byte_end":8284750,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284751,"byte_end":8284757,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284758,"byte_end":8284765,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285659,"byte_end":8285667,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285473,"byte_end":8285518,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285519,"byte_end":8285522,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285523,"byte_end":8285615,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285616,"byte_end":8285630,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285716,"byte_end":8285722,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3244},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285763,"byte_end":8285768,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286790,"byte_end":8286794,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285826,"byte_end":8285885,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285890,"byte_end":8285893,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285898,"byte_end":8285966,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285971,"byte_end":8285974,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285979,"byte_end":8286071,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286076,"byte_end":8286079,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286084,"byte_end":8286096,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286101,"byte_end":8286104,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286109,"byte_end":8286191,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286196,"byte_end":8286247,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286252,"byte_end":8286255,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286260,"byte_end":8286294,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286299,"byte_end":8286327,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286332,"byte_end":8286388,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286393,"byte_end":8286396,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286401,"byte_end":8286415,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286420,"byte_end":8286423,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286428,"byte_end":8286435,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286440,"byte_end":8286445,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286450,"byte_end":8286474,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286479,"byte_end":8286482,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286487,"byte_end":8286511,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286516,"byte_end":8286546,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286551,"byte_end":8286554,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286559,"byte_end":8286576,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286581,"byte_end":8286629,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286634,"byte_end":8286639,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286644,"byte_end":8286647,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286652,"byte_end":8286678,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286683,"byte_end":8286724,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286729,"byte_end":8286754,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286759,"byte_end":8286766,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286771,"byte_end":8286778,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8288080,"byte_end":8288088,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8286984,"byte_end":8287054,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287059,"byte_end":8287062,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287067,"byte_end":8287135,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287140,"byte_end":8287143,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287148,"byte_end":8287240,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287245,"byte_end":8287248,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287253,"byte_end":8287341,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287346,"byte_end":8287397,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287402,"byte_end":8287405,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287410,"byte_end":8287444,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287449,"byte_end":8287477,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287482,"byte_end":8287538,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287543,"byte_end":8287546,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287551,"byte_end":8287565,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287570,"byte_end":8287573,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287578,"byte_end":8287585,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287590,"byte_end":8287595,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287600,"byte_end":8287624,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287629,"byte_end":8287632,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287637,"byte_end":8287661,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287666,"byte_end":8287696,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287701,"byte_end":8287704,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287709,"byte_end":8287726,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287731,"byte_end":8287776,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287781,"byte_end":8287786,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287791,"byte_end":8287794,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287799,"byte_end":8287825,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287830,"byte_end":8287872,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287877,"byte_end":8287906,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287911,"byte_end":8287918,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287923,"byte_end":8287926,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8287931,"byte_end":8288003,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8288008,"byte_end":8288056,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8288061,"byte_end":8288068,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289600,"byte_end":8289611,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":3249}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289433,"byte_end":8289481,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289482,"byte_end":8289485,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289486,"byte_end":8289550,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":3260},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3299},{"krate":0,"index":3311},{"krate":0,"index":3322},{"krate":0,"index":3333},{"krate":0,"index":3346},{"krate":0,"index":3375},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3554},{"krate":0,"index":3563},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3596},{"krate":0,"index":3622},{"krate":0,"index":3635},{"krate":0,"index":3646},{"krate":0,"index":3657},{"krate":0,"index":3668},{"krate":0,"index":3679},{"krate":0,"index":3691},{"krate":0,"index":3701},{"krate":0,"index":3711}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Filesystem manipulation operations.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8291996,"byte_end":8292035,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292036,"byte_end":8292039,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::fs`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292040,"byte_end":8292091,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292092,"byte_end":8292095,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292096,"byte_end":8292142,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"! [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292143,"byte_end":8292195,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"! [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292196,"byte_end":8292256,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292257,"byte_end":8292260,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292261,"byte_end":8292295,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292296,"byte_end":8292299,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292300,"byte_end":8292344,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"! * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292345,"byte_end":8292395,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292396,"byte_end":8292399,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292400,"byte_end":8292414,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292415,"byte_end":8292418,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Create a new file and write some bytes to it:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292419,"byte_end":8292468,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292469,"byte_end":8292472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292473,"byte_end":8292486,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292487,"byte_end":8292561,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292562,"byte_end":8292567,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292568,"byte_end":8292596,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292597,"byte_end":8292627,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292628,"byte_end":8292631,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292632,"byte_end":8292680,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292681,"byte_end":8292725,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292726,"byte_end":8292731,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292732,"byte_end":8292749,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8292750,"byte_end":8292757,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3293},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294898,"byte_end":8294910,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294096,"byte_end":8294137,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294138,"byte_end":8294141,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294142,"byte_end":8294240,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294241,"byte_end":8294260,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294261,"byte_end":8294264,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294265,"byte_end":8294332,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294333,"byte_end":8294336,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294337,"byte_end":8294421,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294422,"byte_end":8294425,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294426,"byte_end":8294438,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294439,"byte_end":8294442,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294443,"byte_end":8294501,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294502,"byte_end":8294505,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294506,"byte_end":8294567,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294568,"byte_end":8294625,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294626,"byte_end":8294662,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294663,"byte_end":8294666,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294667,"byte_end":8294681,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294682,"byte_end":8294685,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294686,"byte_end":8294699,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294700,"byte_end":8294774,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294775,"byte_end":8294780,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294781,"byte_end":8294803,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294804,"byte_end":8294807,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294808,"byte_end":8294852,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294853,"byte_end":8294858,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294859,"byte_end":8294876,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8294877,"byte_end":8294884,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3304},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296542,"byte_end":8296546,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"fn <P, Q> (from: P, to: Q) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295344,"byte_end":8295412,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295413,"byte_end":8295416,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295417,"byte_end":8295516,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295517,"byte_end":8295542,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295543,"byte_end":8295546,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295547,"byte_end":8295644,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295645,"byte_end":8295719,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295720,"byte_end":8295723,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295724,"byte_end":8295820,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295821,"byte_end":8295847,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295848,"byte_end":8295851,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295852,"byte_end":8295911,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295912,"byte_end":8295915,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295916,"byte_end":8295946,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295947,"byte_end":8295983,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8295984,"byte_end":8296052,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296053,"byte_end":8296056,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296057,"byte_end":8296069,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296070,"byte_end":8296073,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296074,"byte_end":8296132,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296133,"byte_end":8296136,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296137,"byte_end":8296185,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296186,"byte_end":8296259,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296260,"byte_end":8296296,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296297,"byte_end":8296300,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296301,"byte_end":8296315,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296316,"byte_end":8296319,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296320,"byte_end":8296333,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296334,"byte_end":8296408,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296409,"byte_end":8296414,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296415,"byte_end":8296437,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296438,"byte_end":8296441,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296442,"byte_end":8296496,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296497,"byte_end":8296502,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296503,"byte_end":8296520,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8296521,"byte_end":8296528,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3316},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297991,"byte_end":8298001,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297026,"byte_end":8297054,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297055,"byte_end":8297058,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297059,"byte_end":8297156,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297157,"byte_end":8297248,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297249,"byte_end":8297252,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297253,"byte_end":8297318,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297319,"byte_end":8297322,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297323,"byte_end":8297369,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297370,"byte_end":8297450,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297451,"byte_end":8297454,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297455,"byte_end":8297467,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297468,"byte_end":8297471,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297472,"byte_end":8297530,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297531,"byte_end":8297534,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297535,"byte_end":8297596,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297597,"byte_end":8297647,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297648,"byte_end":8297716,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297717,"byte_end":8297753,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297754,"byte_end":8297757,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297758,"byte_end":8297772,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297773,"byte_end":8297776,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297777,"byte_end":8297790,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297791,"byte_end":8297865,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297866,"byte_end":8297871,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297872,"byte_end":8297894,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297895,"byte_end":8297898,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297899,"byte_end":8297945,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297946,"byte_end":8297951,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297952,"byte_end":8297969,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8297970,"byte_end":8297977,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3327},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299159,"byte_end":8299173,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298404,"byte_end":8298475,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298476,"byte_end":8298479,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298480,"byte_end":8298549,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298550,"byte_end":8298553,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298554,"byte_end":8298642,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298643,"byte_end":8298646,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298647,"byte_end":8298659,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298660,"byte_end":8298663,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298664,"byte_end":8298722,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298723,"byte_end":8298726,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298727,"byte_end":8298788,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298789,"byte_end":8298880,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298881,"byte_end":8298917,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298918,"byte_end":8298921,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298922,"byte_end":8298936,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298937,"byte_end":8298940,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298941,"byte_end":8298954,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8298955,"byte_end":8299029,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299030,"byte_end":8299035,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299036,"byte_end":8299058,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299059,"byte_end":8299062,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299063,"byte_end":8299113,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299114,"byte_end":8299119,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299120,"byte_end":8299137,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8299138,"byte_end":8299145,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4332},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299993,"byte_end":8300003,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299574,"byte_end":8299639,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299640,"byte_end":8299643,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299644,"byte_end":8299724,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299725,"byte_end":8299728,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299729,"byte_end":8299790,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299791,"byte_end":8299794,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299795,"byte_end":8299870,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8299871,"byte_end":8299955,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300531,"byte_end":8300534,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn () -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300218,"byte_end":8300253,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300258,"byte_end":8300261,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300266,"byte_end":8300323,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300328,"byte_end":8300331,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300336,"byte_end":8300372,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300377,"byte_end":8300380,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300385,"byte_end":8300399,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300404,"byte_end":8300407,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300412,"byte_end":8300419,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300424,"byte_end":8300458,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300463,"byte_end":8300466,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300471,"byte_end":8300507,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300512,"byte_end":8300519,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301282,"byte_end":8301291,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn (&mut self, recursive: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300784,"byte_end":8300823,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300828,"byte_end":8300831,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300836,"byte_end":8300930,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300935,"byte_end":8301029,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301034,"byte_end":8301037,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301042,"byte_end":8301086,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301091,"byte_end":8301094,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301099,"byte_end":8301113,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301118,"byte_end":8301121,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301126,"byte_end":8301133,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301138,"byte_end":8301172,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301177,"byte_end":8301180,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301185,"byte_end":8301225,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301230,"byte_end":8301258,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301263,"byte_end":8301270,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302223,"byte_end":8302229,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301395,"byte_end":8301447,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301452,"byte_end":8301455,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301460,"byte_end":8301555,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301560,"byte_end":8301563,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301568,"byte_end":8301580,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301585,"byte_end":8301588,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301593,"byte_end":8301651,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301656,"byte_end":8301659,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301664,"byte_end":8301725,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301730,"byte_end":8301821,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301826,"byte_end":8301862,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301867,"byte_end":8301870,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301875,"byte_end":8301889,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301894,"byte_end":8301897,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301902,"byte_end":8301915,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301920,"byte_end":8301994,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8301999,"byte_end":8302004,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302009,"byte_end":8302043,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302048,"byte_end":8302051,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302056,"byte_end":8302077,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302082,"byte_end":8302106,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302111,"byte_end":8302146,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302151,"byte_end":8302167,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302172,"byte_end":8302177,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302182,"byte_end":8302199,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302204,"byte_end":8302211,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3356},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303518,"byte_end":8303526,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303222,"byte_end":8303250,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303251,"byte_end":8303254,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303255,"byte_end":8303322,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303323,"byte_end":8303326,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303327,"byte_end":8303386,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303387,"byte_end":8303390,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303391,"byte_end":8303425,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303426,"byte_end":8303506,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304417,"byte_end":8304421,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303743,"byte_end":8303783,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303788,"byte_end":8303791,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303796,"byte_end":8303890,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303895,"byte_end":8303913,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303918,"byte_end":8303921,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303926,"byte_end":8303960,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303965,"byte_end":8303968,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303973,"byte_end":8303987,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303992,"byte_end":8303995,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304000,"byte_end":8304013,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304018,"byte_end":8304092,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304097,"byte_end":8304102,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304107,"byte_end":8304129,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304134,"byte_end":8304164,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304169,"byte_end":8304172,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304177,"byte_end":8304220,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304225,"byte_end":8304228,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304233,"byte_end":8304277,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304282,"byte_end":8304307,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304312,"byte_end":8304351,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304356,"byte_end":8304361,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304366,"byte_end":8304371,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304376,"byte_end":8304393,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304398,"byte_end":8304405,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305552,"byte_end":8305560,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304482,"byte_end":8304520,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304525,"byte_end":8304528,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304533,"byte_end":8304601,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304606,"byte_end":8304609,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304614,"byte_end":8304705,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304710,"byte_end":8304722,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304727,"byte_end":8304730,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304735,"byte_end":8304785,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304790,"byte_end":8304793,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304798,"byte_end":8304810,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304815,"byte_end":8304818,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304823,"byte_end":8304881,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304886,"byte_end":8304889,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304894,"byte_end":8304967,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8304972,"byte_end":8305037,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305042,"byte_end":8305078,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305083,"byte_end":8305086,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305091,"byte_end":8305105,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305110,"byte_end":8305113,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305118,"byte_end":8305131,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305136,"byte_end":8305210,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305215,"byte_end":8305220,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305225,"byte_end":8305247,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305252,"byte_end":8305282,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305287,"byte_end":8305290,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305295,"byte_end":8305338,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305343,"byte_end":8305346,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305351,"byte_end":8305395,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305400,"byte_end":8305425,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305430,"byte_end":8305480,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305485,"byte_end":8305490,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305495,"byte_end":8305500,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305505,"byte_end":8305522,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305527,"byte_end":8305534,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306753,"byte_end":8306762,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305696,"byte_end":8305735,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305740,"byte_end":8305743,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305748,"byte_end":8305827,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305832,"byte_end":8305835,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305840,"byte_end":8305929,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305934,"byte_end":8305937,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305942,"byte_end":8305976,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305981,"byte_end":8305984,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8305989,"byte_end":8306001,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306006,"byte_end":8306009,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306014,"byte_end":8306072,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306077,"byte_end":8306080,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306085,"byte_end":8306158,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306163,"byte_end":8306237,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306242,"byte_end":8306278,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306283,"byte_end":8306286,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306291,"byte_end":8306305,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306310,"byte_end":8306313,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306318,"byte_end":8306331,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306336,"byte_end":8306410,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306415,"byte_end":8306420,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306425,"byte_end":8306447,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306452,"byte_end":8306482,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306487,"byte_end":8306490,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306495,"byte_end":8306538,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306543,"byte_end":8306546,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306551,"byte_end":8306595,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306600,"byte_end":8306625,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306630,"byte_end":8306681,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306686,"byte_end":8306691,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306696,"byte_end":8306701,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306706,"byte_end":8306723,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306728,"byte_end":8306735,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307442,"byte_end":8307451,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306899,"byte_end":8306964,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306969,"byte_end":8306972,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306977,"byte_end":8306991,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8306996,"byte_end":8306999,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307004,"byte_end":8307017,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307022,"byte_end":8307096,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307101,"byte_end":8307106,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307111,"byte_end":8307133,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307138,"byte_end":8307168,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307173,"byte_end":8307176,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307181,"byte_end":8307224,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307229,"byte_end":8307232,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307237,"byte_end":8307281,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307286,"byte_end":8307311,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307316,"byte_end":8307376,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307381,"byte_end":8307386,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307391,"byte_end":8307396,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307401,"byte_end":8307418,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307423,"byte_end":8307430,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3412},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309875,"byte_end":8309879,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308600,"byte_end":8308635,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308636,"byte_end":8308639,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308640,"byte_end":8308736,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308737,"byte_end":8308749,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308750,"byte_end":8308753,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308754,"byte_end":8308849,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308850,"byte_end":8308948,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308949,"byte_end":8308952,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8308953,"byte_end":8309008,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309009,"byte_end":8309012,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309013,"byte_end":8309047,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309048,"byte_end":8309120,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309121,"byte_end":8309124,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309125,"byte_end":8309139,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309140,"byte_end":8309143,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309144,"byte_end":8309193,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309194,"byte_end":8309197,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309198,"byte_end":8309211,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309212,"byte_end":8309286,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309287,"byte_end":8309292,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309293,"byte_end":8309321,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309322,"byte_end":8309352,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309353,"byte_end":8309356,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309357,"byte_end":8309405,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309406,"byte_end":8309450,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309451,"byte_end":8309456,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309457,"byte_end":8309474,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309475,"byte_end":8309482,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309483,"byte_end":8309486,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309487,"byte_end":8309542,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309543,"byte_end":8309546,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309547,"byte_end":8309560,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309561,"byte_end":8309635,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309636,"byte_end":8309641,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309642,"byte_end":8309670,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309671,"byte_end":8309701,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309702,"byte_end":8309705,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309706,"byte_end":8309752,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309753,"byte_end":8309787,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309788,"byte_end":8309831,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309832,"byte_end":8309837,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309838,"byte_end":8309855,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8309856,"byte_end":8309863,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311340,"byte_end":8311344,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310507,"byte_end":8310542,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310547,"byte_end":8310550,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310555,"byte_end":8310615,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310620,"byte_end":8310623,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310628,"byte_end":8310640,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310645,"byte_end":8310648,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310653,"byte_end":8310711,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310716,"byte_end":8310719,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310724,"byte_end":8310772,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310777,"byte_end":8310838,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310843,"byte_end":8310879,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310884,"byte_end":8310887,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310892,"byte_end":8310973,"line_start":99,"line_end":99,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310978,"byte_end":8310981,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310986,"byte_end":8311048,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311053,"byte_end":8311056,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311061,"byte_end":8311075,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311080,"byte_end":8311083,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311088,"byte_end":8311101,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311106,"byte_end":8311180,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311185,"byte_end":8311190,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311195,"byte_end":8311223,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311228,"byte_end":8311231,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311236,"byte_end":8311278,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311283,"byte_end":8311288,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311293,"byte_end":8311310,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311315,"byte_end":8311322,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312597,"byte_end":8312603,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311652,"byte_end":8311688,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311693,"byte_end":8311696,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311701,"byte_end":8311792,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311797,"byte_end":8311800,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311805,"byte_end":8311865,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311870,"byte_end":8311873,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311878,"byte_end":8311890,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311895,"byte_end":8311898,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311903,"byte_end":8311961,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311966,"byte_end":8311969,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8311974,"byte_end":8312023,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312028,"byte_end":8312093,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312098,"byte_end":8312134,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312139,"byte_end":8312142,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312147,"byte_end":8312228,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312233,"byte_end":8312236,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312241,"byte_end":8312303,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312308,"byte_end":8312311,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312316,"byte_end":8312330,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312335,"byte_end":8312338,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312343,"byte_end":8312356,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312361,"byte_end":8312435,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312440,"byte_end":8312445,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312450,"byte_end":8312478,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312483,"byte_end":8312486,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312491,"byte_end":8312535,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312540,"byte_end":8312545,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312550,"byte_end":8312567,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312572,"byte_end":8312579,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313704,"byte_end":8313712,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8312932,"byte_end":8313000,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313005,"byte_end":8313008,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313013,"byte_end":8313090,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313095,"byte_end":8313098,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313103,"byte_end":8313193,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313198,"byte_end":8313290,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313295,"byte_end":8313298,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313303,"byte_end":8313317,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313322,"byte_end":8313325,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313330,"byte_end":8313343,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313348,"byte_end":8313422,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313427,"byte_end":8313432,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313437,"byte_end":8313465,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313470,"byte_end":8313500,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313505,"byte_end":8313508,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313513,"byte_end":8313561,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313566,"byte_end":8313610,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313615,"byte_end":8313642,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313647,"byte_end":8313652,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313657,"byte_end":8313674,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8313679,"byte_end":8313686,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314917,"byte_end":8314926,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314049,"byte_end":8314104,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314109,"byte_end":8314112,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314117,"byte_end":8314204,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314209,"byte_end":8314212,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314217,"byte_end":8314309,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314314,"byte_end":8314362,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314367,"byte_end":8314370,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314375,"byte_end":8314455,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314460,"byte_end":8314463,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314468,"byte_end":8314502,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314507,"byte_end":8314510,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314515,"byte_end":8314529,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314534,"byte_end":8314537,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314542,"byte_end":8314555,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314560,"byte_end":8314634,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314639,"byte_end":8314644,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314649,"byte_end":8314677,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314682,"byte_end":8314712,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314717,"byte_end":8314720,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314725,"byte_end":8314773,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314778,"byte_end":8314822,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314827,"byte_end":8314855,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314860,"byte_end":8314865,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314870,"byte_end":8314887,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8314892,"byte_end":8314899,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316023,"byte_end":8316030,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315265,"byte_end":8315299,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315304,"byte_end":8315307,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315312,"byte_end":8315403,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315408,"byte_end":8315501,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315506,"byte_end":8315546,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315551,"byte_end":8315554,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315559,"byte_end":8315654,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315659,"byte_end":8315696,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315701,"byte_end":8315704,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315709,"byte_end":8315723,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315728,"byte_end":8315731,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315736,"byte_end":8315749,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315754,"byte_end":8315828,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315833,"byte_end":8315838,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315843,"byte_end":8315871,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315876,"byte_end":8315879,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315884,"byte_end":8315928,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315933,"byte_end":8315961,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315966,"byte_end":8315971,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315976,"byte_end":8315993,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8315998,"byte_end":8316005,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316849,"byte_end":8316857,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316480,"byte_end":8316510,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316515,"byte_end":8316518,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316523,"byte_end":8316537,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316542,"byte_end":8316545,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316550,"byte_end":8316563,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316568,"byte_end":8316642,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316647,"byte_end":8316652,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316657,"byte_end":8316685,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316690,"byte_end":8316693,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316698,"byte_end":8316740,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316745,"byte_end":8316787,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316792,"byte_end":8316797,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316802,"byte_end":8316819,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316824,"byte_end":8316831,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317703,"byte_end":8317718,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8316994,"byte_end":8317034,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317039,"byte_end":8317042,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317047,"byte_end":8317059,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317064,"byte_end":8317067,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317072,"byte_end":8317130,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317135,"byte_end":8317138,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317143,"byte_end":8317220,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317225,"byte_end":8317261,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317266,"byte_end":8317269,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317274,"byte_end":8317288,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317293,"byte_end":8317296,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317301,"byte_end":8317314,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317319,"byte_end":8317393,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317398,"byte_end":8317403,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317408,"byte_end":8317436,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317441,"byte_end":8317444,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317449,"byte_end":8317493,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317498,"byte_end":8317501,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317506,"byte_end":8317563,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317568,"byte_end":8317597,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317602,"byte_end":8317641,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317646,"byte_end":8317651,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317656,"byte_end":8317673,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317678,"byte_end":8317685,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3547},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340982,"byte_end":8340991,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340218,"byte_end":8340260,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340261,"byte_end":8340264,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340265,"byte_end":8340360,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340361,"byte_end":8340426,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340427,"byte_end":8340430,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340431,"byte_end":8340495,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340496,"byte_end":8340499,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340500,"byte_end":8340578,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340579,"byte_end":8340582,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340583,"byte_end":8340595,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340596,"byte_end":8340599,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340600,"byte_end":8340658,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340659,"byte_end":8340662,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340663,"byte_end":8340710,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340711,"byte_end":8340747,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340748,"byte_end":8340751,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340752,"byte_end":8340766,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340767,"byte_end":8340770,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340771,"byte_end":8340784,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340785,"byte_end":8340859,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340860,"byte_end":8340865,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340866,"byte_end":8340888,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340889,"byte_end":8340892,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340893,"byte_end":8340936,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340937,"byte_end":8340942,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340943,"byte_end":8340960,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8340961,"byte_end":8340968,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3558},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342476,"byte_end":8342484,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341531,"byte_end":8341561,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341562,"byte_end":8341565,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341566,"byte_end":8341663,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341664,"byte_end":8341755,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341756,"byte_end":8341768,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341769,"byte_end":8341772,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341773,"byte_end":8341836,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341837,"byte_end":8341840,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341841,"byte_end":8341891,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341892,"byte_end":8341968,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341969,"byte_end":8341972,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341973,"byte_end":8341985,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341986,"byte_end":8341989,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8341990,"byte_end":8342048,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342049,"byte_end":8342052,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342053,"byte_end":8342114,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342115,"byte_end":8342189,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342190,"byte_end":8342226,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342227,"byte_end":8342230,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342231,"byte_end":8342245,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342246,"byte_end":8342249,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342250,"byte_end":8342263,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342264,"byte_end":8342338,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342339,"byte_end":8342344,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342345,"byte_end":8342367,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342368,"byte_end":8342371,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342372,"byte_end":8342430,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342431,"byte_end":8342436,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342437,"byte_end":8342454,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8342455,"byte_end":8342462,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4358},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350339,"byte_end":8350350,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8348794,"byte_end":8348852,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8348853,"byte_end":8348856,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8348857,"byte_end":8348915,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8348916,"byte_end":8348919,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8348920,"byte_end":8349017,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349018,"byte_end":8349063,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349064,"byte_end":8349067,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349068,"byte_end":8349164,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349165,"byte_end":8349239,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349240,"byte_end":8349243,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349244,"byte_end":8349306,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349307,"byte_end":8349310,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349311,"byte_end":8349337,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349338,"byte_end":8349366,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349367,"byte_end":8349397,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349398,"byte_end":8349432,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349433,"byte_end":8349463,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349464,"byte_end":8349502,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349503,"byte_end":8349589,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349590,"byte_end":8349593,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349594,"byte_end":8349608,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349609,"byte_end":8349612,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349613,"byte_end":8349641,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349642,"byte_end":8349645,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349646,"byte_end":8349659,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349660,"byte_end":8349734,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349735,"byte_end":8349740,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349741,"byte_end":8349776,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349777,"byte_end":8349780,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349781,"byte_end":8349814,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349815,"byte_end":8349834,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349835,"byte_end":8349857,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349858,"byte_end":8349874,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349875,"byte_end":8349880,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349881,"byte_end":8349898,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349899,"byte_end":8349906,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349907,"byte_end":8349910,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349911,"byte_end":8349995,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8349996,"byte_end":8349999,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350000,"byte_end":8350013,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350014,"byte_end":8350088,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350089,"byte_end":8350094,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350095,"byte_end":8350130,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350131,"byte_end":8350134,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350135,"byte_end":8350168,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350169,"byte_end":8350188,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350189,"byte_end":8350209,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350210,"byte_end":8350231,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350232,"byte_end":8350254,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350255,"byte_end":8350271,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350272,"byte_end":8350277,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350278,"byte_end":8350295,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350296,"byte_end":8350303,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350847,"byte_end":8350850,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350398,"byte_end":8350433,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350438,"byte_end":8350441,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350446,"byte_end":8350491,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350496,"byte_end":8350499,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350504,"byte_end":8350518,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350523,"byte_end":8350526,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350531,"byte_end":8350544,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350549,"byte_end":8350623,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350628,"byte_end":8350633,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350638,"byte_end":8350673,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350678,"byte_end":8350681,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350686,"byte_end":8350719,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350724,"byte_end":8350743,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350748,"byte_end":8350770,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350775,"byte_end":8350791,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350796,"byte_end":8350801,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350806,"byte_end":8350823,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350828,"byte_end":8350835,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351421,"byte_end":8351425,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350930,"byte_end":8350970,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350975,"byte_end":8350978,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350983,"byte_end":8351065,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351070,"byte_end":8351073,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351078,"byte_end":8351092,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351097,"byte_end":8351100,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351105,"byte_end":8351118,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351123,"byte_end":8351197,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351202,"byte_end":8351207,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351212,"byte_end":8351247,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351252,"byte_end":8351255,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351260,"byte_end":8351293,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351298,"byte_end":8351317,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351322,"byte_end":8351344,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351349,"byte_end":8351365,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351370,"byte_end":8351375,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351380,"byte_end":8351397,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351402,"byte_end":8351409,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352145,"byte_end":8352150,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351522,"byte_end":8351563,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351568,"byte_end":8351571,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351576,"byte_end":8351658,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351663,"byte_end":8351666,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351671,"byte_end":8351765,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351770,"byte_end":8351788,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351793,"byte_end":8351796,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351801,"byte_end":8351815,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351820,"byte_end":8351823,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351828,"byte_end":8351841,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351846,"byte_end":8351920,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351925,"byte_end":8351930,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351935,"byte_end":8351970,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351975,"byte_end":8351978,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8351983,"byte_end":8352016,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352021,"byte_end":8352041,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352046,"byte_end":8352068,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352073,"byte_end":8352089,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352094,"byte_end":8352099,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352104,"byte_end":8352121,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352126,"byte_end":8352133,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352835,"byte_end":8352841,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352250,"byte_end":8352292,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352297,"byte_end":8352300,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352305,"byte_end":8352399,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352404,"byte_end":8352477,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352482,"byte_end":8352485,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352490,"byte_end":8352504,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352509,"byte_end":8352512,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352517,"byte_end":8352530,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352535,"byte_end":8352609,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352614,"byte_end":8352619,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352624,"byte_end":8352659,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352664,"byte_end":8352667,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352672,"byte_end":8352705,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352710,"byte_end":8352731,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352736,"byte_end":8352758,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352763,"byte_end":8352779,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352784,"byte_end":8352789,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352794,"byte_end":8352811,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352816,"byte_end":8352823,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353649,"byte_end":8353657,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8352944,"byte_end":8353003,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353008,"byte_end":8353011,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353016,"byte_end":8353092,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353097,"byte_end":8353100,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353105,"byte_end":8353188,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353193,"byte_end":8353196,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353201,"byte_end":8353229,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353234,"byte_end":8353264,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353269,"byte_end":8353272,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353277,"byte_end":8353291,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353296,"byte_end":8353299,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353304,"byte_end":8353317,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353322,"byte_end":8353396,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353401,"byte_end":8353406,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353411,"byte_end":8353446,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353451,"byte_end":8353454,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353459,"byte_end":8353492,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353497,"byte_end":8353517,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353522,"byte_end":8353545,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353550,"byte_end":8353572,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353577,"byte_end":8353593,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353598,"byte_end":8353603,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353608,"byte_end":8353625,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353630,"byte_end":8353637,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354496,"byte_end":8354502,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353766,"byte_end":8353836,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353841,"byte_end":8353844,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353849,"byte_end":8353938,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353943,"byte_end":8353946,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8353951,"byte_end":8354037,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354042,"byte_end":8354045,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354050,"byte_end":8354078,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354083,"byte_end":8354113,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354118,"byte_end":8354121,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354126,"byte_end":8354140,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354145,"byte_end":8354148,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354153,"byte_end":8354166,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354171,"byte_end":8354245,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354250,"byte_end":8354255,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354260,"byte_end":8354295,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354300,"byte_end":8354303,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354308,"byte_end":8354341,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354346,"byte_end":8354366,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354371,"byte_end":8354392,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354397,"byte_end":8354419,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354424,"byte_end":8354440,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354445,"byte_end":8354450,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354455,"byte_end":8354472,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354477,"byte_end":8354484,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355399,"byte_end":8355409,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354605,"byte_end":8354687,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354692,"byte_end":8354695,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354700,"byte_end":8354791,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354796,"byte_end":8354837,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354842,"byte_end":8354845,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354850,"byte_end":8354936,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354941,"byte_end":8354944,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354949,"byte_end":8354977,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8354982,"byte_end":8355012,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355017,"byte_end":8355020,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355025,"byte_end":8355039,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355044,"byte_end":8355047,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355052,"byte_end":8355065,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355070,"byte_end":8355144,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355149,"byte_end":8355154,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355159,"byte_end":8355194,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355199,"byte_end":8355202,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355207,"byte_end":8355240,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355245,"byte_end":8355265,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355270,"byte_end":8355295,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355300,"byte_end":8355322,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355327,"byte_end":8355343,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355348,"byte_end":8355353,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355358,"byte_end":8355375,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355380,"byte_end":8355387,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356847,"byte_end":8356851,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<File>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355524,"byte_end":8355569,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355574,"byte_end":8355577,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355582,"byte_end":8355594,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355599,"byte_end":8355602,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355607,"byte_end":8355665,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355670,"byte_end":8355673,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355678,"byte_end":8355759,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355764,"byte_end":8355813,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355818,"byte_end":8355902,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355907,"byte_end":8355964,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8355969,"byte_end":8356063,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356068,"byte_end":8356135,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356140,"byte_end":8356226,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356231,"byte_end":8356267,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356272,"byte_end":8356275,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356280,"byte_end":8356306,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356311,"byte_end":8356339,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356344,"byte_end":8356374,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356379,"byte_end":8356413,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356418,"byte_end":8356448,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356453,"byte_end":8356491,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356496,"byte_end":8356499,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356504,"byte_end":8356518,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356523,"byte_end":8356526,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356531,"byte_end":8356544,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356549,"byte_end":8356623,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356628,"byte_end":8356633,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356638,"byte_end":8356673,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356678,"byte_end":8356681,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356686,"byte_end":8356719,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356724,"byte_end":8356743,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356748,"byte_end":8356770,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356775,"byte_end":8356791,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356796,"byte_end":8356801,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356806,"byte_end":8356823,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8356828,"byte_end":8356835,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3590},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360725,"byte_end":8360729,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn <P> (path: P) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359720,"byte_end":8359773,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359774,"byte_end":8359777,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359778,"byte_end":8359877,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359878,"byte_end":8359974,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359975,"byte_end":8359987,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359988,"byte_end":8359991,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8359992,"byte_end":8360073,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360074,"byte_end":8360077,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360078,"byte_end":8360137,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360138,"byte_end":8360141,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360142,"byte_end":8360188,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360189,"byte_end":8360257,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360258,"byte_end":8360261,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360262,"byte_end":8360274,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360275,"byte_end":8360278,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360279,"byte_end":8360337,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360338,"byte_end":8360341,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360342,"byte_end":8360390,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360391,"byte_end":8360452,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360453,"byte_end":8360489,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360490,"byte_end":8360493,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360494,"byte_end":8360508,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360509,"byte_end":8360512,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360513,"byte_end":8360526,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360527,"byte_end":8360601,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360602,"byte_end":8360607,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360608,"byte_end":8360630,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360631,"byte_end":8360634,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360635,"byte_end":8360679,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360680,"byte_end":8360685,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360686,"byte_end":8360703,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8360704,"byte_end":8360711,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3609},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362330,"byte_end":8362338,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn <P> (path: P) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361238,"byte_end":8361285,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361286,"byte_end":8361289,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361290,"byte_end":8361384,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361385,"byte_end":8361425,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361426,"byte_end":8361429,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361430,"byte_end":8361493,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361494,"byte_end":8361497,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361498,"byte_end":8361540,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361541,"byte_end":8361579,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361580,"byte_end":8361656,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361657,"byte_end":8361660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361661,"byte_end":8361673,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361674,"byte_end":8361677,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361678,"byte_end":8361736,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361737,"byte_end":8361740,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361741,"byte_end":8361794,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361795,"byte_end":8361877,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361878,"byte_end":8361914,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361915,"byte_end":8361918,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361919,"byte_end":8361933,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361934,"byte_end":8361937,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361938,"byte_end":8361951,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8361952,"byte_end":8362026,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362027,"byte_end":8362032,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362033,"byte_end":8362055,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362056,"byte_end":8362086,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362087,"byte_end":8362090,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362091,"byte_end":8362138,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362139,"byte_end":8362142,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362143,"byte_end":8362191,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362192,"byte_end":8362217,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362218,"byte_end":8362278,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362279,"byte_end":8362284,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362285,"byte_end":8362290,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362291,"byte_end":8362308,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362309,"byte_end":8362316,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4370},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363143,"byte_end":8363150,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362618,"byte_end":8362657,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362658,"byte_end":8362661,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362662,"byte_end":8362730,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362731,"byte_end":8362829,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362830,"byte_end":8362851,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362852,"byte_end":8362855,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362856,"byte_end":8362914,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362915,"byte_end":8362918,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362919,"byte_end":8362953,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362954,"byte_end":8362996,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8362997,"byte_end":8363035,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363036,"byte_end":8363114,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":3629},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365435,"byte_end":8365444,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8364816,"byte_end":8364876,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8364877,"byte_end":8364880,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8364881,"byte_end":8364945,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8364946,"byte_end":8364949,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8364950,"byte_end":8365028,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365029,"byte_end":8365032,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365033,"byte_end":8365045,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365046,"byte_end":8365049,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365050,"byte_end":8365108,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365109,"byte_end":8365112,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365113,"byte_end":8365161,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365162,"byte_end":8365198,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365199,"byte_end":8365202,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365203,"byte_end":8365217,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365218,"byte_end":8365221,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365222,"byte_end":8365235,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365236,"byte_end":8365310,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365311,"byte_end":8365316,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365317,"byte_end":8365339,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365340,"byte_end":8365343,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365344,"byte_end":8365389,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365390,"byte_end":8365395,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365396,"byte_end":8365413,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8365414,"byte_end":8365421,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3640},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366948,"byte_end":8366962,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn <P> (path: P) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8365868,"byte_end":8365920,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8365921,"byte_end":8365924,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8365925,"byte_end":8366024,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366025,"byte_end":8366121,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366122,"byte_end":8366134,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366135,"byte_end":8366138,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366139,"byte_end":8366211,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366212,"byte_end":8366215,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366216,"byte_end":8366285,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366286,"byte_end":8366289,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366290,"byte_end":8366316,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366317,"byte_end":8366405,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366406,"byte_end":8366409,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366410,"byte_end":8366422,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366423,"byte_end":8366426,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366427,"byte_end":8366485,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366486,"byte_end":8366489,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366490,"byte_end":8366538,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366539,"byte_end":8366600,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366601,"byte_end":8366665,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366666,"byte_end":8366702,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366703,"byte_end":8366706,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366707,"byte_end":8366721,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366722,"byte_end":8366725,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366726,"byte_end":8366739,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366740,"byte_end":8366814,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366815,"byte_end":8366820,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366821,"byte_end":8366843,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366844,"byte_end":8366847,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366848,"byte_end":8366902,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366903,"byte_end":8366908,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366909,"byte_end":8366926,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8366927,"byte_end":8366934,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3651},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8368036,"byte_end":8368046,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367369,"byte_end":8367400,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367401,"byte_end":8367404,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367405,"byte_end":8367470,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367471,"byte_end":8367474,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367475,"byte_end":8367555,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367556,"byte_end":8367559,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367560,"byte_end":8367572,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367573,"byte_end":8367576,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367577,"byte_end":8367635,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367636,"byte_end":8367639,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367640,"byte_end":8367692,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367693,"byte_end":8367761,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367762,"byte_end":8367798,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367799,"byte_end":8367802,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367803,"byte_end":8367817,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367818,"byte_end":8367821,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367822,"byte_end":8367835,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367836,"byte_end":8367910,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367911,"byte_end":8367916,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367917,"byte_end":8367939,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367940,"byte_end":8367943,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367944,"byte_end":8367990,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367991,"byte_end":8367996,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8367997,"byte_end":8368014,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8368015,"byte_end":8368022,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3662},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369144,"byte_end":8369158,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368444,"byte_end":8368492,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368493,"byte_end":8368496,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368497,"byte_end":8368566,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368567,"byte_end":8368570,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368571,"byte_end":8368659,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368660,"byte_end":8368663,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368664,"byte_end":8368676,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368677,"byte_end":8368680,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368681,"byte_end":8368739,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368740,"byte_end":8368743,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368744,"byte_end":8368796,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368797,"byte_end":8368865,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368866,"byte_end":8368902,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368903,"byte_end":8368906,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368907,"byte_end":8368921,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368922,"byte_end":8368925,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368926,"byte_end":8368939,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8368940,"byte_end":8369014,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369015,"byte_end":8369020,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369021,"byte_end":8369043,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369044,"byte_end":8369047,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369048,"byte_end":8369098,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369099,"byte_end":8369104,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369105,"byte_end":8369122,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8369123,"byte_end":8369130,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3673},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370199,"byte_end":8370210,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369560,"byte_end":8369579,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369580,"byte_end":8369583,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369584,"byte_end":8369650,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369651,"byte_end":8369654,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369655,"byte_end":8369737,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369738,"byte_end":8369741,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369742,"byte_end":8369754,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369755,"byte_end":8369758,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369759,"byte_end":8369817,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369818,"byte_end":8369821,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369822,"byte_end":8369870,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369871,"byte_end":8369934,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369935,"byte_end":8369971,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369972,"byte_end":8369975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369976,"byte_end":8369990,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369991,"byte_end":8369994,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8369995,"byte_end":8370008,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370009,"byte_end":8370083,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370084,"byte_end":8370089,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370090,"byte_end":8370112,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370113,"byte_end":8370116,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370117,"byte_end":8370153,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370154,"byte_end":8370159,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370160,"byte_end":8370177,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8370178,"byte_end":8370185,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3684},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371452,"byte_end":8371458,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370604,"byte_end":8370654,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370655,"byte_end":8370658,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370659,"byte_end":8370755,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370756,"byte_end":8370770,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370771,"byte_end":8370774,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370775,"byte_end":8370836,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370837,"byte_end":8370840,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370841,"byte_end":8370913,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370914,"byte_end":8370917,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370918,"byte_end":8370930,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370931,"byte_end":8370934,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370935,"byte_end":8370993,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370994,"byte_end":8370997,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8370998,"byte_end":8371059,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371060,"byte_end":8371111,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371112,"byte_end":8371183,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371184,"byte_end":8371220,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371221,"byte_end":8371224,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371225,"byte_end":8371239,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371240,"byte_end":8371243,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371244,"byte_end":8371257,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371258,"byte_end":8371332,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371333,"byte_end":8371338,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371339,"byte_end":8371361,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371362,"byte_end":8371365,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371366,"byte_end":8371406,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371407,"byte_end":8371412,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371413,"byte_end":8371430,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8371431,"byte_end":8371438,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3696},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372833,"byte_end":8372848,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn <P> (path: P, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372008,"byte_end":8372059,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372060,"byte_end":8372063,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372064,"byte_end":8372134,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372135,"byte_end":8372138,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372139,"byte_end":8372229,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372230,"byte_end":8372233,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372234,"byte_end":8372246,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372247,"byte_end":8372250,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372251,"byte_end":8372309,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372310,"byte_end":8372313,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372314,"byte_end":8372375,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372376,"byte_end":8372466,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372467,"byte_end":8372503,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372504,"byte_end":8372507,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372508,"byte_end":8372522,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372523,"byte_end":8372526,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372527,"byte_end":8372540,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372541,"byte_end":8372615,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372616,"byte_end":8372621,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372622,"byte_end":8372644,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372645,"byte_end":8372648,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372649,"byte_end":8372711,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372712,"byte_end":8372740,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372741,"byte_end":8372787,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372788,"byte_end":8372793,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372794,"byte_end":8372811,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8372812,"byte_end":8372819,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3706},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8374080,"byte_end":8374096,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373161,"byte_end":8373224,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373225,"byte_end":8373228,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373229,"byte_end":8373326,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373327,"byte_end":8373356,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373357,"byte_end":8373360,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373361,"byte_end":8373432,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373433,"byte_end":8373436,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373437,"byte_end":8373471,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373472,"byte_end":8373564,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373565,"byte_end":8373568,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373569,"byte_end":8373581,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373582,"byte_end":8373585,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373586,"byte_end":8373644,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373645,"byte_end":8373648,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373649,"byte_end":8373710,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373711,"byte_end":8373785,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373786,"byte_end":8373822,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373823,"byte_end":8373826,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373827,"byte_end":8373841,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373842,"byte_end":8373845,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373846,"byte_end":8373859,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373860,"byte_end":8373934,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373935,"byte_end":8373940,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373941,"byte_end":8373963,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373964,"byte_end":8373967,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8373968,"byte_end":8374034,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8374035,"byte_end":8374040,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8374041,"byte_end":8374058,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8374059,"byte_end":8374066,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3716},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375192,"byte_end":8375197,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <P, C> (path: P, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374400,"byte_end":8374458,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374459,"byte_end":8374462,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374463,"byte_end":8374560,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374561,"byte_end":8374576,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374577,"byte_end":8374580,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374581,"byte_end":8374641,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374642,"byte_end":8374645,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374646,"byte_end":8374716,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374717,"byte_end":8374720,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374721,"byte_end":8374733,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374734,"byte_end":8374737,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374738,"byte_end":8374796,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374797,"byte_end":8374800,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374801,"byte_end":8374850,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374851,"byte_end":8374916,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374917,"byte_end":8374953,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374954,"byte_end":8374957,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374958,"byte_end":8374972,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374973,"byte_end":8374976,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374977,"byte_end":8374990,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8374991,"byte_end":8375065,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375066,"byte_end":8375071,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375072,"byte_end":8375094,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375095,"byte_end":8375098,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375099,"byte_end":8375146,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375147,"byte_end":8375152,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375153,"byte_end":8375170,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8375171,"byte_end":8375178,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3723},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3732},{"krate":0,"index":3755},{"krate":0,"index":3786},{"krate":0,"index":3915},{"krate":0,"index":3995},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Cross-platform path manipulation.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375575,"byte_end":8375612,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375613,"byte_end":8375616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375617,"byte_end":8375670,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375671,"byte_end":8375674,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375675,"byte_end":8375763,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"! and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375764,"byte_end":8375846,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"! around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375847,"byte_end":8375930,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"! on strings according to the local platform's path syntax.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375931,"byte_end":8375992,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375993,"byte_end":8375996,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8375997,"byte_end":8376072,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"! returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376073,"byte_end":8376150,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376151,"byte_end":8376229,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376230,"byte_end":8376308,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376309,"byte_end":8376377,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376378,"byte_end":8376457,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376458,"byte_end":8376461,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376462,"byte_end":8376526,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376527,"byte_end":8376530,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ## Simple usage","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376531,"byte_end":8376550,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376551,"byte_end":8376554,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376555,"byte_end":8376634,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! new owned paths.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376635,"byte_end":8376655,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376656,"byte_end":8376659,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376660,"byte_end":8376727,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"! slice and start asking questions:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376728,"byte_end":8376765,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376766,"byte_end":8376769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376770,"byte_end":8376777,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376778,"byte_end":8376808,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"! use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376809,"byte_end":8376833,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376834,"byte_end":8376837,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376838,"byte_end":8376883,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376884,"byte_end":8376887,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! let parent = path.parent();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376888,"byte_end":8376919,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"! assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376920,"byte_end":8376972,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376973,"byte_end":8376976,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let file_stem = path.file_stem();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8376977,"byte_end":8377014,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"! assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377015,"byte_end":8377066,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377067,"byte_end":8377070,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! let extension = path.extension();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377071,"byte_end":8377108,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"! assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377109,"byte_end":8377160,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377161,"byte_end":8377168,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377169,"byte_end":8377172,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377173,"byte_end":8377219,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377220,"byte_end":8377223,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377224,"byte_end":8377231,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377232,"byte_end":8377265,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377266,"byte_end":8377269,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! // This way works...","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377270,"byte_end":8377294,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"! let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377295,"byte_end":8377336,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377337,"byte_end":8377340,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! path.push(\"windows\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377341,"byte_end":8377366,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"! path.push(\"system32\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377367,"byte_end":8377393,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377394,"byte_end":8377397,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! path.set_extension(\"dll\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377398,"byte_end":8377428,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377429,"byte_end":8377432,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! // ... but push is best used if you don't know everything up","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377433,"byte_end":8377497,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"! // front. If you do, this way is better:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377498,"byte_end":8377542,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"! let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377543,"byte_end":8377620,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377621,"byte_end":8377628,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377629,"byte_end":8377632,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! [`Component`]: enum.Component.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377633,"byte_end":8377671,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"! [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377672,"byte_end":8377726,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"! [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377727,"byte_end":8377763,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377764,"byte_end":8377794,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"! [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377795,"byte_end":8377840,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377841,"byte_end":8377912,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377913,"byte_end":8377916,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377917,"byte_end":8377978,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"! [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8377979,"byte_end":8378051,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"! [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8378052,"byte_end":8378118,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4384},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379086,"byte_end":8379095,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":4386}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378593,"byte_end":8378641,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378642,"byte_end":8378645,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378646,"byte_end":8378715,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378716,"byte_end":8378751,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378752,"byte_end":8378755,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378756,"byte_end":8378770,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378771,"byte_end":8378774,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378775,"byte_end":8378782,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378783,"byte_end":8378813,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378814,"byte_end":8378817,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378818,"byte_end":8378855,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378856,"byte_end":8378859,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378860,"byte_end":8378898,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378899,"byte_end":8378942,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378943,"byte_end":8378948,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378949,"byte_end":8378956,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378957,"byte_end":8378960,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8378961,"byte_end":8379013,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379014,"byte_end":8379044,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4395},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380096,"byte_end":8380106,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":4397}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379526,"byte_end":8379580,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379581,"byte_end":8379584,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379585,"byte_end":8379655,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379656,"byte_end":8379691,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379692,"byte_end":8379695,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379696,"byte_end":8379710,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379711,"byte_end":8379714,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379715,"byte_end":8379722,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379723,"byte_end":8379753,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379754,"byte_end":8379757,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379758,"byte_end":8379803,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379804,"byte_end":8379807,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379808,"byte_end":8379848,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379849,"byte_end":8379885,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379886,"byte_end":8379891,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379892,"byte_end":8379899,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379900,"byte_end":8379903,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379904,"byte_end":8379942,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379943,"byte_end":8379997,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8379998,"byte_end":8380028,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380598,"byte_end":8380605,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380195,"byte_end":8380281,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380286,"byte_end":8380289,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380294,"byte_end":8380308,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380313,"byte_end":8380316,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380321,"byte_end":8380328,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380333,"byte_end":8380363,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380368,"byte_end":8380371,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380376,"byte_end":8380444,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380449,"byte_end":8380471,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380476,"byte_end":8380498,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380503,"byte_end":8380506,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380511,"byte_end":8380574,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380579,"byte_end":8380586,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4425},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381915,"byte_end":8381919,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4427}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381542,"byte_end":8381617,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381618,"byte_end":8381621,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381622,"byte_end":8381686,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381687,"byte_end":8381722,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381723,"byte_end":8381726,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381727,"byte_end":8381765,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381766,"byte_end":8381808,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381809,"byte_end":8381855,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381856,"byte_end":8381886,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382364,"byte_end":8382371,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381991,"byte_end":8382077,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382082,"byte_end":8382085,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382090,"byte_end":8382104,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382109,"byte_end":8382112,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382117,"byte_end":8382124,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382129,"byte_end":8382159,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382164,"byte_end":8382167,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382172,"byte_end":8382228,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382233,"byte_end":8382249,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382254,"byte_end":8382270,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382275,"byte_end":8382278,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382283,"byte_end":8382340,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382345,"byte_end":8382352,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385058,"byte_end":8385062,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":4432}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383779,"byte_end":8383801,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383802,"byte_end":8383805,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383806,"byte_end":8383865,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383866,"byte_end":8383869,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383870,"byte_end":8383948,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383949,"byte_end":8384030,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384031,"byte_end":8384113,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384114,"byte_end":8384141,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384142,"byte_end":8384145,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384146,"byte_end":8384221,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384222,"byte_end":8384287,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384288,"byte_end":8384308,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384309,"byte_end":8384312,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384313,"byte_end":8384349,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384350,"byte_end":8384426,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384427,"byte_end":8384430,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384431,"byte_end":8384490,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384491,"byte_end":8384534,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384535,"byte_end":8384538,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384539,"byte_end":8384553,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384554,"byte_end":8384557,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384558,"byte_end":8384565,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384566,"byte_end":8384590,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384591,"byte_end":8384615,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384616,"byte_end":8384619,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384620,"byte_end":8384666,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384667,"byte_end":8384709,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384710,"byte_end":8384713,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384714,"byte_end":8384745,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384746,"byte_end":8384795,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384796,"byte_end":8384799,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384800,"byte_end":8384837,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384838,"byte_end":8384889,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384890,"byte_end":8384893,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384894,"byte_end":8384931,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384932,"byte_end":8384983,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384984,"byte_end":8384991,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385694,"byte_end":8385697,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn <S> (s: &S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385112,"byte_end":8385164,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385169,"byte_end":8385172,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385177,"byte_end":8385212,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385217,"byte_end":8385220,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385225,"byte_end":8385239,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385244,"byte_end":8385247,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385252,"byte_end":8385259,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385264,"byte_end":8385294,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385299,"byte_end":8385302,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385307,"byte_end":8385332,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385337,"byte_end":8385344,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385349,"byte_end":8385352,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385357,"byte_end":8385422,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385427,"byte_end":8385430,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385435,"byte_end":8385442,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385447,"byte_end":8385477,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385482,"byte_end":8385485,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385490,"byte_end":8385531,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385536,"byte_end":8385577,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385582,"byte_end":8385626,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385631,"byte_end":8385670,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385675,"byte_end":8385682,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386220,"byte_end":8386229,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"fn (&self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385841,"byte_end":8385884,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385889,"byte_end":8385892,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385897,"byte_end":8385963,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385968,"byte_end":8385971,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385976,"byte_end":8385990,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385995,"byte_end":8385998,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386003,"byte_end":8386010,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386015,"byte_end":8386039,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386044,"byte_end":8386047,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386052,"byte_end":8386082,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386087,"byte_end":8386090,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386095,"byte_end":8386145,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386150,"byte_end":8386196,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386201,"byte_end":8386208,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386819,"byte_end":8386825,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386291,"byte_end":8386351,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386356,"byte_end":8386359,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386364,"byte_end":8386428,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386433,"byte_end":8386500,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386505,"byte_end":8386537,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386542,"byte_end":8386545,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386550,"byte_end":8386612,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386617,"byte_end":8386620,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386625,"byte_end":8386639,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386644,"byte_end":8386647,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386652,"byte_end":8386659,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386664,"byte_end":8386694,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386699,"byte_end":8386702,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386707,"byte_end":8386743,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386748,"byte_end":8386795,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386800,"byte_end":8386807,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387618,"byte_end":8387633,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"fn (&self) -> Cow<'_, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386890,"byte_end":8386930,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386935,"byte_end":8386938,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386943,"byte_end":8386990,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386995,"byte_end":8387040,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387045,"byte_end":8387048,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387053,"byte_end":8387121,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387126,"byte_end":8387210,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387215,"byte_end":8387218,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387223,"byte_end":8387237,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387242,"byte_end":8387245,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387250,"byte_end":8387311,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387316,"byte_end":8387319,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387324,"byte_end":8387331,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387336,"byte_end":8387366,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387371,"byte_end":8387374,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387379,"byte_end":8387415,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387420,"byte_end":8387470,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387475,"byte_end":8387482,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387487,"byte_end":8387490,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387495,"byte_end":8387569,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387574,"byte_end":8387606,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388042,"byte_end":8388053,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387707,"byte_end":8387753,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387758,"byte_end":8387761,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387766,"byte_end":8387802,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387807,"byte_end":8387810,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387815,"byte_end":8387829,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387834,"byte_end":8387837,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387842,"byte_end":8387849,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387854,"byte_end":8387895,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387900,"byte_end":8387903,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387908,"byte_end":8387962,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387967,"byte_end":8388018,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388023,"byte_end":8388030,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388753,"byte_end":8388764,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388133,"byte_end":8388207,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388212,"byte_end":8388238,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388243,"byte_end":8388246,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388251,"byte_end":8388315,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388320,"byte_end":8388372,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388377,"byte_end":8388380,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388385,"byte_end":8388460,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388465,"byte_end":8388538,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388543,"byte_end":8388546,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388551,"byte_end":8388585,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388590,"byte_end":8388593,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388598,"byte_end":8388612,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388617,"byte_end":8388620,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388625,"byte_end":8388632,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388637,"byte_end":8388667,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388672,"byte_end":8388675,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388680,"byte_end":8388729,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388734,"byte_end":8388741,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389180,"byte_end":8389191,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388826,"byte_end":8388890,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388895,"byte_end":8388898,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388903,"byte_end":8388960,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388965,"byte_end":8388968,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388973,"byte_end":8389013,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389018,"byte_end":8389021,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389026,"byte_end":8389040,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389045,"byte_end":8389048,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389053,"byte_end":8389060,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389065,"byte_end":8389095,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389100,"byte_end":8389103,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389108,"byte_end":8389156,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389161,"byte_end":8389168,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389812,"byte_end":8389820,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389253,"byte_end":8389297,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389302,"byte_end":8389305,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389310,"byte_end":8389365,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389370,"byte_end":8389373,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389378,"byte_end":8389420,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389425,"byte_end":8389493,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389498,"byte_end":8389583,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389588,"byte_end":8389644,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389649,"byte_end":8389652,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389657,"byte_end":8389671,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389676,"byte_end":8389679,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389684,"byte_end":8389691,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389696,"byte_end":8389726,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389731,"byte_end":8389734,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389739,"byte_end":8389788,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389793,"byte_end":8389800,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390525,"byte_end":8390531,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389879,"byte_end":8389947,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389952,"byte_end":8389955,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8389960,"byte_end":8390024,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390029,"byte_end":8390032,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390037,"byte_end":8390117,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390122,"byte_end":8390125,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390130,"byte_end":8390144,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390149,"byte_end":8390152,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390157,"byte_end":8390164,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390169,"byte_end":8390199,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390204,"byte_end":8390207,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390212,"byte_end":8390249,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390254,"byte_end":8390294,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390299,"byte_end":8390341,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390346,"byte_end":8390349,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390354,"byte_end":8390402,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390407,"byte_end":8390452,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390457,"byte_end":8390501,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390506,"byte_end":8390513,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391654,"byte_end":8391663,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"fn (&self) -> Ancestors<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390615,"byte_end":8390670,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390675,"byte_end":8390678,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390683,"byte_end":8390776,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390781,"byte_end":8390871,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390876,"byte_end":8390967,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8390972,"byte_end":8391067,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391072,"byte_end":8391091,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391096,"byte_end":8391099,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391104,"byte_end":8391171,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391176,"byte_end":8391222,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391227,"byte_end":8391230,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391235,"byte_end":8391249,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391254,"byte_end":8391257,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391262,"byte_end":8391269,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391274,"byte_end":8391304,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391309,"byte_end":8391312,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391317,"byte_end":8391375,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391380,"byte_end":8391449,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391454,"byte_end":8391519,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391524,"byte_end":8391586,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391591,"byte_end":8391630,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391635,"byte_end":8391642,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392708,"byte_end":8392717,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391741,"byte_end":8391804,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391809,"byte_end":8391812,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391817,"byte_end":8391911,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391916,"byte_end":8391942,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391947,"byte_end":8391950,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391955,"byte_end":8392007,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392012,"byte_end":8392015,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392020,"byte_end":8392100,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392105,"byte_end":8392108,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392113,"byte_end":8392127,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392132,"byte_end":8392135,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392140,"byte_end":8392147,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392152,"byte_end":8392176,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392181,"byte_end":8392184,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392189,"byte_end":8392219,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392224,"byte_end":8392227,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392232,"byte_end":8392308,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392313,"byte_end":8392395,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392400,"byte_end":8392480,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392485,"byte_end":8392567,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392572,"byte_end":8392630,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392635,"byte_end":8392684,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392689,"byte_end":8392696,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393971,"byte_end":8393983,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"fn <P> (&self, base: P) -> Result<&Path, StripPrefixError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392787,"byte_end":8392850,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392855,"byte_end":8392858,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392863,"byte_end":8392875,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392880,"byte_end":8392883,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392888,"byte_end":8392950,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392955,"byte_end":8392993,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8392998,"byte_end":8393001,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393006,"byte_end":8393046,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393051,"byte_end":8393129,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393134,"byte_end":8393137,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393142,"byte_end":8393156,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393161,"byte_end":8393164,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393169,"byte_end":8393176,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393181,"byte_end":8393222,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393227,"byte_end":8393230,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393235,"byte_end":8393282,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393287,"byte_end":8393290,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393295,"byte_end":8393370,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393375,"byte_end":8393449,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393454,"byte_end":8393529,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393534,"byte_end":8393609,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393614,"byte_end":8393690,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393695,"byte_end":8393752,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393757,"byte_end":8393815,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393820,"byte_end":8393823,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393828,"byte_end":8393869,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393874,"byte_end":8393947,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8393952,"byte_end":8393959,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394668,"byte_end":8394679,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"fn <P> (&self, base: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394148,"byte_end":8394200,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394205,"byte_end":8394208,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394213,"byte_end":8394263,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394268,"byte_end":8394271,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394276,"byte_end":8394290,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394295,"byte_end":8394298,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394303,"byte_end":8394310,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394315,"byte_end":8394345,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394350,"byte_end":8394353,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394358,"byte_end":8394398,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394403,"byte_end":8394406,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394411,"byte_end":8394449,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394454,"byte_end":8394493,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394498,"byte_end":8394543,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394548,"byte_end":8394594,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394599,"byte_end":8394602,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394607,"byte_end":8394644,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394649,"byte_end":8394656,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395105,"byte_end":8395114,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"fn <P> (&self, child: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394779,"byte_end":8394832,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394837,"byte_end":8394840,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394845,"byte_end":8394895,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394900,"byte_end":8394903,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394908,"byte_end":8394922,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394927,"byte_end":8394930,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394935,"byte_end":8394942,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394947,"byte_end":8394977,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394982,"byte_end":8394985,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8394990,"byte_end":8395030,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395035,"byte_end":8395038,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395043,"byte_end":8395081,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395086,"byte_end":8395093,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395956,"byte_end":8395965,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395214,"byte_end":8395277,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395282,"byte_end":8395285,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395290,"byte_end":8395342,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395347,"byte_end":8395350,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395355,"byte_end":8395371,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395376,"byte_end":8395379,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395384,"byte_end":8395424,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395429,"byte_end":8395483,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395488,"byte_end":8395576,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395581,"byte_end":8395647,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395652,"byte_end":8395655,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395660,"byte_end":8395740,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395745,"byte_end":8395748,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395753,"byte_end":8395767,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395772,"byte_end":8395775,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395780,"byte_end":8395787,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395792,"byte_end":8395822,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395827,"byte_end":8395830,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395835,"byte_end":8395870,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395875,"byte_end":8395878,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395883,"byte_end":8395932,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8395937,"byte_end":8395944,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396744,"byte_end":8396753,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396035,"byte_end":8396092,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396097,"byte_end":8396100,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396105,"byte_end":8396126,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396131,"byte_end":8396134,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396139,"byte_end":8396179,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396184,"byte_end":8396227,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396232,"byte_end":8396309,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396314,"byte_end":8396379,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396384,"byte_end":8396387,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396392,"byte_end":8396444,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396449,"byte_end":8396529,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396534,"byte_end":8396537,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396542,"byte_end":8396556,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396561,"byte_end":8396564,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396569,"byte_end":8396576,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396581,"byte_end":8396611,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396616,"byte_end":8396619,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396624,"byte_end":8396659,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396664,"byte_end":8396667,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396672,"byte_end":8396720,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396725,"byte_end":8396732,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397294,"byte_end":8397298,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"fn <P> (&self, path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396823,"byte_end":8396887,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396892,"byte_end":8396895,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396900,"byte_end":8396977,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396982,"byte_end":8396985,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8396990,"byte_end":8397026,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397031,"byte_end":8397085,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397090,"byte_end":8397093,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397098,"byte_end":8397112,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397117,"byte_end":8397120,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397125,"byte_end":8397132,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397137,"byte_end":8397178,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397183,"byte_end":8397186,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397191,"byte_end":8397270,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397275,"byte_end":8397282,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398037,"byte_end":8398051,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"fn <S> (&self, file_name: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397401,"byte_end":8397475,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397480,"byte_end":8397483,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397488,"byte_end":8397540,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397545,"byte_end":8397548,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397553,"byte_end":8397589,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397594,"byte_end":8397666,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397671,"byte_end":8397674,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397679,"byte_end":8397693,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397698,"byte_end":8397701,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397706,"byte_end":8397713,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397718,"byte_end":8397759,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397764,"byte_end":8397767,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397772,"byte_end":8397813,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397818,"byte_end":8397896,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397901,"byte_end":8397904,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397909,"byte_end":8397942,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8397947,"byte_end":8398013,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398018,"byte_end":8398025,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398670,"byte_end":8398684,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"fn <S> (&self, extension: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398166,"byte_end":8398240,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398245,"byte_end":8398248,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398253,"byte_end":8398305,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398310,"byte_end":8398313,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398318,"byte_end":8398354,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398359,"byte_end":8398431,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398436,"byte_end":8398439,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398444,"byte_end":8398458,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398463,"byte_end":8398466,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398471,"byte_end":8398478,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398483,"byte_end":8398524,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398529,"byte_end":8398532,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398537,"byte_end":8398572,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398577,"byte_end":8398646,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398651,"byte_end":8398658,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400271,"byte_end":8400281,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"fn (&self) -> Components<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398799,"byte_end":8398860,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398865,"byte_end":8398868,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398873,"byte_end":8398941,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398946,"byte_end":8398949,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8398954,"byte_end":8399022,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399027,"byte_end":8399059,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399064,"byte_end":8399067,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399072,"byte_end":8399143,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399148,"byte_end":8399218,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399223,"byte_end":8399294,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399299,"byte_end":8399340,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399345,"byte_end":8399348,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399353,"byte_end":8399430,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399435,"byte_end":8399438,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399443,"byte_end":8399513,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399518,"byte_end":8399590,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399595,"byte_end":8399644,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399649,"byte_end":8399652,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399657,"byte_end":8399695,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399700,"byte_end":8399750,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399755,"byte_end":8399758,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399763,"byte_end":8399777,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399782,"byte_end":8399785,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399790,"byte_end":8399797,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399802,"byte_end":8399826,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399831,"byte_end":8399834,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399839,"byte_end":8399882,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399887,"byte_end":8399890,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399895,"byte_end":8399959,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399964,"byte_end":8399967,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8399972,"byte_end":8400032,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400037,"byte_end":8400115,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400120,"byte_end":8400202,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400207,"byte_end":8400247,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400252,"byte_end":8400259,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401187,"byte_end":8401191,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn (&self) -> Iter<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400395,"byte_end":8400466,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400471,"byte_end":8400482,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400487,"byte_end":8400490,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400495,"byte_end":8400570,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400575,"byte_end":8400615,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400620,"byte_end":8400623,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400628,"byte_end":8400666,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400671,"byte_end":8400737,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400742,"byte_end":8400745,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400750,"byte_end":8400764,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400769,"byte_end":8400772,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400777,"byte_end":8400784,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400789,"byte_end":8400813,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400818,"byte_end":8400821,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400826,"byte_end":8400864,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400869,"byte_end":8400872,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400877,"byte_end":8400927,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8400932,"byte_end":8401011,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401016,"byte_end":8401067,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401072,"byte_end":8401127,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401132,"byte_end":8401163,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401168,"byte_end":8401175,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401694,"byte_end":8401701,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"fn (&self) -> Display<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401287,"byte_end":8401362,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401367,"byte_end":8401405,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401410,"byte_end":8401413,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401418,"byte_end":8401487,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401492,"byte_end":8401495,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401500,"byte_end":8401514,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401519,"byte_end":8401522,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401527,"byte_end":8401534,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401539,"byte_end":8401569,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401574,"byte_end":8401577,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401582,"byte_end":8401622,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401627,"byte_end":8401630,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401635,"byte_end":8401670,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401675,"byte_end":8401682,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402428,"byte_end":8402436,"line_start":587,"line_end":587,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401766,"byte_end":8401812,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401817,"byte_end":8401820,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401825,"byte_end":8401902,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401907,"byte_end":8401928,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401933,"byte_end":8401936,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401941,"byte_end":8401982,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401987,"byte_end":8401990,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8401995,"byte_end":8402039,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402044,"byte_end":8402047,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402052,"byte_end":8402066,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402071,"byte_end":8402074,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402079,"byte_end":8402092,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402097,"byte_end":8402171,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402176,"byte_end":8402181,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402186,"byte_end":8402216,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402221,"byte_end":8402224,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402229,"byte_end":8402271,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402276,"byte_end":8402318,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402323,"byte_end":8402366,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402371,"byte_end":8402376,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402381,"byte_end":8402398,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402403,"byte_end":8402410,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403129,"byte_end":8403145,"line_start":610,"line_end":610,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402518,"byte_end":8402597,"line_start":591,"line_end":591,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402602,"byte_end":8402605,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402610,"byte_end":8402659,"line_start":593,"line_end":593,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402664,"byte_end":8402667,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402672,"byte_end":8402732,"line_start":595,"line_end":595,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402737,"byte_end":8402740,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402745,"byte_end":8402759,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402764,"byte_end":8402767,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402772,"byte_end":8402785,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402790,"byte_end":8402864,"line_start":600,"line_end":600,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402869,"byte_end":8402874,"line_start":601,"line_end":601,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402879,"byte_end":8402909,"line_start":602,"line_end":602,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402914,"byte_end":8402917,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402922,"byte_end":8402964,"line_start":604,"line_end":604,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8402969,"byte_end":8403019,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403024,"byte_end":8403067,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403072,"byte_end":8403077,"line_start":607,"line_end":607,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403082,"byte_end":8403099,"line_start":608,"line_end":608,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403104,"byte_end":8403111,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403933,"byte_end":8403945,"line_start":635,"line_end":635,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403235,"byte_end":8403276,"line_start":614,"line_end":614,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403281,"byte_end":8403284,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403289,"byte_end":8403378,"line_start":616,"line_end":616,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403383,"byte_end":8403411,"line_start":617,"line_end":617,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403416,"byte_end":8403419,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403424,"byte_end":8403469,"line_start":619,"line_end":619,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403474,"byte_end":8403477,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403482,"byte_end":8403534,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403539,"byte_end":8403542,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403547,"byte_end":8403561,"line_start":623,"line_end":623,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403566,"byte_end":8403569,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403574,"byte_end":8403587,"line_start":625,"line_end":625,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403592,"byte_end":8403666,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403671,"byte_end":8403676,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403681,"byte_end":8403722,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403727,"byte_end":8403730,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403735,"byte_end":8403788,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403793,"byte_end":8403871,"line_start":631,"line_end":631,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403876,"byte_end":8403881,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403886,"byte_end":8403903,"line_start":633,"line_end":633,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8403908,"byte_end":8403915,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404561,"byte_end":8404570,"line_start":657,"line_end":657,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404026,"byte_end":8404096,"line_start":639,"line_end":639,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404101,"byte_end":8404104,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404109,"byte_end":8404151,"line_start":641,"line_end":641,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404156,"byte_end":8404159,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404164,"byte_end":8404210,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404215,"byte_end":8404218,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404223,"byte_end":8404237,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404242,"byte_end":8404245,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404250,"byte_end":8404263,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404268,"byte_end":8404342,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404347,"byte_end":8404352,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404357,"byte_end":8404387,"line_start":650,"line_end":650,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404392,"byte_end":8404395,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404400,"byte_end":8404450,"line_start":652,"line_end":652,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404455,"byte_end":8404499,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404504,"byte_end":8404509,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404514,"byte_end":8404531,"line_start":655,"line_end":655,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404536,"byte_end":8404543,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405641,"byte_end":8405649,"line_start":691,"line_end":691,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"fn (&self) -> io::Result<fs::ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404648,"byte_end":8404705,"line_start":661,"line_end":661,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404710,"byte_end":8404713,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404718,"byte_end":8404794,"line_start":663,"line_end":663,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404799,"byte_end":8404872,"line_start":664,"line_end":664,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404877,"byte_end":8404880,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404885,"byte_end":8404926,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404931,"byte_end":8404934,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404939,"byte_end":8404981,"line_start":668,"line_end":668,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8404986,"byte_end":8405030,"line_start":669,"line_end":669,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405035,"byte_end":8405079,"line_start":670,"line_end":670,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405084,"byte_end":8405087,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405092,"byte_end":8405106,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405111,"byte_end":8405114,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405119,"byte_end":8405132,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405137,"byte_end":8405211,"line_start":675,"line_end":675,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405216,"byte_end":8405221,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405226,"byte_end":8405248,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405253,"byte_end":8405283,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405288,"byte_end":8405318,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405323,"byte_end":8405326,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405331,"byte_end":8405367,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405372,"byte_end":8405417,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405422,"byte_end":8405425,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405430,"byte_end":8405474,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405479,"byte_end":8405504,"line_start":685,"line_end":685,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405509,"byte_end":8405569,"line_start":686,"line_end":686,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405574,"byte_end":8405579,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405584,"byte_end":8405589,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405594,"byte_end":8405611,"line_start":689,"line_end":689,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405616,"byte_end":8405623,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406639,"byte_end":8406645,"line_start":720,"line_end":720,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405730,"byte_end":8405790,"line_start":695,"line_end":695,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405795,"byte_end":8405798,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405803,"byte_end":8405880,"line_start":697,"line_end":697,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405885,"byte_end":8405965,"line_start":698,"line_end":698,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405970,"byte_end":8405973,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8405978,"byte_end":8406056,"line_start":700,"line_end":700,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406061,"byte_end":8406108,"line_start":701,"line_end":701,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406113,"byte_end":8406116,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406121,"byte_end":8406135,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406140,"byte_end":8406143,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406148,"byte_end":8406161,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406166,"byte_end":8406240,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406245,"byte_end":8406250,"line_start":707,"line_end":707,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406255,"byte_end":8406285,"line_start":708,"line_end":708,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406290,"byte_end":8406360,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406365,"byte_end":8406370,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406375,"byte_end":8406392,"line_start":711,"line_end":711,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406397,"byte_end":8406404,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406409,"byte_end":8406412,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406417,"byte_end":8406431,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406436,"byte_end":8406439,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406444,"byte_end":8406523,"line_start":716,"line_end":716,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406528,"byte_end":8406566,"line_start":717,"line_end":717,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406571,"byte_end":8406574,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406579,"byte_end":8406621,"line_start":719,"line_end":719,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407864,"byte_end":8407871,"line_start":752,"line_end":752,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406715,"byte_end":8406795,"line_start":724,"line_end":724,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406800,"byte_end":8406803,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406808,"byte_end":8406885,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406890,"byte_end":8406970,"line_start":727,"line_end":727,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406975,"byte_end":8406978,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8406983,"byte_end":8407061,"line_start":729,"line_end":729,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407066,"byte_end":8407113,"line_start":730,"line_end":730,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407118,"byte_end":8407121,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407126,"byte_end":8407140,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407145,"byte_end":8407148,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407153,"byte_end":8407166,"line_start":734,"line_end":734,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407171,"byte_end":8407245,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407250,"byte_end":8407255,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407260,"byte_end":8407290,"line_start":737,"line_end":737,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407295,"byte_end":8407365,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407370,"byte_end":8407432,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407437,"byte_end":8407442,"line_start":740,"line_end":740,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407447,"byte_end":8407464,"line_start":741,"line_end":741,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407469,"byte_end":8407476,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407481,"byte_end":8407484,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407489,"byte_end":8407503,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407508,"byte_end":8407511,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407516,"byte_end":8407595,"line_start":746,"line_end":746,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407600,"byte_end":8407670,"line_start":747,"line_end":747,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407675,"byte_end":8407716,"line_start":748,"line_end":748,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407721,"byte_end":8407724,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407729,"byte_end":8407771,"line_start":750,"line_end":750,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8407776,"byte_end":8407846,"line_start":751,"line_end":751,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409159,"byte_end":8409165,"line_start":788,"line_end":788,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408010,"byte_end":8408087,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408092,"byte_end":8408095,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408100,"byte_end":8408177,"line_start":761,"line_end":761,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408182,"byte_end":8408262,"line_start":762,"line_end":762,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408267,"byte_end":8408270,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408275,"byte_end":8408353,"line_start":764,"line_end":764,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408358,"byte_end":8408405,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408410,"byte_end":8408413,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408418,"byte_end":8408432,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408437,"byte_end":8408440,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408445,"byte_end":8408458,"line_start":769,"line_end":769,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408463,"byte_end":8408537,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408542,"byte_end":8408547,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408552,"byte_end":8408582,"line_start":772,"line_end":772,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408587,"byte_end":8408590,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408595,"byte_end":8408663,"line_start":774,"line_end":774,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408668,"byte_end":8408730,"line_start":775,"line_end":775,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408735,"byte_end":8408740,"line_start":776,"line_end":776,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408745,"byte_end":8408762,"line_start":777,"line_end":777,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408767,"byte_end":8408774,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408779,"byte_end":8408782,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408787,"byte_end":8408801,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408806,"byte_end":8408809,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408814,"byte_end":8408893,"line_start":782,"line_end":782,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408898,"byte_end":8408968,"line_start":783,"line_end":783,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8408973,"byte_end":8409013,"line_start":784,"line_end":784,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409018,"byte_end":8409021,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409026,"byte_end":8409068,"line_start":786,"line_end":786,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409073,"byte_end":8409141,"line_start":787,"line_end":787,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409732,"byte_end":8409745,"line_start":809,"line_end":809,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn (self: Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409303,"byte_end":8409376,"line_start":795,"line_end":795,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409381,"byte_end":8409396,"line_start":796,"line_end":796,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409401,"byte_end":8409404,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409409,"byte_end":8409473,"line_start":798,"line_end":798,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409478,"byte_end":8409514,"line_start":799,"line_end":799,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409519,"byte_end":8409522,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409527,"byte_end":8409541,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409546,"byte_end":8409549,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409554,"byte_end":8409561,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409566,"byte_end":8409596,"line_start":804,"line_end":804,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409601,"byte_end":8409604,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409609,"byte_end":8409663,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409668,"byte_end":8409708,"line_start":807,"line_end":807,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409713,"byte_end":8409720,"line_start":808,"line_end":808,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416748,"byte_end":8416755,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":4710}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416519,"byte_end":8416581,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416582,"byte_end":8416585,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416586,"byte_end":8416665,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416996,"byte_end":8416999,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"fn () -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416811,"byte_end":8416844,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416849,"byte_end":8416852,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416857,"byte_end":8416871,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416876,"byte_end":8416879,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416884,"byte_end":8416891,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416896,"byte_end":8416929,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416934,"byte_end":8416937,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416942,"byte_end":8416972,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416977,"byte_end":8416984,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417360,"byte_end":8417367,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417067,"byte_end":8417099,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417104,"byte_end":8417107,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417112,"byte_end":8417142,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417147,"byte_end":8417150,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417155,"byte_end":8417169,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417174,"byte_end":8417177,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417182,"byte_end":8417189,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417194,"byte_end":8417235,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417240,"byte_end":8417243,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417248,"byte_end":8417283,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417288,"byte_end":8417336,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417341,"byte_end":8417348,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418361,"byte_end":8418365,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417433,"byte_end":8417464,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417469,"byte_end":8417472,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417477,"byte_end":8417533,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417538,"byte_end":8417541,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417546,"byte_end":8417561,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417566,"byte_end":8417569,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417574,"byte_end":8417637,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417642,"byte_end":8417709,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417714,"byte_end":8417775,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417780,"byte_end":8417783,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417788,"byte_end":8417802,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417807,"byte_end":8417810,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417815,"byte_end":8417869,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417874,"byte_end":8417877,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417882,"byte_end":8417889,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417894,"byte_end":8417927,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417932,"byte_end":8417935,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417940,"byte_end":8417981,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8417986,"byte_end":8418011,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418016,"byte_end":8418068,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418073,"byte_end":8418080,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418085,"byte_end":8418088,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418093,"byte_end":8418149,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418154,"byte_end":8418157,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418162,"byte_end":8418169,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418174,"byte_end":8418207,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418212,"byte_end":8418215,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418220,"byte_end":8418261,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418266,"byte_end":8418288,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418293,"byte_end":8418337,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418342,"byte_end":8418349,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419063,"byte_end":8419066,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418454,"byte_end":8418494,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418499,"byte_end":8418502,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418507,"byte_end":8418575,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418580,"byte_end":8418610,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418615,"byte_end":8418618,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418623,"byte_end":8418703,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418708,"byte_end":8418762,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418767,"byte_end":8418770,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418775,"byte_end":8418789,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418794,"byte_end":8418797,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418802,"byte_end":8418809,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418814,"byte_end":8418855,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418860,"byte_end":8418863,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418868,"byte_end":8418915,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418920,"byte_end":8418923,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418928,"byte_end":8418940,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418945,"byte_end":8418983,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8418988,"byte_end":8419000,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419005,"byte_end":8419039,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419044,"byte_end":8419051,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420096,"byte_end":8420109,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"fn <S> (&mut self, file_name: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419124,"byte_end":8419170,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419175,"byte_end":8419178,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419183,"byte_end":8419252,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419257,"byte_end":8419273,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419278,"byte_end":8419281,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419286,"byte_end":8419352,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419357,"byte_end":8419426,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419431,"byte_end":8419475,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419480,"byte_end":8419483,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419488,"byte_end":8419548,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419553,"byte_end":8419633,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419638,"byte_end":8419681,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419686,"byte_end":8419689,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419694,"byte_end":8419708,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419713,"byte_end":8419716,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419721,"byte_end":8419728,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419733,"byte_end":8419766,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419771,"byte_end":8419774,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419779,"byte_end":8419816,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419821,"byte_end":8419858,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419863,"byte_end":8419892,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419897,"byte_end":8419939,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419944,"byte_end":8419983,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8419988,"byte_end":8420021,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420026,"byte_end":8420072,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420077,"byte_end":8420084,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421122,"byte_end":8421135,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"fn <S> (&mut self, extension: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420209,"byte_end":8420255,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420260,"byte_end":8420263,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420268,"byte_end":8420339,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420344,"byte_end":8420399,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420404,"byte_end":8420407,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420412,"byte_end":8420484,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420489,"byte_end":8420508,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420513,"byte_end":8420516,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420521,"byte_end":8420581,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420586,"byte_end":8420646,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420651,"byte_end":8420731,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420736,"byte_end":8420739,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420744,"byte_end":8420758,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420763,"byte_end":8420766,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420771,"byte_end":8420778,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420783,"byte_end":8420824,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420829,"byte_end":8420832,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420837,"byte_end":8420880,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420885,"byte_end":8420888,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420893,"byte_end":8420922,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420927,"byte_end":8420985,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420990,"byte_end":8420993,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8420998,"byte_end":8421031,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421036,"byte_end":8421098,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421103,"byte_end":8421110,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421602,"byte_end":8421616,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"fn (self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421243,"byte_end":8421315,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421320,"byte_end":8421323,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421328,"byte_end":8421400,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421405,"byte_end":8421408,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421413,"byte_end":8421427,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421432,"byte_end":8421435,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421440,"byte_end":8421447,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421452,"byte_end":8421485,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421490,"byte_end":8421493,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421498,"byte_end":8421537,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421542,"byte_end":8421578,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421583,"byte_end":8421590,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421867,"byte_end":8421882,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"fn (self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421684,"byte_end":8421743,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421748,"byte_end":8421751,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421756,"byte_end":8421820,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8421825,"byte_end":8421855,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":4008},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4015},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4106},{"krate":0,"index":4168},{"krate":0,"index":4264}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426243,"byte_end":8426295,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426296,"byte_end":8426299,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426300,"byte_end":8426387,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426388,"byte_end":8426457,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426458,"byte_end":8426461,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::net`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426462,"byte_end":8426514,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426515,"byte_end":8426518,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426519,"byte_end":8426537,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426538,"byte_end":8426541,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426542,"byte_end":8426630,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426631,"byte_end":8426700,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426701,"byte_end":8426782,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"!   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426783,"byte_end":8426842,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426843,"byte_end":8426932,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"!   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8426933,"byte_end":8427007,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427008,"byte_end":8427100,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"!   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427101,"byte_end":8427183,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"! * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427184,"byte_end":8427266,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427267,"byte_end":8427270,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427271,"byte_end":8427303,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"! [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427304,"byte_end":8427342,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"! [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427343,"byte_end":8427381,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"! [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427382,"byte_end":8427422,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"! [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427423,"byte_end":8427469,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"! [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427470,"byte_end":8427516,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"! [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427517,"byte_end":8427561,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"! [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427562,"byte_end":8427602,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"! [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427603,"byte_end":8427650,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"! [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427651,"byte_end":8427691,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427692,"byte_end":8427695,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427696,"byte_end":8427730,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427731,"byte_end":8427734,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427735,"byte_end":8427825,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"! platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427826,"byte_end":8427891,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427892,"byte_end":8427895,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427896,"byte_end":8427935,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"! [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427936,"byte_end":8427998,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8427999,"byte_end":8428002,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428003,"byte_end":8428017,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428018,"byte_end":8428021,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! A simple UDP echo server:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428022,"byte_end":8428051,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428052,"byte_end":8428055,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428056,"byte_end":8428069,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428070,"byte_end":8428144,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428145,"byte_end":8428150,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428151,"byte_end":8428185,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428186,"byte_end":8428189,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428190,"byte_end":8428248,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"! let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428249,"byte_end":8428283,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428284,"byte_end":8428287,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! loop {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428288,"byte_end":8428298,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"!     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428299,"byte_end":8428357,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"!     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428358,"byte_end":8428406,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"! }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428407,"byte_end":8428412,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428413,"byte_end":8428418,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! # }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428419,"byte_end":8428429,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"! ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8428430,"byte_end":8428437,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":4044},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429997,"byte_end":8430010,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4046}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429419,"byte_end":8429479,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429480,"byte_end":8429483,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429484,"byte_end":8429550,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429551,"byte_end":8429554,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429555,"byte_end":8429646,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429647,"byte_end":8429687,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429688,"byte_end":8429691,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429692,"byte_end":8429706,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429707,"byte_end":8429710,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429711,"byte_end":8429718,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429719,"byte_end":8429793,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429794,"byte_end":8429799,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429800,"byte_end":8429838,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429839,"byte_end":8429842,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429843,"byte_end":8429916,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429917,"byte_end":8429954,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429955,"byte_end":8429960,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429961,"byte_end":8429978,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8429979,"byte_end":8429986,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4045},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430105,"byte_end":8430109,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430017,"byte_end":8430095,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430451,"byte_end":8430466,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"fn (&self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430145,"byte_end":8430211,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430216,"byte_end":8430219,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430224,"byte_end":8430315,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430320,"byte_end":8430345,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430350,"byte_end":8430353,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430358,"byte_end":8430443,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4049},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430683,"byte_end":8430692,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430725,"byte_end":8430730,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4055},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430751,"byte_end":8430755,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4047},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430654,"byte_end":8430673,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"ToSocketAddrsFuture::{Resolving, Ready, Done}","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430605,"byte_end":8430644,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451434,"byte_end":8451445,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4753}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450178,"byte_end":8450229,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450230,"byte_end":8450233,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450234,"byte_end":8450331,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450332,"byte_end":8450420,"line_start":16,"line_end":16,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450421,"byte_end":8450450,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450451,"byte_end":8450454,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450455,"byte_end":8450511,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450512,"byte_end":8450515,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450516,"byte_end":8450585,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450586,"byte_end":8450589,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450590,"byte_end":8450653,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450654,"byte_end":8450657,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450658,"byte_end":8450684,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450685,"byte_end":8450719,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450720,"byte_end":8450774,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450775,"byte_end":8450863,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450864,"byte_end":8450867,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450868,"byte_end":8450882,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450883,"byte_end":8450886,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450887,"byte_end":8450900,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450901,"byte_end":8450975,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450976,"byte_end":8450981,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8450982,"byte_end":8451004,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451005,"byte_end":8451041,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451042,"byte_end":8451072,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451073,"byte_end":8451076,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451077,"byte_end":8451139,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451140,"byte_end":8451183,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451184,"byte_end":8451187,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451188,"byte_end":8451240,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451241,"byte_end":8451270,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451271,"byte_end":8451326,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451327,"byte_end":8451367,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451368,"byte_end":8451373,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451374,"byte_end":8451379,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451380,"byte_end":8451397,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451398,"byte_end":8451405,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452269,"byte_end":8452273,"line_start":77,"line_end":77,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addrs: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451519,"byte_end":8451596,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451601,"byte_end":8451604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451609,"byte_end":8451670,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451675,"byte_end":8451678,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451683,"byte_end":8451776,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451781,"byte_end":8451849,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451854,"byte_end":8451857,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451862,"byte_end":8451876,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451881,"byte_end":8451928,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451933,"byte_end":8451936,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451941,"byte_end":8451954,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451959,"byte_end":8452033,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452038,"byte_end":8452043,"line_start":68,"line_end":68,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452048,"byte_end":8452084,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452089,"byte_end":8452092,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452097,"byte_end":8452156,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452161,"byte_end":8452166,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452171,"byte_end":8452188,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452193,"byte_end":8452200,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452205,"byte_end":8452208,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452213,"byte_end":8452251,"line_start":76,"line_end":76,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453498,"byte_end":8453504,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8452965,"byte_end":8453020,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453025,"byte_end":8453028,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453033,"byte_end":8453125,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453130,"byte_end":8453133,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453138,"byte_end":8453153,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453158,"byte_end":8453161,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453166,"byte_end":8453179,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453184,"byte_end":8453258,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453263,"byte_end":8453268,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453273,"byte_end":8453309,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453314,"byte_end":8453317,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453322,"byte_end":8453381,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453386,"byte_end":8453436,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453441,"byte_end":8453446,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453451,"byte_end":8453468,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453473,"byte_end":8453480,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454836,"byte_end":8454844,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453901,"byte_end":8453946,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453951,"byte_end":8453954,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8453959,"byte_end":8454050,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454055,"byte_end":8454147,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454152,"byte_end":8454155,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454160,"byte_end":8454190,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454195,"byte_end":8454275,"line_start":134,"line_end":134,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454280,"byte_end":8454283,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454288,"byte_end":8454303,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454308,"byte_end":8454311,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454316,"byte_end":8454329,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454334,"byte_end":8454408,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454413,"byte_end":8454418,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454423,"byte_end":8454459,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454464,"byte_end":8454494,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454499,"byte_end":8454502,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454507,"byte_end":8454566,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454571,"byte_end":8454614,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454619,"byte_end":8454622,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454627,"byte_end":8454679,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454684,"byte_end":8454717,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454722,"byte_end":8454770,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454775,"byte_end":8454780,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454785,"byte_end":8454790,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454795,"byte_end":8454812,"line_start":152,"line_end":152,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454817,"byte_end":8454824,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455449,"byte_end":8455459,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454904,"byte_end":8454965,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454970,"byte_end":8454973,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8454978,"byte_end":8455073,"line_start":160,"line_end":160,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455078,"byte_end":8455092,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455097,"byte_end":8455100,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455105,"byte_end":8455119,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455124,"byte_end":8455127,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455132,"byte_end":8455145,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455150,"byte_end":8455224,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455229,"byte_end":8455234,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455239,"byte_end":8455275,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455280,"byte_end":8455283,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455288,"byte_end":8455350,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455355,"byte_end":8455393,"line_start":171,"line_end":171,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455398,"byte_end":8455403,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455408,"byte_end":8455425,"line_start":173,"line_end":173,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455430,"byte_end":8455437,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456116,"byte_end":8456124,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455548,"byte_end":8455589,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455590,"byte_end":8455593,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455594,"byte_end":8455692,"line_start":182,"line_end":182,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455693,"byte_end":8455751,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455752,"byte_end":8455755,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455756,"byte_end":8455816,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455817,"byte_end":8455820,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455821,"byte_end":8455901,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455902,"byte_end":8455959,"line_start":188,"line_end":188,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8455960,"byte_end":8456004,"line_start":189,"line_end":189,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456005,"byte_end":8456087,"line_start":190,"line_end":190,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":4774},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460134,"byte_end":8460143,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4775}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458576,"byte_end":8458629,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458630,"byte_end":8458633,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458634,"byte_end":8458731,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458732,"byte_end":8458825,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458826,"byte_end":8458909,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458910,"byte_end":8458913,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8458914,"byte_end":8459010,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459011,"byte_end":8459094,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459095,"byte_end":8459098,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459099,"byte_end":8459160,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459161,"byte_end":8459164,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459165,"byte_end":8459218,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459219,"byte_end":8459273,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459274,"byte_end":8459313,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459314,"byte_end":8459392,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459393,"byte_end":8459473,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459474,"byte_end":8459544,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459545,"byte_end":8459600,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459601,"byte_end":8459685,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459686,"byte_end":8459689,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459690,"byte_end":8459705,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459706,"byte_end":8459709,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459710,"byte_end":8459723,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459724,"byte_end":8459798,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459799,"byte_end":8459804,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459805,"byte_end":8459839,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459840,"byte_end":8459870,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459871,"byte_end":8459874,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459875,"byte_end":8459940,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459941,"byte_end":8459985,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459986,"byte_end":8459989,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8459990,"byte_end":8460024,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460025,"byte_end":8460066,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460067,"byte_end":8460072,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460073,"byte_end":8460090,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460091,"byte_end":8460098,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460910,"byte_end":8460917,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addrs: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460229,"byte_end":8460293,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460298,"byte_end":8460301,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460306,"byte_end":8460390,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460395,"byte_end":8460480,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460485,"byte_end":8460541,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460546,"byte_end":8460549,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460554,"byte_end":8460596,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460601,"byte_end":8460604,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460609,"byte_end":8460623,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460628,"byte_end":8460631,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460636,"byte_end":8460649,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460654,"byte_end":8460728,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460733,"byte_end":8460738,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460743,"byte_end":8460777,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460782,"byte_end":8460785,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460790,"byte_end":8460848,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460853,"byte_end":8460858,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460863,"byte_end":8460880,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460885,"byte_end":8460892,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462663,"byte_end":8462673,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462247,"byte_end":8462310,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462315,"byte_end":8462318,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462323,"byte_end":8462338,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462343,"byte_end":8462346,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462351,"byte_end":8462364,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462369,"byte_end":8462443,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462448,"byte_end":8462453,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462458,"byte_end":8462492,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462497,"byte_end":8462500,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462505,"byte_end":8462566,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462571,"byte_end":8462607,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462612,"byte_end":8462617,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462622,"byte_end":8462639,"line_start":123,"line_end":123,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462644,"byte_end":8462651,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463180,"byte_end":8463189,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462764,"byte_end":8462828,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462833,"byte_end":8462836,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462841,"byte_end":8462856,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462861,"byte_end":8462864,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462869,"byte_end":8462882,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462887,"byte_end":8462961,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462966,"byte_end":8462971,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8462976,"byte_end":8463010,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463015,"byte_end":8463018,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463023,"byte_end":8463084,"line_start":138,"line_end":138,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463089,"byte_end":8463124,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463129,"byte_end":8463134,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463139,"byte_end":8463156,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463161,"byte_end":8463168,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463844,"byte_end":8463847,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463279,"byte_end":8463337,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463342,"byte_end":8463345,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463350,"byte_end":8463410,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463415,"byte_end":8463418,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463423,"byte_end":8463455,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463460,"byte_end":8463463,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463468,"byte_end":8463482,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463487,"byte_end":8463490,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463495,"byte_end":8463508,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463513,"byte_end":8463587,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463592,"byte_end":8463597,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463602,"byte_end":8463636,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463641,"byte_end":8463644,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463649,"byte_end":8463710,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463715,"byte_end":8463718,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463723,"byte_end":8463748,"line_start":162,"line_end":162,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463753,"byte_end":8463788,"line_start":163,"line_end":163,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463793,"byte_end":8463798,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463803,"byte_end":8463820,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463825,"byte_end":8463832,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464486,"byte_end":8464493,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463924,"byte_end":8463982,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463987,"byte_end":8463990,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8463995,"byte_end":8464071,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464076,"byte_end":8464097,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464102,"byte_end":8464105,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464110,"byte_end":8464124,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464129,"byte_end":8464132,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464137,"byte_end":8464150,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464155,"byte_end":8464229,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464234,"byte_end":8464239,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464244,"byte_end":8464278,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464283,"byte_end":8464286,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464291,"byte_end":8464352,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464357,"byte_end":8464360,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464365,"byte_end":8464390,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464395,"byte_end":8464430,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464435,"byte_end":8464440,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464445,"byte_end":8464462,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464467,"byte_end":8464474,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465344,"byte_end":8465348,"line_start":216,"line_end":216,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464586,"byte_end":8464675,"line_start":194,"line_end":194,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464680,"byte_end":8464718,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464723,"byte_end":8464726,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464731,"byte_end":8464782,"line_start":197,"line_end":197,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464787,"byte_end":8464790,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464795,"byte_end":8464890,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464895,"byte_end":8464936,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464941,"byte_end":8464944,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464949,"byte_end":8464963,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464968,"byte_end":8464971,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464976,"byte_end":8464989,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8464994,"byte_end":8465068,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465073,"byte_end":8465078,"line_start":206,"line_end":206,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465083,"byte_end":8465117,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465122,"byte_end":8465125,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465130,"byte_end":8465191,"line_start":209,"line_end":209,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465196,"byte_end":8465199,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465204,"byte_end":8465236,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465241,"byte_end":8465282,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465287,"byte_end":8465292,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465297,"byte_end":8465314,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465319,"byte_end":8465326,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466090,"byte_end":8466097,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465499,"byte_end":8465561,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465566,"byte_end":8465569,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465574,"byte_end":8465638,"line_start":222,"line_end":222,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465643,"byte_end":8465646,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465651,"byte_end":8465691,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465696,"byte_end":8465699,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465704,"byte_end":8465718,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465723,"byte_end":8465726,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465731,"byte_end":8465744,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465749,"byte_end":8465823,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465828,"byte_end":8465833,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465838,"byte_end":8465872,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465877,"byte_end":8465880,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465885,"byte_end":8465946,"line_start":233,"line_end":233,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465951,"byte_end":8465954,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465959,"byte_end":8465989,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8465994,"byte_end":8466034,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466039,"byte_end":8466044,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466049,"byte_end":8466066,"line_start":238,"line_end":238,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466071,"byte_end":8466078,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466981,"byte_end":8466992,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466179,"byte_end":8466241,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466246,"byte_end":8466249,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466254,"byte_end":8466323,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466328,"byte_end":8466401,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466406,"byte_end":8466479,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466484,"byte_end":8466559,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466564,"byte_end":8466582,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466587,"byte_end":8466590,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466595,"byte_end":8466609,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466614,"byte_end":8466617,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466622,"byte_end":8466635,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466640,"byte_end":8466714,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466719,"byte_end":8466724,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466729,"byte_end":8466763,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466768,"byte_end":8466771,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466776,"byte_end":8466837,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466842,"byte_end":8466845,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466850,"byte_end":8466880,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466885,"byte_end":8466925,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466930,"byte_end":8466935,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466940,"byte_end":8466957,"line_start":264,"line_end":264,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8466962,"byte_end":8466969,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467829,"byte_end":8467837,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467098,"byte_end":8467164,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467169,"byte_end":8467172,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467177,"byte_end":8467266,"line_start":272,"line_end":272,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467271,"byte_end":8467353,"line_start":273,"line_end":273,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467358,"byte_end":8467361,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467366,"byte_end":8467436,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467441,"byte_end":8467444,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467449,"byte_end":8467463,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467468,"byte_end":8467471,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467476,"byte_end":8467489,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467494,"byte_end":8467568,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467573,"byte_end":8467578,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467583,"byte_end":8467610,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467615,"byte_end":8467618,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467623,"byte_end":8467657,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467662,"byte_end":8467665,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467670,"byte_end":8467731,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467736,"byte_end":8467773,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467778,"byte_end":8467783,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467788,"byte_end":8467805,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467810,"byte_end":8467817,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4791},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473578,"byte_end":8473587,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4792}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472324,"byte_end":8472341,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472342,"byte_end":8472345,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472346,"byte_end":8472443,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472444,"byte_end":8472489,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472490,"byte_end":8472493,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472494,"byte_end":8472593,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472594,"byte_end":8472687,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472688,"byte_end":8472691,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472692,"byte_end":8472753,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472754,"byte_end":8472757,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472758,"byte_end":8472784,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472785,"byte_end":8472823,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472824,"byte_end":8472854,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472855,"byte_end":8472899,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472900,"byte_end":8472940,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8472941,"byte_end":8473003,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473004,"byte_end":8473058,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473059,"byte_end":8473143,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473144,"byte_end":8473147,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473148,"byte_end":8473163,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473164,"byte_end":8473167,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473168,"byte_end":8473181,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473182,"byte_end":8473256,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473257,"byte_end":8473262,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473263,"byte_end":8473297,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473298,"byte_end":8473301,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473302,"byte_end":8473360,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473361,"byte_end":8473395,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473396,"byte_end":8473399,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473400,"byte_end":8473410,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473411,"byte_end":8473469,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473470,"byte_end":8473518,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473519,"byte_end":8473524,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473525,"byte_end":8473530,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473531,"byte_end":8473541,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473542,"byte_end":8473549,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474244,"byte_end":8474248,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addrs: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473657,"byte_end":8473705,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473710,"byte_end":8473713,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473718,"byte_end":8473813,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473818,"byte_end":8473882,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473887,"byte_end":8473890,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473895,"byte_end":8473933,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473938,"byte_end":8473941,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473946,"byte_end":8473960,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473965,"byte_end":8473968,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473973,"byte_end":8473986,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473991,"byte_end":8474065,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474070,"byte_end":8474075,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474080,"byte_end":8474114,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474119,"byte_end":8474122,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474127,"byte_end":8474182,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474187,"byte_end":8474192,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474197,"byte_end":8474214,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474219,"byte_end":8474226,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475488,"byte_end":8475498,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8474956,"byte_end":8475017,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475022,"byte_end":8475025,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475030,"byte_end":8475118,"line_start":97,"line_end":97,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475123,"byte_end":8475142,"line_start":98,"line_end":98,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475147,"byte_end":8475150,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475155,"byte_end":8475169,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475174,"byte_end":8475177,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475182,"byte_end":8475195,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475200,"byte_end":8475274,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475279,"byte_end":8475284,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/\tuse async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475289,"byte_end":8475323,"line_start":105,"line_end":105,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475328,"byte_end":8475331,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475336,"byte_end":8475391,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475396,"byte_end":8475432,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475437,"byte_end":8475442,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475447,"byte_end":8475464,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475469,"byte_end":8475476,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476542,"byte_end":8476549,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&self, buf: &[u8], addrs: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475684,"byte_end":8475734,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475739,"byte_end":8475742,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475747,"byte_end":8475799,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475804,"byte_end":8475807,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475812,"byte_end":8475826,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475831,"byte_end":8475834,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475839,"byte_end":8475852,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475857,"byte_end":8475931,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475936,"byte_end":8475941,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475946,"byte_end":8475980,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475985,"byte_end":8475988,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8475993,"byte_end":8476037,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476042,"byte_end":8476083,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476088,"byte_end":8476130,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476135,"byte_end":8476175,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476180,"byte_end":8476230,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476235,"byte_end":8476241,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476246,"byte_end":8476249,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476254,"byte_end":8476309,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476314,"byte_end":8476317,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476322,"byte_end":8476354,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476359,"byte_end":8476427,"line_start":140,"line_end":140,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476432,"byte_end":8476480,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476485,"byte_end":8476490,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476495,"byte_end":8476512,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8476517,"byte_end":8476524,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477742,"byte_end":8477751,"line_start":183,"line_end":183,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477160,"byte_end":8477194,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477199,"byte_end":8477202,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477207,"byte_end":8477271,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477276,"byte_end":8477279,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477284,"byte_end":8477298,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477303,"byte_end":8477306,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477311,"byte_end":8477324,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477329,"byte_end":8477403,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477408,"byte_end":8477413,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477418,"byte_end":8477452,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477457,"byte_end":8477460,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477465,"byte_end":8477520,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477525,"byte_end":8477528,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477533,"byte_end":8477565,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477570,"byte_end":8477624,"line_start":178,"line_end":178,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477629,"byte_end":8477680,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477685,"byte_end":8477690,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477695,"byte_end":8477712,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8477717,"byte_end":8477724,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479089,"byte_end":8479096,"line_start":224,"line_end":224,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addrs: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478311,"byte_end":8478359,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478364,"byte_end":8478367,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478372,"byte_end":8478464,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478469,"byte_end":8478563,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478568,"byte_end":8478618,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478623,"byte_end":8478626,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478631,"byte_end":8478657,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478662,"byte_end":8478688,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478693,"byte_end":8478729,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478734,"byte_end":8478737,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478742,"byte_end":8478756,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478761,"byte_end":8478764,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478769,"byte_end":8478782,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478787,"byte_end":8478861,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478866,"byte_end":8478871,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478876,"byte_end":8478910,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478915,"byte_end":8478918,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478923,"byte_end":8478978,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8478983,"byte_end":8479027,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479032,"byte_end":8479037,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479042,"byte_end":8479059,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479064,"byte_end":8479071,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480535,"byte_end":8480539,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479799,"byte_end":8479875,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479880,"byte_end":8479883,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479888,"byte_end":8479960,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8479965,"byte_end":8480022,"line_start":250,"line_end":250,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480027,"byte_end":8480030,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480035,"byte_end":8480067,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480072,"byte_end":8480075,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480080,"byte_end":8480094,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480099,"byte_end":8480102,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480107,"byte_end":8480120,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480125,"byte_end":8480199,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480204,"byte_end":8480209,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480214,"byte_end":8480248,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480253,"byte_end":8480256,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480261,"byte_end":8480320,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480325,"byte_end":8480369,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480374,"byte_end":8480423,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480428,"byte_end":8480431,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480436,"byte_end":8480473,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480478,"byte_end":8480483,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480488,"byte_end":8480505,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8480510,"byte_end":8480517,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481666,"byte_end":8481670,"line_start":305,"line_end":305,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481077,"byte_end":8481111,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481116,"byte_end":8481119,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481124,"byte_end":8481173,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481178,"byte_end":8481181,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481186,"byte_end":8481200,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481205,"byte_end":8481208,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481213,"byte_end":8481226,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481231,"byte_end":8481305,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481310,"byte_end":8481315,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481320,"byte_end":8481354,"line_start":294,"line_end":294,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481359,"byte_end":8481362,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481367,"byte_end":8481422,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481427,"byte_end":8481471,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481476,"byte_end":8481479,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481484,"byte_end":8481516,"line_start":299,"line_end":299,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481521,"byte_end":8481562,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481567,"byte_end":8481604,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481609,"byte_end":8481614,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481619,"byte_end":8481636,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8481641,"byte_end":8481648,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482426,"byte_end":8482435,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482214,"byte_end":8482278,"line_start":321,"line_end":321,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482283,"byte_end":8482286,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482291,"byte_end":8482357,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482362,"byte_end":8482365,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482370,"byte_end":8482414,"line_start":325,"line_end":325,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482688,"byte_end":8482701,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482519,"byte_end":8482583,"line_start":330,"line_end":330,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482588,"byte_end":8482591,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482596,"byte_end":8482676,"line_start":332,"line_end":332,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483040,"byte_end":8483057,"line_start":342,"line_end":342,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482799,"byte_end":8482868,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482873,"byte_end":8482876,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482881,"byte_end":8482955,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482960,"byte_end":8482963,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8482968,"byte_end":8483028,"line_start":341,"line_end":341,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483402,"byte_end":8483423,"line_start":353,"line_end":353,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483149,"byte_end":8483218,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483223,"byte_end":8483226,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483231,"byte_end":8483305,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483310,"byte_end":8483313,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483318,"byte_end":8483328,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483333,"byte_end":8483336,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483341,"byte_end":8483390,"line_start":352,"line_end":352,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483766,"byte_end":8483782,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483529,"byte_end":8483597,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483602,"byte_end":8483605,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483610,"byte_end":8483683,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483688,"byte_end":8483691,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483696,"byte_end":8483754,"line_start":361,"line_end":361,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484266,"byte_end":8484286,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483872,"byte_end":8483940,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483945,"byte_end":8483948,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8483953,"byte_end":8484048,"line_start":368,"line_end":368,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484053,"byte_end":8484139,"line_start":369,"line_end":369,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484144,"byte_end":8484169,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484174,"byte_end":8484177,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484182,"byte_end":8484192,"line_start":372,"line_end":372,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484197,"byte_end":8484200,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484205,"byte_end":8484254,"line_start":374,"line_end":374,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484635,"byte_end":8484652,"line_start":384,"line_end":384,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484392,"byte_end":8484463,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484468,"byte_end":8484471,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484476,"byte_end":8484550,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484555,"byte_end":8484558,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484563,"byte_end":8484623,"line_start":383,"line_end":383,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485001,"byte_end":8485022,"line_start":395,"line_end":395,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484744,"byte_end":8484815,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484820,"byte_end":8484823,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484828,"byte_end":8484904,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484909,"byte_end":8484912,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484917,"byte_end":8484927,"line_start":392,"line_end":392,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484932,"byte_end":8484935,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8484940,"byte_end":8484989,"line_start":394,"line_end":394,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485316,"byte_end":8485319,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485128,"byte_end":8485186,"line_start":399,"line_end":399,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485191,"byte_end":8485194,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485199,"byte_end":8485259,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485264,"byte_end":8485267,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485272,"byte_end":8485304,"line_start":403,"line_end":403,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485581,"byte_end":8485588,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485396,"byte_end":8485454,"line_start":408,"line_end":408,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485459,"byte_end":8485462,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485467,"byte_end":8485543,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485548,"byte_end":8485569,"line_start":411,"line_end":411,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486605,"byte_end":8486622,"line_start":440,"line_end":440,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485681,"byte_end":8485739,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485744,"byte_end":8485747,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485752,"byte_end":8485844,"line_start":418,"line_end":418,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485849,"byte_end":8485944,"line_start":419,"line_end":419,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8485949,"byte_end":8486034,"line_start":420,"line_end":420,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486039,"byte_end":8486089,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486094,"byte_end":8486097,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486102,"byte_end":8486116,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486121,"byte_end":8486124,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486129,"byte_end":8486142,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486147,"byte_end":8486221,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486226,"byte_end":8486231,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486236,"byte_end":8486263,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486268,"byte_end":8486271,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486276,"byte_end":8486310,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486315,"byte_end":8486318,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486323,"byte_end":8486369,"line_start":432,"line_end":432,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486374,"byte_end":8486424,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486429,"byte_end":8486432,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486437,"byte_end":8486492,"line_start":435,"line_end":435,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486497,"byte_end":8486549,"line_start":436,"line_end":436,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486554,"byte_end":8486559,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486564,"byte_end":8486581,"line_start":438,"line_end":438,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486586,"byte_end":8486593,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487685,"byte_end":8487702,"line_start":469,"line_end":469,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486802,"byte_end":8486862,"line_start":446,"line_end":446,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486867,"byte_end":8486870,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486875,"byte_end":8486967,"line_start":448,"line_end":448,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8486972,"byte_end":8487066,"line_start":449,"line_end":449,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487071,"byte_end":8487104,"line_start":450,"line_end":450,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487109,"byte_end":8487112,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487117,"byte_end":8487131,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487136,"byte_end":8487139,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487144,"byte_end":8487157,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487162,"byte_end":8487236,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487241,"byte_end":8487246,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487251,"byte_end":8487292,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487297,"byte_end":8487300,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487305,"byte_end":8487339,"line_start":459,"line_end":459,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487344,"byte_end":8487347,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487352,"byte_end":8487439,"line_start":461,"line_end":461,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487444,"byte_end":8487512,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487517,"byte_end":8487571,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487576,"byte_end":8487579,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487584,"byte_end":8487629,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487634,"byte_end":8487639,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487644,"byte_end":8487661,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487666,"byte_end":8487673,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488095,"byte_end":8488113,"line_start":480,"line_end":480,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487876,"byte_end":8487935,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487940,"byte_end":8487943,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8487948,"byte_end":8488018,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488023,"byte_end":8488026,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488031,"byte_end":8488083,"line_start":479,"line_end":479,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488515,"byte_end":8488533,"line_start":491,"line_end":491,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488294,"byte_end":8488355,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488360,"byte_end":8488363,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488368,"byte_end":8488438,"line_start":488,"line_end":488,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488443,"byte_end":8488446,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488451,"byte_end":8488503,"line_start":490,"line_end":490,"column_start":5,"column_end":57}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":10023,"byte_end":10027,"line_start":9,"line_end":9,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826922,"byte_end":6826929,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827866,"byte_end":6827872,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827902,"byte_end":6827908,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043799,"byte_end":7043812,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044013,"byte_end":7044026,"line_start":60,"line_end":60,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044662,"byte_end":7044674,"line_start":81,"line_end":81,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044701,"byte_end":7044713,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":7961682,"byte_end":7961687,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":7963688,"byte_end":7963702,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":7965212,"byte_end":7965227,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":7966456,"byte_end":7966461,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983922,"byte_end":7983927,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985802,"byte_end":7985807,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987966,"byte_end":7987971,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7988213,"byte_end":7988218,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7989363,"byte_end":7989368,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":7991259,"byte_end":7991269,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":7991865,"byte_end":7991880,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7992835,"byte_end":7992850,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7994000,"byte_end":7994005,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":7995407,"byte_end":7995425,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":7996829,"byte_end":7996847,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997688,"byte_end":7997692,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001364,"byte_end":8001368,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8002286,"byte_end":8002290,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8007744,"byte_end":8007754,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8019395,"byte_end":8019406,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8019937,"byte_end":8019948,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8020534,"byte_end":8020548,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8021550,"byte_end":8021564,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8023105,"byte_end":8023124,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8023612,"byte_end":8023618,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8023871,"byte_end":8023883,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8024170,"byte_end":8024182,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8024313,"byte_end":8024325,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026348,"byte_end":8026357,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027585,"byte_end":8027594,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030334,"byte_end":8030343,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8031797,"byte_end":8031806,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8032728,"byte_end":8032737,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8033075,"byte_end":8033084,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040133,"byte_end":8040142,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8045974,"byte_end":8045983,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8046881,"byte_end":8046890,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8047136,"byte_end":8047145,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049676,"byte_end":8049686,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054546,"byte_end":8054552,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057853,"byte_end":8057859,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8058125,"byte_end":8058131,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8058647,"byte_end":8058653,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8059003,"byte_end":8059009,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8059768,"byte_end":8059774,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8060298,"byte_end":8060304,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061843,"byte_end":8061848,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061967,"byte_end":8061972,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8062176,"byte_end":8062181,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063433,"byte_end":8063439,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063558,"byte_end":8063564,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064607,"byte_end":8064611,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064730,"byte_end":8064734,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8100175,"byte_end":8100182,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8103832,"byte_end":8103838,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8104795,"byte_end":8104801,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8108204,"byte_end":8108210,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112462,"byte_end":8112467,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8115477,"byte_end":8115482,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8117581,"byte_end":8117586,"line_start":252,"line_end":252,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8122094,"byte_end":8122100,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8123057,"byte_end":8123063,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8126466,"byte_end":8126472,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136669,"byte_end":8136681,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2509},{"krate":0,"index":2514},{"krate":0,"index":2520},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144356,"byte_end":8144368,"line_start":298,"line_end":298,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144821,"byte_end":8144833,"line_start":315,"line_end":315,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145190,"byte_end":8145202,"line_start":325,"line_end":325,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145311,"byte_end":8145323,"line_start":331,"line_end":331,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145507,"byte_end":8145519,"line_start":338,"line_end":338,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147511,"byte_end":8147523,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2565},{"krate":0,"index":2569},{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151320,"byte_end":8151332,"line_start":170,"line_end":170,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152303,"byte_end":8152311,"line_start":197,"line_end":197,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152687,"byte_end":8152699,"line_start":209,"line_end":209,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153056,"byte_end":8153068,"line_start":219,"line_end":219,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153177,"byte_end":8153189,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153373,"byte_end":8153385,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154827,"byte_end":8154837,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158240,"byte_end":8158250,"line_start":156,"line_end":156,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158706,"byte_end":8158716,"line_start":176,"line_end":176,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8159753,"byte_end":8159763,"line_start":213,"line_end":213,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160212,"byte_end":8160222,"line_start":230,"line_end":230,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160559,"byte_end":8160569,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160678,"byte_end":8160688,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160864,"byte_end":8160874,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925369,"byte_end":6925378,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925585,"byte_end":6925594,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925634,"byte_end":6925643,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926774,"byte_end":6926783,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926990,"byte_end":6926999,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6927039,"byte_end":6927048,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6928428,"byte_end":6928433,"line_start":26,"line_end":26,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6928651,"byte_end":6928656,"line_start":35,"line_end":35,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6929753,"byte_end":6929759,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6929871,"byte_end":6929877,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6930843,"byte_end":6930852,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6931081,"byte_end":6931090,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":6933481,"byte_end":6933487,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":6933599,"byte_end":6933605,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934219,"byte_end":6934224,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934434,"byte_end":6934439,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934575,"byte_end":6934580,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":6935534,"byte_end":6935543,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":6935650,"byte_end":6935659,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":6936700,"byte_end":6936708,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":6936922,"byte_end":6936930,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":6938261,"byte_end":6938267,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":6938432,"byte_end":6938438,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":6939286,"byte_end":6939295,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":6939414,"byte_end":6939423,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940304,"byte_end":6940314,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940448,"byte_end":6940458,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940499,"byte_end":6940509,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941341,"byte_end":6941354,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941488,"byte_end":6941501,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941545,"byte_end":6941558,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":6942512,"byte_end":6942522,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":6942715,"byte_end":6942725,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":6943734,"byte_end":6943747,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":6943896,"byte_end":6943909,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":6944985,"byte_end":6944989,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":6945144,"byte_end":6945148,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":6946201,"byte_end":6946209,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":6946417,"byte_end":6946425,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":6947466,"byte_end":6947474,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":6947682,"byte_end":6947690,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":6948707,"byte_end":6948714,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":6948863,"byte_end":6948870,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":6949648,"byte_end":6949658,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":6949774,"byte_end":6949784,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":6950929,"byte_end":6950937,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":6951145,"byte_end":6951153,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":6952204,"byte_end":6952212,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":6952420,"byte_end":6952428,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":6953210,"byte_end":6953213,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":6953365,"byte_end":6953368,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":6954159,"byte_end":6954168,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":6954357,"byte_end":6954366,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":6955644,"byte_end":6955655,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":6955842,"byte_end":6955853,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":6957129,"byte_end":6957143,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":6957328,"byte_end":6957342,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":6958880,"byte_end":6958889,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":6959078,"byte_end":6959087,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":6960362,"byte_end":6960373,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":6960560,"byte_end":6960571,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":6961874,"byte_end":6961888,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":6962073,"byte_end":6962087,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":6963704,"byte_end":6963712,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":6963926,"byte_end":6963934,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":6965053,"byte_end":6965063,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965526,"byte_end":6965535,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965559,"byte_end":6965568,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965698,"byte_end":6965707,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":6966944,"byte_end":6966960,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":6967189,"byte_end":6967205,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969680,"byte_end":6969694,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969724,"byte_end":6969738,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969941,"byte_end":6969955,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":6971202,"byte_end":6971206,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":6971411,"byte_end":6971415,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":6972448,"byte_end":6972452,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":6972566,"byte_end":6972570,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":6973739,"byte_end":6973748,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":6973930,"byte_end":6973939,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":6975340,"byte_end":6975346,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":6975547,"byte_end":6975553,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":6976813,"byte_end":6976817,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":6976988,"byte_end":6976992,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":6978085,"byte_end":6978094,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":6978259,"byte_end":6978268,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979176,"byte_end":6979189,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979225,"byte_end":6979238,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979450,"byte_end":6979463,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980543,"byte_end":6980559,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980589,"byte_end":6980605,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980740,"byte_end":6980756,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982060,"byte_end":6982063,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982303,"byte_end":6982306,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982508,"byte_end":6982511,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6984108,"byte_end":6984113,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984663,"byte_end":6984669,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985598,"byte_end":6985604,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6987025,"byte_end":6987033,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988401,"byte_end":6988405,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989631,"byte_end":6989637,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990252,"byte_end":6990262,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991454,"byte_end":6991464,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000171,"byte_end":7000176,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000222,"byte_end":7000227,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000243,"byte_end":7000248,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000627,"byte_end":7000632,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001393,"byte_end":7001403,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7002469,"byte_end":7002479,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004928,"byte_end":7004933,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005053,"byte_end":7005059,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005431,"byte_end":7005436,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005547,"byte_end":7005552,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005778,"byte_end":7005788,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005838,"byte_end":7005848,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005885,"byte_end":7005895,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006251,"byte_end":7006261,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006427,"byte_end":7006437,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006569,"byte_end":7006579,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006717,"byte_end":7006727,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008542,"byte_end":7008548,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008601,"byte_end":7008607,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008623,"byte_end":7008629,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009068,"byte_end":7009074,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009740,"byte_end":7009750,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7010860,"byte_end":7010870,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013711,"byte_end":7013722,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7014835,"byte_end":7014846,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017275,"byte_end":7017281,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017401,"byte_end":7017407,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017781,"byte_end":7017787,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017900,"byte_end":7017906,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018145,"byte_end":7018160,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018210,"byte_end":7018225,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018262,"byte_end":7018277,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018638,"byte_end":7018653,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018819,"byte_end":7018834,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018966,"byte_end":7018981,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019244,"byte_end":7019260,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019310,"byte_end":7019326,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019363,"byte_end":7019379,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019777,"byte_end":7019793,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019959,"byte_end":7019975,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7020107,"byte_end":7020123,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7020261,"byte_end":7020277,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7022340,"byte_end":7022348,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7026445,"byte_end":7026449,"line_start":193,"line_end":193,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7027015,"byte_end":7027019,"line_start":213,"line_end":213,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7027173,"byte_end":7027177,"line_start":222,"line_end":222,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257153,"byte_end":8257161,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262265,"byte_end":8262272,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8263932,"byte_end":8263940,"line_start":77,"line_end":77,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/sleepers.rs","byte_start":8271708,"byte_end":8271716,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273088,"byte_end":8273098,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273129,"byte_end":8273139,"line_start":18,"line_end":18,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273155,"byte_end":8273165,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273734,"byte_end":8273744,"line_start":46,"line_end":46,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280054,"byte_end":8280059,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280602,"byte_end":8280606,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280631,"byte_end":8280635,"line_start":49,"line_end":49,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280645,"byte_end":8280649,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8283394,"byte_end":8283398,"line_start":146,"line_end":146,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8283676,"byte_end":8283680,"line_start":158,"line_end":158,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8284127,"byte_end":8284131,"line_start":170,"line_end":170,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284858,"byte_end":8284864,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8285190,"byte_end":8285196,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285808,"byte_end":8285816,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3124},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289655,"byte_end":8289666,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289810,"byte_end":8289821,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289986,"byte_end":8289997,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8290365,"byte_end":8290374,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300201,"byte_end":8300211,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302790,"byte_end":8302800,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303558,"byte_end":8303566,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307529,"byte_end":8307537,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307690,"byte_end":8307698,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307853,"byte_end":8307861,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310041,"byte_end":8310045,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3423},{"krate":0,"index":3429},{"krate":0,"index":3434},{"krate":0,"index":3439},{"krate":0,"index":3444},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317891,"byte_end":8317895,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318374,"byte_end":8318378,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318492,"byte_end":8318496,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318977,"byte_end":8318981,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320145,"byte_end":8320149,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320638,"byte_end":8320642,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320831,"byte_end":8320835,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320951,"byte_end":8320955,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8321099,"byte_end":8321103,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322223,"byte_end":8322227,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322264,"byte_end":8322268,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322535,"byte_end":8322539,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323774,"byte_end":8323783,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323820,"byte_end":8323829,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323845,"byte_end":8323854,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324245,"byte_end":8324254,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324562,"byte_end":8324571,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324697,"byte_end":8324706,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8326267,"byte_end":8326276,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350380,"byte_end":8350391,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8357180,"byte_end":8357191,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3583}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8357336,"byte_end":8357347,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363446,"byte_end":8363453,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363652,"byte_end":8363659,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379166,"byte_end":8379175,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379380,"byte_end":8379389,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380174,"byte_end":8380184,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380693,"byte_end":8380703,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380796,"byte_end":8380806,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380912,"byte_end":8380922,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381079,"byte_end":8381089,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381214,"byte_end":8381224,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381254,"byte_end":8381263,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381976,"byte_end":8381980,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382453,"byte_end":8382457,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382619,"byte_end":8382623,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382764,"byte_end":8382775,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383072,"byte_end":8383076,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3779}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383169,"byte_end":8383173,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383290,"byte_end":8383294,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383441,"byte_end":8383445,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385101,"byte_end":8385105,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3858},{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409955,"byte_end":8409958,"line_start":816,"line_end":816,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410187,"byte_end":8410190,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3866}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410485,"byte_end":8410487,"line_start":833,"line_end":833,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3868}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410690,"byte_end":8410694,"line_start":841,"line_end":841,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410818,"byte_end":8410822,"line_start":849,"line_end":849,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410916,"byte_end":8410920,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410998,"byte_end":8411003,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411099,"byte_end":8411102,"line_start":867,"line_end":867,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411228,"byte_end":8411231,"line_start":874,"line_end":874,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411331,"byte_end":8411339,"line_start":880,"line_end":880,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411520,"byte_end":8411526,"line_start":892,"line_end":892,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411615,"byte_end":8411622,"line_start":898,"line_end":898,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414770,"byte_end":8414774,"line_start":1016,"line_end":1016,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414881,"byte_end":8414885,"line_start":1022,"line_end":1022,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414981,"byte_end":8414988,"line_start":1028,"line_end":1028,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3914}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416797,"byte_end":8416804,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3941}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422050,"byte_end":8422057,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422165,"byte_end":8422168,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422268,"byte_end":8422271,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422422,"byte_end":8422429,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422546,"byte_end":8422553,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422662,"byte_end":8422670,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3954}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422779,"byte_end":8422786,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422892,"byte_end":8422899,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3959}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423078,"byte_end":8423085,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423280,"byte_end":8423287,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423444,"byte_end":8423451,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423572,"byte_end":8423579,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423671,"byte_end":8423674,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423806,"byte_end":8423809,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423960,"byte_end":8423967,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424079,"byte_end":8424082,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424305,"byte_end":8424307,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424522,"byte_end":8424529,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3988}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425534,"byte_end":8425541,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425670,"byte_end":8425677,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425782,"byte_end":8425789,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430920,"byte_end":8430939,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8431211,"byte_end":8431230,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8431954,"byte_end":8431964,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8432259,"byte_end":8432271,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8432636,"byte_end":8432648,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8436367,"byte_end":8436373,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8438370,"byte_end":8438377,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8443452,"byte_end":8443459,"line_start":200,"line_end":200,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4149},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8448349,"byte_end":8448356,"line_start":339,"line_end":339,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8448631,"byte_end":8448638,"line_start":349,"line_end":349,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451501,"byte_end":8451512,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4194},{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456168,"byte_end":8456176,"line_start":194,"line_end":194,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456540,"byte_end":8456551,"line_start":206,"line_end":206,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456965,"byte_end":8456976,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4769}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8457105,"byte_end":8457116,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4771}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8457275,"byte_end":8457286,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4773}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460213,"byte_end":8460222,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4227},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467963,"byte_end":8467972,"line_start":296,"line_end":296,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8468652,"byte_end":8468661,"line_start":324,"line_end":324,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8469983,"byte_end":8469992,"line_start":370,"line_end":370,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470401,"byte_end":8470410,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470539,"byte_end":8470548,"line_start":389,"line_end":389,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4788}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470703,"byte_end":8470712,"line_start":395,"line_end":395,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473641,"byte_end":8473650,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4275},{"krate":0,"index":4280},{"krate":0,"index":4282},{"krate":0,"index":4289},{"krate":0,"index":4296},{"krate":0,"index":4302},{"krate":0,"index":4309},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488741,"byte_end":8488750,"line_start":498,"line_end":498,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489149,"byte_end":8489158,"line_start":511,"line_end":511,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489287,"byte_end":8489296,"line_start":517,"line_end":517,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489451,"byte_end":8489460,"line_start":523,"line_end":523,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9076,"byte_end":9082,"line_start":244,"line_end":244,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9096,"byte_end":9098,"line_start":245,"line_end":245,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6837801,"byte_end":6837808,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1462}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9112,"byte_end":9114,"line_start":246,"line_end":246,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":6838896,"byte_end":6838900,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2449}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8127690,"byte_end":8127692,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2450}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8127724,"byte_end":8127726,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2456}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8127740,"byte_end":8127743,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2466}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9128,"byte_end":9135,"line_start":247,"line_end":247,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9149,"byte_end":9155,"line_start":248,"line_end":248,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9169,"byte_end":9173,"line_start":249,"line_end":249,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1105}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9187,"byte_end":9191,"line_start":250,"line_end":250,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1375}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9223,"byte_end":9225,"line_start":254,"line_end":254,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":3260}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9239,"byte_end":9243,"line_start":255,"line_end":255,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3723}},{"kind":"Mod","span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9257,"byte_end":9260,"line_start":256,"line_end":256,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4008}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":10023,"byte_end":10027,"line_start":9,"line_end":9,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6812436,"byte_end":6812442,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":8075},"to":{"krate":0,"index":1388}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6826922,"byte_end":6826929,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827866,"byte_end":6827872,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6827902,"byte_end":6827908,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7043799,"byte_end":7043812,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044013,"byte_end":7044026,"line_start":60,"line_end":60,"column_start":28,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044662,"byte_end":7044674,"line_start":81,"line_end":81,"column_start":16,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1420},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7044701,"byte_end":7044713,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1420},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":7961682,"byte_end":7961687,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6832},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":7963688,"byte_end":7963702,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":7965212,"byte_end":7965227,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":7966456,"byte_end":7966461,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6784},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":7949696,"byte_end":7949703,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":23,"index":27},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":7983922,"byte_end":7983927,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2133},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7985802,"byte_end":7985807,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7987966,"byte_end":7987971,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7988213,"byte_end":7988218,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6696},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":7989363,"byte_end":7989368,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6696},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":7991259,"byte_end":7991269,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":7991865,"byte_end":7991880,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1639},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7992835,"byte_end":7992850,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":7994000,"byte_end":7994005,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":7995407,"byte_end":7995425,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":7996829,"byte_end":7996847,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1709},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":7997688,"byte_end":7997692,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8001364,"byte_end":8001368,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6689},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8002286,"byte_end":8002290,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6689},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":7968540,"byte_end":7968544,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8007744,"byte_end":8007754,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8004981,"byte_end":8004985,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":23,"index":25},"to":{"krate":0,"index":2181}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8019395,"byte_end":8019406,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1791},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8019937,"byte_end":8019948,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8020534,"byte_end":8020548,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1827},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8021550,"byte_end":8021564,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8023105,"byte_end":8023124,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8009384,"byte_end":8009389,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":23,"index":20},"to":{"krate":0,"index":2197}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8023612,"byte_end":8023618,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":29429},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8023871,"byte_end":8023883,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8024170,"byte_end":8024182,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8024313,"byte_end":8024325,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2211},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8026348,"byte_end":8026357,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8027585,"byte_end":8027594,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8030334,"byte_end":8030343,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8031797,"byte_end":8031806,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8032728,"byte_end":8032737,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6611},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8033075,"byte_end":8033084,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8040133,"byte_end":8040142,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8045974,"byte_end":8045983,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6570},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8046881,"byte_end":8046890,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6570},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8047136,"byte_end":8047145,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6570},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8049676,"byte_end":8049686,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6521},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8054546,"byte_end":8054552,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8057853,"byte_end":8057859,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8058125,"byte_end":8058131,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8058647,"byte_end":8058653,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8059003,"byte_end":8059009,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8059768,"byte_end":8059774,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8060298,"byte_end":8060304,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061843,"byte_end":8061848,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8061967,"byte_end":8061972,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2068},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8062176,"byte_end":8062181,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2068},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063433,"byte_end":8063439,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8063558,"byte_end":8063564,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2088},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064607,"byte_end":8064611,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2104},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8064730,"byte_end":8064734,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2104},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8100175,"byte_end":8100182,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6512},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8103832,"byte_end":8103838,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8104795,"byte_end":8104801,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2346},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8108204,"byte_end":8108210,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2346},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8112462,"byte_end":8112467,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8115477,"byte_end":8115482,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2380},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8117581,"byte_end":8117586,"line_start":252,"line_end":252,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2380},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8122094,"byte_end":8122100,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8123057,"byte_end":8123063,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2415},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8126466,"byte_end":8126472,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2415},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8136669,"byte_end":8136681,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144356,"byte_end":8144368,"line_start":298,"line_end":298,"column_start":21,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8144821,"byte_end":8144833,"line_start":315,"line_end":315,"column_start":49,"column_end":61},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145190,"byte_end":8145202,"line_start":325,"line_end":325,"column_start":18,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145311,"byte_end":8145323,"line_start":331,"line_end":331,"column_start":20,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8145507,"byte_end":8145519,"line_start":338,"line_end":338,"column_start":20,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8147511,"byte_end":8147523,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8151320,"byte_end":8151332,"line_start":170,"line_end":170,"column_start":21,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152303,"byte_end":8152311,"line_start":197,"line_end":197,"column_start":17,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2650},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8152687,"byte_end":8152699,"line_start":209,"line_end":209,"column_start":49,"column_end":61},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153056,"byte_end":8153068,"line_start":219,"line_end":219,"column_start":18,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153177,"byte_end":8153189,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8153373,"byte_end":8153385,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8154827,"byte_end":8154837,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158240,"byte_end":8158250,"line_start":156,"line_end":156,"column_start":15,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2608},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8158706,"byte_end":8158716,"line_start":176,"line_end":176,"column_start":16,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2608},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8159753,"byte_end":8159763,"line_start":213,"line_end":213,"column_start":21,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160212,"byte_end":8160222,"line_start":230,"line_end":230,"column_start":47,"column_end":57},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160559,"byte_end":8160569,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160678,"byte_end":8160688,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8160864,"byte_end":8160874,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925369,"byte_end":6925378,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925585,"byte_end":6925594,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6925634,"byte_end":6925643,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926774,"byte_end":6926783,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6926990,"byte_end":6926999,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6927039,"byte_end":6927048,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6928428,"byte_end":6928433,"line_start":26,"line_end":26,"column_start":28,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6928651,"byte_end":6928656,"line_start":35,"line_end":35,"column_start":55,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6463},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6929753,"byte_end":6929759,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6929871,"byte_end":6929877,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6417},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6930843,"byte_end":6930852,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6931081,"byte_end":6931090,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6334},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":6933481,"byte_end":6933487,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":6933599,"byte_end":6933605,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6328},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934219,"byte_end":6934224,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934434,"byte_end":6934439,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2671},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":6934575,"byte_end":6934580,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2671},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":6935534,"byte_end":6935543,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":6935650,"byte_end":6935659,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6291},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":6936700,"byte_end":6936708,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":6936922,"byte_end":6936930,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6213},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":6938261,"byte_end":6938267,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":6938432,"byte_end":6938438,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6204},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":6939286,"byte_end":6939295,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":6939414,"byte_end":6939423,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6155},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940304,"byte_end":6940314,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940448,"byte_end":6940458,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":6940499,"byte_end":6940509,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941341,"byte_end":6941354,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941488,"byte_end":6941501,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":6941545,"byte_end":6941558,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":6942512,"byte_end":6942522,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":6942715,"byte_end":6942725,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6103},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":6943734,"byte_end":6943747,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":6943896,"byte_end":6943909,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6008},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":6944985,"byte_end":6944989,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":6945144,"byte_end":6945148,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5998},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":6946201,"byte_end":6946209,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":6946417,"byte_end":6946425,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":6947466,"byte_end":6947474,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":6947682,"byte_end":6947690,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":6948707,"byte_end":6948714,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":6948863,"byte_end":6948870,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5874},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":6949648,"byte_end":6949658,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":6949774,"byte_end":6949784,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5789},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":6950929,"byte_end":6950937,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":6951145,"byte_end":6951153,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":6952204,"byte_end":6952212,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":6952420,"byte_end":6952428,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5707},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":6953210,"byte_end":6953213,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":6953365,"byte_end":6953368,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5698},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":6954159,"byte_end":6954168,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":6954357,"byte_end":6954366,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5601},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":6955644,"byte_end":6955655,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":6955842,"byte_end":6955853,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5544},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":6957129,"byte_end":6957143,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":6957328,"byte_end":6957342,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5487},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":6958880,"byte_end":6958889,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":6959078,"byte_end":6959087,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":6960362,"byte_end":6960373,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":6960560,"byte_end":6960571,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5373},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":6961874,"byte_end":6961888,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":6962073,"byte_end":6962087,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":6963704,"byte_end":6963712,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":6963926,"byte_end":6963934,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5271},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":6965053,"byte_end":6965063,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965526,"byte_end":6965535,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965559,"byte_end":6965568,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":6965698,"byte_end":6965707,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":6966944,"byte_end":6966960,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":6967189,"byte_end":6967205,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969680,"byte_end":6969694,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969724,"byte_end":6969738,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":6969941,"byte_end":6969955,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":6971202,"byte_end":6971206,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":6971411,"byte_end":6971415,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5207},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":6972448,"byte_end":6972452,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":6972566,"byte_end":6972570,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5153},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":6973739,"byte_end":6973748,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":6973930,"byte_end":6973939,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5111},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":6975340,"byte_end":6975346,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":6975547,"byte_end":6975553,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5063},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":6976813,"byte_end":6976817,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":6976988,"byte_end":6976992,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5017},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":6978085,"byte_end":6978094,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":6978259,"byte_end":6978268,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4975},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979176,"byte_end":6979189,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979225,"byte_end":6979238,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":6979450,"byte_end":6979463,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980543,"byte_end":6980559,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980589,"byte_end":6980605,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":6980740,"byte_end":6980756,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982060,"byte_end":6982063,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982303,"byte_end":6982306,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":6982508,"byte_end":6982511,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4886},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6855417,"byte_end":6855423,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":2690}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":6984108,"byte_end":6984113,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2784},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6984663,"byte_end":6984669,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2790},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":6985598,"byte_end":6985604,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2790},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":6987025,"byte_end":6987033,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4877},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":6988401,"byte_end":6988405,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4838},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":6989631,"byte_end":6989637,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2799},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6990252,"byte_end":6990262,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":6991454,"byte_end":6991464,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2808},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000171,"byte_end":7000176,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000222,"byte_end":7000227,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000243,"byte_end":7000248,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7000627,"byte_end":7000632,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7001393,"byte_end":7001403,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7002469,"byte_end":7002479,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7004928,"byte_end":7004933,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005053,"byte_end":7005059,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005431,"byte_end":7005436,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005547,"byte_end":7005552,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005778,"byte_end":7005788,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005838,"byte_end":7005848,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7005885,"byte_end":7005895,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006251,"byte_end":7006261,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006427,"byte_end":7006437,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006569,"byte_end":7006579,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7006717,"byte_end":7006727,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008542,"byte_end":7008548,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008601,"byte_end":7008607,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7008623,"byte_end":7008629,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009068,"byte_end":7009074,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7009740,"byte_end":7009750,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7010860,"byte_end":7010870,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7013711,"byte_end":7013722,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7014835,"byte_end":7014846,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017275,"byte_end":7017281,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017401,"byte_end":7017407,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017781,"byte_end":7017787,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7017900,"byte_end":7017906,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018145,"byte_end":7018160,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018210,"byte_end":7018225,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018262,"byte_end":7018277,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018638,"byte_end":7018653,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018819,"byte_end":7018834,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7018966,"byte_end":7018981,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019244,"byte_end":7019260,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019310,"byte_end":7019326,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019363,"byte_end":7019379,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019777,"byte_end":7019793,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7019959,"byte_end":7019975,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7020107,"byte_end":7020123,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7020261,"byte_end":7020277,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7022340,"byte_end":7022348,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7026445,"byte_end":7026449,"line_start":193,"line_end":193,"column_start":15,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7027015,"byte_end":7027019,"line_start":213,"line_end":213,"column_start":16,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7027173,"byte_end":7027177,"line_start":222,"line_end":222,"column_start":19,"column_end":23},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8257153,"byte_end":8257161,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2850},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8262265,"byte_end":8262272,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8263932,"byte_end":8263940,"line_start":77,"line_end":77,"column_start":6,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/sleepers.rs","byte_start":8271708,"byte_end":8271716,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273088,"byte_end":8273098,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273129,"byte_end":8273139,"line_start":18,"line_end":18,"column_start":25,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273155,"byte_end":8273165,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8273734,"byte_end":8273744,"line_start":46,"line_end":46,"column_start":20,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280054,"byte_end":8280059,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280602,"byte_end":8280606,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280631,"byte_end":8280635,"line_start":49,"line_end":49,"column_start":22,"column_end":26},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8280645,"byte_end":8280649,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8283394,"byte_end":8283398,"line_start":146,"line_end":146,"column_start":15,"column_end":19},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8283676,"byte_end":8283680,"line_start":158,"line_end":158,"column_start":16,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8284127,"byte_end":8284131,"line_start":170,"line_end":170,"column_start":21,"column_end":25},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8284858,"byte_end":8284864,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8285190,"byte_end":8285196,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3223},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8285808,"byte_end":8285816,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289655,"byte_end":8289666,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289810,"byte_end":8289821,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8289986,"byte_end":8289997,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3248},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8290365,"byte_end":8290374,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8300201,"byte_end":8300211,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8302790,"byte_end":8302800,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4332},"to":{"krate":1,"index":8204}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8303558,"byte_end":8303566,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307529,"byte_end":8307537,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307690,"byte_end":8307698,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8307853,"byte_end":8307861,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3356},"to":{"krate":1,"index":8197}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8310041,"byte_end":8310045,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8317891,"byte_end":8317895,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318374,"byte_end":8318378,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318492,"byte_end":8318496,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8318977,"byte_end":8318981,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320145,"byte_end":8320149,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320638,"byte_end":8320642,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320831,"byte_end":8320835,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8320951,"byte_end":8320955,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8321099,"byte_end":8321103,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322223,"byte_end":8322227,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322264,"byte_end":8322268,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8322535,"byte_end":8322539,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323774,"byte_end":8323783,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323820,"byte_end":8323829,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8323845,"byte_end":8323854,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324245,"byte_end":8324254,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324562,"byte_end":8324571,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8324697,"byte_end":8324706,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8326267,"byte_end":8326276,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8350380,"byte_end":8350391,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8357180,"byte_end":8357191,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4358},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8357336,"byte_end":8357347,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4358},"to":{"krate":1,"index":8147}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363446,"byte_end":8363453,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8363652,"byte_end":8363659,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4370},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379166,"byte_end":8379175,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8379380,"byte_end":8379389,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380174,"byte_end":8380184,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380693,"byte_end":8380703,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380796,"byte_end":8380806,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8380912,"byte_end":8380922,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381079,"byte_end":8381089,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":4698}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381214,"byte_end":8381224,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8381254,"byte_end":8381263,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":302}},"from":{"krate":1,"index":6973},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8381976,"byte_end":8381980,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382453,"byte_end":8382457,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382619,"byte_end":8382623,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8382764,"byte_end":8382775,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383072,"byte_end":8383076,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383169,"byte_end":8383173,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383290,"byte_end":8383294,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":4698}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8383441,"byte_end":8383445,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385101,"byte_end":8385105,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8409955,"byte_end":8409958,"line_start":816,"line_end":816,"column_start":22,"column_end":25},"kind":{"Impl":{"id":312}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410187,"byte_end":8410190,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":5,"index":3769},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410485,"byte_end":8410487,"line_start":833,"line_end":833,"column_start":22,"column_end":24},"kind":{"Impl":{"id":314}},"from":{"krate":5,"index":2923},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410690,"byte_end":8410694,"line_start":841,"line_end":841,"column_start":18,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4431},"to":{"krate":5,"index":317}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410818,"byte_end":8410822,"line_start":849,"line_end":849,"column_start":23,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410916,"byte_end":8410920,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8410998,"byte_end":8411003,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"kind":{"Impl":{"id":318}},"from":{"krate":1,"index":1927},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411099,"byte_end":8411102,"line_start":867,"line_end":867,"column_start":29,"column_end":32},"kind":{"Impl":{"id":319}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411228,"byte_end":8411231,"line_start":874,"line_end":874,"column_start":22,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411331,"byte_end":8411339,"line_start":880,"line_end":880,"column_start":22,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":1,"index":6361},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411520,"byte_end":8411526,"line_start":892,"line_end":892,"column_start":22,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":5,"index":4732},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8411615,"byte_end":8411622,"line_start":898,"line_end":898,"column_start":22,"column_end":29},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414770,"byte_end":8414774,"line_start":1016,"line_end":1016,"column_start":33,"column_end":37},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414881,"byte_end":8414885,"line_start":1022,"line_end":1022,"column_start":33,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":1,"index":3978},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8414981,"byte_end":8414988,"line_start":1028,"line_end":1028,"column_start":33,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":1,"index":7047},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8416797,"byte_end":8416804,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422050,"byte_end":8422057,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422165,"byte_end":8422168,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":380}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422268,"byte_end":8422271,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":381}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422422,"byte_end":8422429,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422546,"byte_end":8422553,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422662,"byte_end":8422670,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":384}},"from":{"krate":1,"index":6361},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422779,"byte_end":8422786,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8422892,"byte_end":8422899,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":7497}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423078,"byte_end":8423085,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423280,"byte_end":8423287,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423444,"byte_end":8423451,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423572,"byte_end":8423579,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1570}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423671,"byte_end":8423674,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423806,"byte_end":8423809,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8423960,"byte_end":8423967,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424079,"byte_end":8424082,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":394}},"from":{"krate":5,"index":3769},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424305,"byte_end":8424307,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":395}},"from":{"krate":5,"index":2923},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8424522,"byte_end":8424529,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425534,"byte_end":8425541,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425670,"byte_end":8425677,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8425782,"byte_end":8425789,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8430920,"byte_end":8430939,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4047},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8431211,"byte_end":8431230,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4047},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8431954,"byte_end":8431964,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":402}},"from":{"krate":1,"index":6652},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8432259,"byte_end":8432271,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"kind":{"Impl":{"id":403}},"from":{"krate":1,"index":6674},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8432636,"byte_end":8432648,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":1,"index":6677},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8436367,"byte_end":8436373,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8438370,"byte_end":8438377,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8443452,"byte_end":8443459,"line_start":200,"line_end":200,"column_start":18,"column_end":25},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8448349,"byte_end":8448356,"line_start":339,"line_end":339,"column_start":27,"column_end":34},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8448631,"byte_end":8448638,"line_start":349,"line_end":349,"column_start":46,"column_end":53},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8451501,"byte_end":8451512,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456168,"byte_end":8456176,"line_start":194,"line_end":194,"column_start":21,"column_end":29},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4756},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456540,"byte_end":8456551,"line_start":206,"line_end":206,"column_start":38,"column_end":49},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8456965,"byte_end":8456976,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8457105,"byte_end":8457116,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8457275,"byte_end":8457286,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8460213,"byte_end":8460222,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8467963,"byte_end":8467972,"line_start":296,"line_end":296,"column_start":15,"column_end":24},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4774},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8468652,"byte_end":8468661,"line_start":324,"line_end":324,"column_start":16,"column_end":25},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4774},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8469983,"byte_end":8469992,"line_start":370,"line_end":370,"column_start":36,"column_end":45},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4774},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470401,"byte_end":8470410,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470539,"byte_end":8470548,"line_start":389,"line_end":389,"column_start":24,"column_end":33},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8470703,"byte_end":8470712,"line_start":395,"line_end":395,"column_start":24,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8222}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8473641,"byte_end":8473650,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8488741,"byte_end":8488750,"line_start":498,"line_end":498,"column_start":36,"column_end":45},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4791},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489149,"byte_end":8489158,"line_start":511,"line_end":511,"column_start":22,"column_end":31},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489287,"byte_end":8489296,"line_start":517,"line_end":517,"column_start":24,"column_end":33},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8220}},{"span":{"file_name":"/home/mak/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8489451,"byte_end":8489460,"line_start":523,"line_end":523,"column_start":24,"column_end":33},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8222}}]}